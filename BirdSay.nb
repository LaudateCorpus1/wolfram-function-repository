(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1470414,      27191]
NotebookOptionsPosition[    725179,      14403]
NotebookOutlinePosition[   1463051,      27019]
CellTagsIndexPosition[   1462362,      26997]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["BirdSay", "Title",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.746383174654771*^9, 3.7463831762657833`*^9}},
 CellTags->{"Title", "TabNext"},
 CellID->771812398,ExpressionUUID->"73472f8a-f7dc-4453-892e-7bd885afa486"],

Cell["Drastically improve the formatting of output.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.7463831847215767`*^9},
 CellTags->{"Description", "TabNext"},
 CellID->7981612,ExpressionUUID->"818c9d18-1fdb-46b1-ae36-5eecc923be6c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  TemplateBox[{"Definition",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Define your function using the name above. All definitions, including \
dependencies, will be included in the resource function when it is generated. \
Additional cells can be added and definitions can be given for multiple input \
cases.\n\nThis section should be evaluated before evaluating creating the \
Examples section below.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "efc24a9b-0194-4ec0-94d9-640b0e8f43d9"]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Definition",
 CellID->608264297,ExpressionUUID->"fc15ea8e-4c8c-4b7e-84a2-2d3c3b382f27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$bird", ":=", 
    RowBox[{"$bird", "=", 
     RowBox[{"BinaryDeserialize", "[", 
      RowBox[{"ByteArray", "[", 
       RowBox[{
       "CompressedData", "[", 
        "\"\<\n1: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\n\
fooCOBGtAZ+f0I+UeLz/B/6sMuo=\n\>\"", "]"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BirdSay", "[", "expr_", "]"}], ":=", 
   RowBox[{"Interpretation", "[", 
    RowBox[{
     RowBox[{"Panel", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"Appearance", "\[Rule]", "$bird"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", "\"\<Output\>\""}]}], "]"}], ",", 
     "expr"}], "]"}]}], ";"}]}], "Input",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.746383200827078*^9},
 CellTags->"TabNext",
 CellLabel->"In[66]:=",
 CellID->77889823,ExpressionUUID->"dcce6857-68e7-47ad-b490-db3e1a3c706a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Deletable->False,
 CellTags->"Documentation",
 CellID->855965831,ExpressionUUID->"b59baf49-7dce-411d-b149-217444b9fb20"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  TemplateBox[{"Usage",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Document every accepted input usage case. Use Enter to create new \
cases as needed.\n\nEach usage should contain a brief explanation saying what \
the function does for the given input structure.\n\nSee existing \
documentation pages for examples.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoUsage"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "5a1805a6-dab8-495d-b0e6-b1855f2e426c"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"UsageInputs",
 CellTags->"Usage",
 CellID->694807545,ExpressionUUID->"caf169dd-32e2-46fd-b498-57d1567efefb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BirdSay", "[", 
  StyleBox["thing", "TI"], "]"}]], "UsageInputs",
 CellChangeTimes->{{3.746383212341826*^9, 3.7463832159348335`*^9}},
 CellTags->"TabNext",
 CellID->523254948,ExpressionUUID->"676f203c-f44a-4324-b460-0b8e44d77b2c"],

Cell[TextData[{
 "ask a bird to say ",
 Cell[BoxData[
  StyleBox["thing", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ffa0a5b9-fd72-48ad-83cc-f58e74ba2339"],
 "."
}], "UsageDescription",
 CellChangeTimes->{{3.746383222297065*^9, 3.7463832255685344`*^9}},
 CellTags->"TabNext",
 CellID->677074461,ExpressionUUID->"b427ea9b-46e6-41b3-8aca-a1071e5c821f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  TemplateBox[{"Details & Options",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a detailed explanation of how the function is used. Add multiple \
cells including tables and hyperlinks as needed. Typical information \
includes: acceptable inputs, result formats, options specifications, and \
background information.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDetailsOptions"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "3ae0b42d-5b00-4f0c-8d8c-33efc3d55ac3"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Notes",
 CellTags->"Details & Options",
 CellID->29639701,ExpressionUUID->"5afcd84e-dc26-4f7d-a8e0-4151120aac0c"],

Cell[CellGroupData[{

Cell["Some birds can say words.", "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7463832307053843`*^9, 3.746383232110336*^9}},
 CellTags->"TabNext",
 CellID->533233984,ExpressionUUID->"c15cbd8a-6158-4df3-8989-008064de997e"],

Cell["This bird can say anything.", "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7463832307053843`*^9, 3.7463832468978844`*^9}, {
  3.746390791274925*^9, 3.7463907912759266`*^9}},
 CellID->181442125,ExpressionUUID->"fbbff408-ce9c-42a9-8da8-6df0489ef020"],

Cell[TextData[{
 "Look at this bird: ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Wi4ppaJcJJIKeSGXY7IOwDI2bKzTtgE/s461vBSAn8G5kPOknUnDHFXUflXp
aUkzeg2jB9L1bqyWBSf3ZTIDudxQPj9cLALpeLVKVKtNkE1lrFIdAXAIwAuF
kWx22EkP2RZQQ+OGNanjbjqzWsajpefU9LzsLEhOQHBCWBXbK9gLvOXljQVO
n2O1WVZbgARtHuJ0L6v6IF7xMYqXlhdYCStRSgpAlBxOSaGk6I+zCzHGG6Hm
IHjbRT0M1MnEYCoxkkiNJ6kJmp1mCGcPJ8zz4gJoYxWVkKRHZIuSbU52SG4o
WV0vWEgJsLUrGaKyQ/ZYKwW9WtKrFbVchqWRHkKhBM5cxmHTuuBojKMzWRsl
ks9mVhYDjbqvUlpAKcw6M2lr3DQGdK3PVY9p9BGZvZbVZ5s9mXR/NjuYzw4V
8yNQpTReq0w26kT1+iRQ19+oVh0nJi+M5vOjucwIUKftYTs9gWrrZMn3E6zc
vJn1GFmflvNr2bCSiciZIPmQzg5Itl+0fIS26ReMoGiGJCsMyXZEtCOCEeL1
4NWqBjgtwGoRWgnRcpRSYyklgk1KCCZ5XytJ4pQH6U1QIz3iqIlDqeRkip6m
uFlAZoUFCIRdP/sIZy0mmSklLSoZFVJzBjgb5Yxdy6er2RZqwrmUtSolo1bV
6lW1VCXRUcxzuUKLM+cYrS97cHkH18VicXUp2Gz4kc8tzhl7Im2OWPqABbxa
v2X2g3A6PZBJDwJyPjdQyA2DXrk0AgEmkDYbU4vNaajprhAhX53ALaiWxkuF
8UJuLOdAE/nsTC7vyRXms/i7iv50wW8VfFY+aOSjQK1mIir5bC3e2ihOmMwL
5GFKzdBaltKzlJqmSGebTsh2HEEqWTHBjDM6lIBYI4k9aMPYcHWKm0/QkDdK
e2LUFHqPSGw4lhhN0FMpbo7h5znRK4gBiJe9ogzIAQkjhZ6UDAqcZUdBaLh+
TpuVLDg7tdynfjbLeaNa0Go1rdbQKhXi50JZKhSkXB7uFbKW2wqSKolUEcsl
5PNSw1ev+Mr5BcIhOwkgWXvEsQfT1gBWEM46Q3lnuJAdKuWHysUxhAMIQ+AJ
qkuLM9Dy0uzS0uzyomdl0bPUmF6sTzWqU7XyWLU4WSpMFHOTpfxMpThfLnrR
rpfLgUolmCsFMqVwphhJF+JWLm5mEmo27h6URbE30YcWWLPAG0XJKMpmyVVB
1HO8lmU0hybM0wnJTvJWijNpzqb4NM0YFGGuxEiACAtJ1oMMIeJm0ZaANryd
Yjw0t8CIPl4KiUqEeFgNSjLWqKQlAFk0OdGWxLQiObqSNfVCBlTT1aJdyRHB
yeWsUS2Z1arhclarVa1cU4oV+FbK5cBZzNlS3pIKWaS3Vikr1fLaSmC5GWxU
vdWSp1yYBZBidqzkjOadEeDNZYbz2ZFCZqQIG+eHqqVRoINXm7XJFmTghVaX
5taWPWvLC6tL8xtLC2tNz0p9eqk6Xa9M1svTjeJ0tThTK883qn6iWgBDaLUa
KlVC+XI0V4xmijEnn7TzCSOXMnJJM59yCnS6xDsVOV3VXZmQVTHMkmIVJZ3Q
ZvXMFW0JhC2qdYzGmixQc1qK0sKU7E+J3qQYBHPX4cEE56fZAMUFaD7ICCFO
ikhKHBL0mKwm4GRRT0kWL1iSaMtiWpMyaTWf1Yt5o1Kxq1UEBTKZxHKlCMh2
vWHVF40GtKzVFpVKTSxX3FLoSPm0XMrIFZLeyHClWtxYC60u+xfr3nrFUytN
VwqT5fxEJTdWzI62VMqPQLXCWL04vliZWKpOgiG03JxZWbwivLG6sLWysLns
XV/xbi4urC/Or9RnV2pTzdp0szq7WIY8zZpvqRFaaYSXm+HFRqRej9Rq0XIl
mi/F8iXypUuwdQpMJs9kS0K2Kjl11WmYmUbGqWedupOupdMV2ykbVlk1yjA2
b+Y40NYcVrYZwaaFNIcOgRxd2jyww9W0lqS1OKvGGY2FKDVBSbGUGKXFGC1G
GCkqKHFZTRLpKUVnVJOWTVYyRdFSCWTHlLNZOZ/XSmX41qzWXANXgQ5xodfr
dmMp3Vw2mysQOKvVJlAjJYAakwv6PXCG1XVSJfNrS/61peBK07tY8zQqM43S
RLM8CaS1wgTWltyL40uVMaBbbcysNWeh9cU5gAXe7VX/zppvbyOwsxbYWfFv
rfhwfaM5v97wrDbmoeXK3ErVs9bwrzYjq0vR1cX4SjO21IwBdbUaq5QTxUqi
UKELFT5b5RFy2YqSb5iFhp1fzOQWC7lGPtd0Mo20U7PSUFW3S7KVg6slIy9o
GVHOcOS7cI6IdpcMwhlFdGTe4TiLc4/lRc6WeEviDJ5WKcDnNJpTKE6J82pC
0pKKQckmLVk0egwSy5Yk2QSyknHkfAFC/Jq1plWrw8AQ2NqNFWtpzV5aSy+v
p5c27cUNo76q1Ze0BkGNrCDNXrWMxIDzjVJBLeVXF30rTf9awwsgK3W832eX
q5OLpcml8lRrhXCFEK5PrjVm1pdmNpY8EGCC8O56cG8jtL8ZhMh+Lbi7GsD1
rSUY27e+6F1v+vDLr7QYXl+Jry8nVxcTK834ciPWrCWaVapWYyo1oVyTS3W5
WLuCXFp0SovZ4lIhv5TPLebyzVy2nsk20pm6ka5qxNVFGVILopYX1LyqugcR
cimNYBTyJsoQSpiMFTmZNZC0SAPBYDmVBXBW53idgXBFNnnFEkiDYctQC7Ls
pJG0cr6klppqZQkYrfoyCFuLy+nlVeDNrGxn1nYyG7vO+o69umUvb1pLG+bi
ul5f0qtVNy5IYuiVvFHKuZy9S/X5tSUfcnVjyYdoXWtMgepKbYKwrc2u1qdx
Zb05uwEDL81ur3i2Vj2ujQE2vL8ZPdx+o83IwUb0YDUM2vsroZ2V0PZycHMp
tNkMbi76iZYi28uJzZXUxlJqbSlBXN1INBt0o8HVGlIF/6CmDpWW0uWlTHWl
UFrJg3NhuZBfKcDbhUVi7Cy0aKdBu27YFc2sqGZZx4CmVdJqyUEDplWKYiWv
lLNypUCGtXIW0zFQw+ScJYAwBNqCygkag5In2wLwqmlFdlQIdwSxLGdh5rxS
KGvlRaW6pDfWzMWN9Mo25KztZtf3oNzmUWbzJLN55mycOmuH9squtbxlNtZa
HQjMrJXhZPK3ywVnczUI1CB89a5fngdMFyzBu9Wc2V6c3V70bC55QHh3bX53
bYFo3b+3ETnYih1tJ493kyc7yZO91PFu/GgrfrgZO3aBH65F99YiREuRveUQ
0WpsdyW+u5LcWaE2lpNrzcRqk15a5JaaUmNRayxZCLzGcq62nKuv5Otrhcpa
sbRaKq1WiJaLxZUiIb+Sd/MEymWb2cyik14sQFa9ZDZKeqOiN+tqvQZJtTJS
1KzXpXKeVP+0LFgib3LwMK/SEDhLBuGMp0BYyWhyxpAzFmIZZlYKRTTGWrmh
VZeNxQ1reQcwnY3j3OZJfvM8u3We277Ibl/mdm5jxcP0+pG5ums115HVhHOp
pBRzIAyh/TjYCOOdDsKAc7geOFjz7q8u7C57oO2lmd2l2b0lz97Swv7y/OGq
92jNd7juIy/bDB5tRU924md71Pk+DWFD9jups+3k2WbiZDN+vHGlo7UEmB+s
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
//ITf/Rb3/zj3/y5P/uDf/Dnf/p7/+pPfuN/+91f+fbv/jIy5Ee+cIHK+EMX
pX92L/+r9blviD2/zLb/xfL07xltvxj823+Ymfrhuig55P/4aJWyWWu2OGe3
LvK790p7D6qHT+vHz6Hq8bP68dPaydP66Yvm+avF89dLFx8tIh/OPwHeyun/
x8RbR8d1YNnef3zzeqa7A8aYbZnZltmWLZbFzIzFzMzMTCoxM1tsyZKMkpll
ijGJw5zunpk3/Z2S0nmz1l533arIWfavdu2zT9W9cpUK7AiR03cudgN2AA6c
sbJanLKepG0hGTtJ5l6IDt/1KtQEMR0UJ6L5LsqS+vT7NXKL+v26REq4iBIu
pIZCPvCpIYBXSIsQUCP4lHAuKZSND/VBxgVwcIHI3ICoiGOQBrCLbd+yBt7+
8Gb3fRR/eBekKwQvmPbM0Z35aREB/tuO7/M7dmDjnm2f7N666sCOdbs3fwIL
8o5NK4NPHyYiU10a0oPZgaleN8y7GjPLribX2PnDHdb2cuF4m/WzF3Nvn8+9
nb/07vnsu5c3Pnt1c7BZO91fce18PQuVZJRi64WlLeTEAVxMRfiGttD1DzJ3
PMjdeyH04/uZe65gEkt8N7pmZ5aW+q7Px1DySbxiuqyUo0LwNBi+DivQYwU6
nECHh3PewolQTxBb8BInQeb20Ra7UAJ7Kd/q87zYBfJBlngxsgqsvBo4EzXN
REMH2dhDs5zjUeJ5lAQBLVHISBBSY0Q0n70BuNinyEWJqGeFlAgBORz6MPh2
UfBw4ZkwLjEcIDPwIUwMFAyfirJCIiNOwBSDWIYKsW/XemjOx/23QamDEIYY
OQx4D2w+dXAr5PD+7Wt3+S3fs2315g3Ltm5aAZaGF+Lwro05qSHj3RU/fPn4
x69f3p5qeHx98PHV4ae3x+9c7L06WjPZ64JYhriAdjF/a/CzT2+8eDz9xas7
w22mVo/4wrlqPjmLR8wt55e5EOETwhxn4mHXmTV9YavGI9ZMRm24lXfwOiaa
h8pLL87PKSvNRaFysZRCMruEKUFx1Ri+FoQTaHACFUAm8NQgEk9HFhiIYiNR
YiVIXXiZA4BjhDaIlxKexZcqQidG5EKLwe0+zlhFDUHdSNK3UczdNEs/lxzP
JSUCap+xaXFCYE6JFVCiQSJq1L8In128sJZDDIH4ZROCfRczEyGQw7mEMA4+
lIkNBvkgo06RECHQxE4e23Fkv+9Dtp07fV/xwzng3b75EzjCagY148Cu9UAY
3Lvw+c8nWzYu91u/fN+OtccObg47viPu1PZGB/+f//zbP3796qevXjy9NfLb
L+9/+eHdz1+9/vz1zQfXepvs/GaP6NZM6+3Lndcmm948m3356PKbZ9fuzY7U
mJndNRqHhkYpSjCyEDZc8jAztTnrZHnwhqaglX2BfxkOXzabuWcOHcVA5aUV
FeQgS/LR+AI8qYTCRjDFGJ4KKwTCYGANQagmCLREng81ka8iCdQkkZEsNpMl
NjzQFlswQosvW3hmMDZa6FjkjJF4ADVOWUtQQ3Q0kw3tVEsPm5TAJvhQ86mJ
XGo8l5rAJcfxyTF8cpSAFCUkR8ORT4wE03IIEWx8OAsXxsD7BCfwkI3zXa7P
wATRUGcoiAAozNkpx2DjCzyx+6j/tm1+K/fv3gBrBQAHux7cvcF3VUbgYbDx
qSNbg0/s2bV5FQTy3q2rgfmJ/ZuDD20LPbQlOfwItyTqs6eX/vnP//r737/7
5cc3f/v5qx++ev7d+/nv389//e7u7elGswTLIWZdHq+HdjEzUvPp/ekv3t1/
cHPg3txAnYXWYOdVmNkCfJaJhjBT8sfY8e15AZ7w9bVBq9pO/Xnw7IahnJMX
sKnCkozMovwCFDIXgykkkEvJTARTCJx9+SAy+AiLNCSRnizUkARKEl9BhqNY
SxYbKFIrWWIhia0EoRkrMC4mOVpgxfos7cQuWBqnqCKoakiaBoq+lWRsZxET
2YREDjEJUHPIiWxyHIcUyyPGcolRHEIklxCzeAJi48+ycBFMbDgdF07DhoHg
nIEByCF0dDAVGUhCnSSXnQ45tQNKBfQHiFnYNU4c3Q6Qt29d5bdxGaSH7xuN
netBpUkhmZEngo7uPQV74sFNQYc2Bx3ecvrw1tTIkzmRxzjouP/69cvv3s2/
fzb31dvZ797e/fn9o+8+v/9qfvraWO1Iq5lLzmThM66ONz2+MTLaZpkern79
6NLju8NjnbZqCx2Og21WkwBhZ+ZUSbEtqJDewlPesI2uoNUNAR92xWyvy42w
47IVuIIiREEeqrQAiy0iksooLCSDj+HKgTD4lijUUURaskRDFWtoYjVDqKAL
VXBOkeopMgsVUIvNBKERx9eDsDwDTmDBC61YkR1Q4yQegsxLUFQDaqKmgahv
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
BjbOjDpamBLCI+co2AiDgNBSqau1iqQshFJAFNLRAhoKJGZiJRwipEedS2GQ
kjH58Tnxp9u8SrMYpeXlDTaqOh20+5eaHlyo7fSymkwkIDzZotayspWUNDO3
1MLNMrDOGpjBZlaQiRVgYQWaOMFGlo8zhLOGFwN4tYIkje9G3UQYhXJapIIW
q2enejWl8L+aG616dWvkty8f/eP7R75B9s2jX9/N/fhq5tcvbv769vqPL85/
86jr52ejX95rezlpfztX/8WtpndXq356d/Xz2ap3VyuejBmuNPHeXvQ+n3aM
e9F3OgVPx42Ph+TPxowQzoAah/D5mVSWBOnh8zYSjA19L52CzfqDM4OYxyTl
g5lZ5CIWucBnZmrh2TP79+3fuXrtqqN7NuZH+8cF7EgM3pcZeRCm3pkDm8HD
4ORTu9emhe8jFUaxsJkydomMWQrhU2uX1NmEcj6KRy0Vc/FcKkLEROlEJJ2M
qZaw9HKORc2yKOkwl3OTArPjAqilCQ0m8mij8tHV1tsXqtudrCYb7UKHrkaH
d8nQGk6RSYCyS4qs3EAr+4yNGWhiBhs4gUZWiM/Y/HAD33cHjUYQr+TF+/oG
E2IkqUpX2lsjnR1yvbzT88vnN/7767v/+c29376+/dtn1797NvH988nvno7+
9GIK+sN3D/p+e3P1l+cj39zv+PJWw/f32r+arf7yRuODfuWTc5LHY6abrfzZ
Fm6bOrdBmt5nzOlX5054EBP2ksfDqifn1K+n7GDdxdBY5PzHOYQ2Cfk7ZzoB
NpS8RTEXRiGHXCxnofLTwo4c3r9m3drdfqtKk4LiT+9MC92fH38s/vTegN2b
Tu3fcHLfeugVqNwwCSNfxUWp+WVKbpmCjXZq2C4lFV4sGq4AJiCLUsohlZpk
jHKTwKBgq6VMo5JnkNMMEpyAnF+aESGmF/TUyy72e57eGro8VH6uTt5bI682
Uvn41Jz4MzRUolOJd0oyTJwgC+cMcLZwAsDPPsj8cAs/Qsc9q2SEgMDMFZrC
Li/t2jnry7kO8Orfv7gJwfv3r+5AGvwIdfezO4D3zdW2b+dHf3w99cvzsV9e
Xf7xyeCvL8f+9u7Kj/Ojzy84H49ob3aL54dNn067X132Pr5gbdXmDrvwPZbS
6XrWxUbWhRrKnV4xmPl6E+fNBefLGRfMR0iJxcSAI4QzOBmPSFkUCZ3xh5//
QO2bhpQCIbMUlRNz7NCuDZvW7tuzgZgfnRy0JyVoP/g29vSO0KPbgvy3nty1
Ji5ov4xXBrZ0mgReM1/KKpZw0TYtT85BoQuT8MgcJrmESSzmEotEHJxBybSr
hDopzahgOnUc6BsNNpFVhheTM9q8/JEu64U+d4ub1WQnNtsxlfoiEzcRn30i
Nsg/7OQBREaIgRnq5gWZOGcsvBALLwiOGnawihpg5EZ4VekjTcKb486nVxq+
fNgPPeGHJ70/Pp/49c2lb5+Offt85rtn4z+8mPju2di38xPfPhn59dX0T76f
Gf72weBns42vr5Tf7tc8GtbfHTVe65A+GLE+GrM9veB4PlU+26fsdhPPuYk9
LmKfgzBezRorp9zqFFxsoN3vV765XPXFneZnk7ZXl5z4snhfaCCT/lc+p+Cg
3aHSyL58zvoD9WI+w97NoRbCJh5+2n/9ulWwJrPQqYTskLzIQ8mhe6BpxJ7a
HXxoG3S2gzvX8mh5DgPbbRFWu6RGOQ4eqsQEERtJxBbk5yYW5yZyaAgeDcml
lcp4RJ2CZVJxDXIGyK5iNntlQ63GwTZ7U7m8pVJSa8K4BDEVkpgaWbSTH+Ji
B7m4gdXiYAUxPDroaNgp35ePGlqoWxxsZp/SMU4bWIE1ioyJZt7bWz3fzA//
9nrmb29nvnsw8P5RP/SEX15OAc8fXpz/6c30d/MD7+91gb6fH/rx6divn138
6l73/Ij5m4eDXz0aeHGp8tWNtheX697d6353q2mwHHdrQPFgTPv4vHKkjqwj
RQ070aPVdHL2qTYN0sNKmW0WvL9W8/Xt1hfT1vlx+8NR7WwzacSDBLy40oQ/
5iBEBxmRCuFMQqcDZzLGNwcBNR3n68+/74PkwrT4M/u2b0iJO63jo3LC/DPC
99KLImHXSw73P7Vv/e5NK9et+gBZGOdQknQSpElFN6oIRgXSqsRblFijAq1V
ULHo3Ky0aAELJ2AilVy8RkI3q3lWvRDiwqZmVlqFTdX6oQ5nb6OpwU6r1uTU
qmIa1XG18pgaSYxXEl4pCC0XhHh5gU5hYGlaUHp0QGZsUFZcMLMkyCOO6a2g
PJ6u/OrR4D8+u/Ht09HPbzZ986AXFmHI2++fQ2F48MtnV75+0PHjm4vfPjn3
w8uL//kVxMX466v190ddN3qU94YNr683vrnX+/CC9/55+8Mp64PzlgejhulG
zqALN1pD6jZmXahAW9iJQlSEnZeiwEUJkeEzFYxXM9Wf32h5dsFzvo4218lq
1hfqabEi9FluSfAiZ58Qv/t5oT+nQWiQURlwBPkiGpez+PkG9DFMQdzB3Rsy
EoPkQrSIkVMce5hcGIbJDo48vmPH+iXrV/515ZK/xEeetKvJBhnaKMcYlNDQ
sHYVyqnBlOsxXh3Ka8RphOi8rHixgCiT0NVyjkHLs2j4JiXLrGNXu7Qem6K9
TtFZQW6z5beYMloNCa2ahDp1fL0iulYWUS2JqBSfrRCHVEqCq2TBUlKkgV8C
NV6ITztfr35xueHnN9e+fHju6aTv/f7qSh30hJ9ejf32euibJ32wmv34YuSn
V+d/hux9Pf3zy/N/f33hxbWOPgv6dr/qfAXl/pjt5WzjiynHbJdo2I0adCPb
zcW18qx2U9H5SuLtPqFHmOgVJXqgDTLiMFmnaNmBgvzwSl7h/Hn3Z9cqIbrN
tGglNkJDjUKknSpOPpUZfrg4/hA4GVsSv4j6jwoNnImodOAMfl7MjX/15xw2
Lis6YH9mUjB0MzGjODc1GPbr6FM79m9bvvyDf1vy4Z+Wffyno/47VRKUWYkz
AWEVwabG2zU4p45QrsNW63FVRmytCVVhQGYlh6hEWIeJY9Fy7QauyyJzWlUe
p6LKKWt0ULoced22tC5rarslrc2Q3KKPb9bE1quiamSRNfKIGml4pTzcIw4u
5wdWSSJHa3jVKsSlXuM/3l3+7sWFd9cbnky43t9u+eFB5//95fFnc1WvZxxP
R/QP+wU3O/hXm+n3hzVQce/2Cue6pJNVtMlqzrPLtXdHzE8mnG9vNj+7aH96
wTJSjuvSZnWbix2MhApJxlg1ecBZVi9P11KiOMVBhQmHMPFHTZR0BzvrQoPo
waAaCPfbEUZ6amrInsK4gOL4o/mxx2FNy40OyEuJBsi/qyxhMah9obHA2Wfp
hQpNw2czcZlsXI6YVlSSHlqYFgoTTcoqLc6Nh1176Qd/WvvJh2uW/WXlkg9W
LvvrpnXLaLg0m5ZgkmGsKpzPyRpcuQ7v1eMqzYQaK6nGgq23otrdhJzkUDE1
s9uLbnagau3YGhvs2rhOF6LLVdxXntftye9x5nbZczttGa2WVLB0szahUZ3Q
oI6uUUZXS8+Wi8PqtcmjVaS5btWD8646ParTzYH59e2jc98+6vzqduOjMd3z
Yd2Li7X3+g2fzda/nPHe61O1a/OHvPjhcvStAc2nN1qfXm2D4fjubvOra547
I5q3c3WvZ+x3zinOOZBOeniFOMnBjKnXlth46QZWCjHzRH70fkJWQNyp7UUR
B19NOFts6MwzW9t1ZVPNdEr+qayzh7IjD+dEHSqMPlKUFJKXHFtSXIglMPFM
KaY45g/UUJ59FRqZSvxfnKkL+6DvV0eSCkglicXpEWJGKTRnNqVwx9aNH/31
39au/mDT6iVLP/y3VSs+/GTZn7MSA+0aglGKBT/blXgws0dHLjcQKo2EGjOp
1kKqt2AabOgeL5FUGospiDpXhe9wlHa5QIhed2F3eW6fp7jPXdjjzut15XS7
srscqV3mlHZDYqsutlkXV6eNq1ZENanj+uwFd4askLc/v7/xy7up++NOESr2
06vVn1+vnWvlDFnRTaKsMTf1Wof8yweDsFM8GlI+HDPf6FM9u1JxqUP+09sr
//yfb377/v6X99vf3aqBHfnhqPrxsGa2T94kz6wWJXXqi92CFDE2Ap8RiEk/
kxx8MPTYpsTA/cXR/rK8MxdqOA5JUfKZbSJMsltQiEw/CYtwWpg/bGe5qVHo
MgSOyCAzpWSujMiWo5gCbGE0oMaUxoMgOhbmoC83fv/8H5dFxS9+zp/FIeZA
qnBo+VAbpFxEZPCxjz/4P58s/4vf+uUrlvz7mk8+Xrb0g+P+W3yDT4Yxq7AW
Fd6pJti0OK9+ITFMxHrgbMU1ObCNVnRXBVGAT8pKDuquxLUCZ3sxqNtd0ucp
7fUW93mKAHWvJ7/LmdXtyIIAabWkt5qTGnSxtYqzQPjZpQpoDj+/mvr+5cTX
j4e+nh/++/tLg5XCsVr+/XHzbI/h/oDh+UzNk0nzXBtjflj3csr2csZzd0gL
nK+fk90eVr+62fBkxnNvRH2liXZ/yPBwSH2xnjxVQ+gy5pYLkttMRVxkRF7U
vvjTu5OC9qWHH4wL3h11ejsp/dSAtqxamJsd6R98YH1+7JncuJOxQbvOHvU7
e3J7RmwEqgRJ4cpIfDkQ9tmYxsfRBRgqB1cUgy+OJZTELZqZjEikIJPI6FQ6
ZuG7P2wam5DJJWfCssyn5App+QJqnpKDxBQlrl3+4YqP/wwpAaGxdOmfV69c
snblUvgjYGazHOtQYQGyS4N363AePdZrxFeZiGDmRhuh0YZrsGI7vAS7tCAh
4kirHdHpQnY6fHHR6y7yES4vWOCc2+XMGXDldlnSO6zpHab4Os3ZDms2+O3Z
dPWXTwa/ftz/5ZORL+50v7/b9+ZO+/yEBYx6pUvx7Gb7/EXPg3NKmIDvb7V9
Pdfy1c2md7Pel1crHo7qXt9q/PRa+Ww3+0avaNRZMuQsutLCudzEutzGHnIh
u0xFRkqEQ1koZGTEBG5NCt2ZGnoo8vTus/4bimOPAG0JOhqC98iOT04f2BAT
uDMhxD/l7Knk6EBEQRYWjWEKVAyBmsxWENlSgIxnCElsCZ4pItD5BIBcHEss
jQe8VFQyiI5JBVxsfBqXmCYkZ/DJGQJqhoSWLWPkwlonZxdJWAX+uzeBmcHD
m9cuW7n0P9YA6o/+T2zUcbuOaJaiHAoccIZkdmmxwBn8DKFRbcED5wYLGVC3
WDEdDkyjFRUdcswszustR3Y7SiA6ut1lA54ygHyuGuEVxFbSwvrtBUO16Ika
4sUO/tyg6tn1ts/u9b+50fTptZpn16pf3Ox497D99Y2qW/2yB6O6q1286TYu
ROVct+hqG/PxuPbBpPH941FY2eZH1M+nLNe7uLMd7GstvMlKwrC9pEGW0Wko
O+fBeiVJ5aI0IeIMszCIVhiuEpRkJZ1MCtkbdXJ76KHNp/asgu6aF3bg7JFN
u9ctObR9VdrZkwVpUQRkHotJF0p8V9/xJAaORE8WKEh8BY2nJHN9fqYLlECe
xldQ2EJCaQwJEUdB+DjT0UkMTDIXm8whpgBeESVTRsuW0rOlrFwFK0fFLlax
ioxiREpswEcf/QkSY+Paj1ct+wAEqLdvXKHkF9sUaKscAxXOoUYvmhmSucJA
Xghnoi+fbUQwc5MNA+ouJ0FuMMpiBiox7Y4y4NzjQfR7inpchX0VRZ3GktFy
ytUe+f1JK7zfL7cLr3Qpbw4ZppupN/uFV7sEd0dhQdPfG9PdOSe72sm+e05w
q4s9VU+61EyZa2ffH5B9/rj7zpAcfAt9bNSNHbCWtOny+5zIFmV2kyTdzkqU
4SIlqHAlMYpeFFCcdCwj8mBZdkReWlBs2N6gQxuDD/oF79sQfWxHccyJgN2r
Tu3dmBx5BlucxaCT1FqN2mCRG80SvZmrMnBkeqZYQxeqaSIdQ2Jgi3Vsie+C
XuAMGcIUKVlCObkshoGIoyLjWKgEJjaJT0wTENJEpAxoAjJGloKZqWTlaNh5
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
PYgd+hR+uen/Aslgbkw=
     "], {{0, 150}, {120, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
       "], "RGB", "XYZ"], ImageResolution -> {434, 434}, Interleaving -> True,
      MetaInformation -> 
     Association[
      "Source" -> 
       "http://en.wikipedia.org/wiki/File:Petroica_boodang_Meehan_Range_1_\
crop.jpg", "URL" -> 
       "http://www.wolframcdn.com/waimage/hset050/86e/\
86e5ac36df28e1906bb4d8332bd62260_v001s.jpg"]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{57.99999999999938, Automatic},
   ImageSizeRaw->{120, 150},
   PlotRange->{{0, 120}, {0, 150}}]],ExpressionUUID->
  "94bc4031-9432-4990-8c38-8745dd7e936d"]
}], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7463832307053843`*^9, 3.7463832468978844`*^9}, {
  3.7463907919809217`*^9, 3.7463908575864997`*^9}, {3.746391022179982*^9, 
  3.7463910221810017`*^9}},
 CellID->43597922,ExpressionUUID->"8f619629-a70e-466c-a217-b0ddeabae641"],

Cell[TextData[{
 "Fact: this bird is way cooler: ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
gvn/rq6u+Oe/Pp7+8y9X2Xx1S+fXeU1t+YWLkkPFh1cOHJT4G9mLajYmVOQz
xLmE4eCQBfhNv1esozHNcTatvuMQtyNGbREq6Dr93KOanf9mssJjCI0KEZ2D
kT8vlca+tlF8zFku2papC9N4LlPGfRQF739pM/L+NfJhbWVdVVAw/eQnn34+
1CQfzdZXLH48W1YuKXn37YXxffqY4jeKE+i5g6zdsWnAY/g5e5dYe9Dsehuy
I7yOpAhXcndjXtQ44jkU/T2i0Nc0P9SfIxz93UyoPRaBBDqHzTO6mDuRrhZq
Y+3o7iGYuiCd+NDfmw/yuWYzW7+SYsAnMhHZJRhKjcIUy8jgrLFHvFsk4j06
0P0j6Z637t/fTZyz6ltnTivA2pPiKbkosxJplVKpxoaNm4tZjq8F9oPN8Zm9
+94HBbE9ejB9wfxaXsfsprLF3KgknErbxGv9qhuIMRoNVtOhK+a1VdW5B1CR
uwvn9Dvqz6Pq9nCU6XZzlOv3cJQRLhCO52zGSJ/uooyQ7GoszNC5ZxgKFqZj
bpP5yEBoR3/y3QQuF0rSk2Po2sdzNqJCt4vuv6v2/jXtqtfW/F1YHDsZljIN
JAoWv0uq1GoN+VebS4gPaU3M0FT7XVZ2QfLZ50e7sjlGhVxRyWpo5bymX4JY
x/b4dOLzuEnxHoszWlRvo6+JU+hTK9bb1K8lYLWDh/8AJfz8C1nbMdrEB8v/
akg+OtXwsbIR9sMUkzC7PnVxGoIifaBQsmdlcwVKpPv3wxXiAbojYptub4fe
dJx9n/8O9g+YiygbX8jFHEwViz82v7pl96XLvzAb0mT5YPnzsvLz0v/758fj
23r78DUvbO6bceGmscXsqDG4lLUT1flvodJQ3PL6J5KNKnYdXQl+Z3VWt9Xi
sBi/IVSa6nQqdDsw3jdWlA/Sp2bER0eur9K4vuLxXyPkg51bsDid4nl3ivsk
UJDdtlNaIDdsKCoMO0h+D/Hcz+3tqKkXquLjqhifj12LyQHxsJIp2VxjFasR
f2XDpoMVFy8rmiMf5RfOSz7+9BPDqKSkm5bWVmJ9syDays5O/igcuhi/kt4w
8rpkUx1zCzm5xU3jryXWxx3Ctdx9yA4aCDnL7cmYf6VA+6h2yJs7CXPW5PC+
/mM+tKI9X5ElysfCbHj6u0MiSLjtcFfbY2bHJPys3y3WbDfCX6nI3o5lsWmw
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
D0s+yJ59lfIiIqx8RVtenw/b1sBHfXm5tf8Sf+cM2eXKvAP8vWhf0nMcGbkc
W8gPfiI6Gcl+8ejtGoEO9u3gb+FKcmBDeoz44esxpNxPE0xzFl2tfHCAbNS1
nP0Plw96HjZPHm7drh4fpK+Ij1Lig+2X37J9+R5Y+w1FpvfdHCBdRnpmCnFU
UEK2uRDn0rfgM7Lbbw5dgj2D5+LV/tOxvk8+VvXIJh8sma8vZ/skpAclwBCS
gFd656I0awvFLw/ZfuSLdSRDPbvCTK5m+9dyPhIGDLp0/MRpR+JD2lr5uIWD
vK6pWk+c6AoBrZiPY3MHyCcZmsL2wyrhXLF6+pvkG1zO2oXS1Nfx7YSXcSpt
A67liu/4+tPi+T8YX8x+sLVycyLHoI3GjtlAzkfikGEXz5VdkJ49d6FV6asG
wX3jmn68lScR9yqp844ilvvWMrB8QAn3E6pMaz14Po1x+hD9XQYWm/+SvQsb
yOfzs3Wv2TfW2KFjp9/37N2/5sTJUkfmY5W2YC/Rmnf0PSxU1cGt/x+qd6w1
gb3/853Ry9HV0b92jzBWOx3dqROOfflln7Lylr3LU9zz6BEaA5bfYXUDx3O2
YAjFSWyPF4VcfPdaWFhY5RfHjsa1dM985tM/QuPA35Wbfwil+duRHToYjoIl
f4cR4yM8PByfH+XvMGhR/uq5nlrUosetv5/t0TDqnX+X8x7U7x/0fe71u+di
c7kfOMinC2xVlnwOm/ERERGBr7/5pl9z5wVrEGTljkBCkAmB1u4IYLC6DaZj
9c697bsA6z9AS3/fWNRpb6B1w383eJ/G/M5abG+wpQv8rdrA2dwGarmidi9L
R0fH6oKCgrNHj33V61zZ+WbnFNn6AhlfoyqC7c0o5RAaRP1zGz7nbmjp7xsP
+W24T7+TSkW/Siaizv67lfb29jj85ltPVYh1cM2aHxTfgdYQ5H+Axp73oH7/
oO9z99/xOsfb9gCu4cPFxdX45pG3F7D3cjSXD7HeWIS0kWjq+ff79w8Tt7/3
ri4fzs4uID4WtoSP/wfjUt02
     "], {{0, 100}, {100, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJylkL1Lw0AYxh9bpaIVBR0cHCKIg1QUXQQXq0NRRCSt4NeSpEkqpGm4pEhx
dHDt4KLi4gf+B7qJ/4AgCOrkoM4OCiKIxOcaoSA6ecfd+8tz7/vm7unVS6oV
A+A3c1O19bQQWiXbwY8F11+zXTM/7QambYoxvYFiVeYiVnWMot84DBTdQKiZ
SWVxaVlJPCCBJsQxjiHN8L30/Pws/hxvN5ANcT0oe/2d9+tozZu+ATTIS48Z
ngjIE+S59cCTXCV3GQUtTz4ipwQvSL6Suh7xk2Q74nfJIqdO8W1JsmJHnJKs
RyzfohgFUSQ75L6iUza+7yNfkjTdhSxjT235UJHBJBToKGMNDgIMMrr07Pe6
kVrdHEqsMbh7qECwwkaBtSmqZXY1GS3qJqfDDA7p/U9PfWt0JPpDcgZoegzD
1wEgsQd8boXhx0EYfh4C8TvgYrteX9qmnc/Uq3Wtbx9o3wROz+uafgyc0ePu
e08TWk2Kc8UsC3g5AdqWgE563bLy3/PI7+9zHN4CuQ1g9hLY2QX6md+++gXJ
74G4
       "], "RGB", "XYZ"], Interleaving -> False],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{73.33333333333329, Automatic},
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}]],
  CellChangeTimes->{{3.7463910039639883`*^9, 3.7463910175865955`*^9}},
  ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ExpressionUUID->"85a8a12d-7b0a-4d23-8e9a-0193e5fba88d"]
}], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7463832307053843`*^9, 3.7463832468978844`*^9}, {
  3.7463907919809217`*^9, 3.7463908575864997`*^9}, {3.7463910228045287`*^9, 
  3.74639103391722*^9}},
 CellID->277434961,ExpressionUUID->"689360e7-3382-42ae-b2fb-a7da873efac5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  TemplateBox[{"Examples",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Demonstrate how to use the function. Examples should start with the \
most basic use case. Each example should be described using text cells. Use \
\"Subsection\" and \"Subsubsection\" cells to group examples as needed.\n\n\
Example groups can optionally be delimited by inserting page breaks between \
them (affects example count on documentation page).\n\nSee existing \
documentation pages for examples.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoExamples"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "a1e99f1c-6d84-4d40-99d6-14a78e5c5762"]
}], "Section",
 Deletable->False,
 CellTags->"Examples",
 CellID->847663398,ExpressionUUID->"99f33a5b-6d1a-4d29-b452-d88e57981af7"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellID->202476530,ExpressionUUID->"34d263ff-b782-4f11-9f52-5b080caf55f2"],

Cell["Have a bird say your output:", "Text",
 CellChangeTimes->{3.7463832667706547`*^9},
 CellID->129491836,ExpressionUUID->"d98b6643-0d95-4399-87a7-5cee591758b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BirdSay", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746383256498923*^9, 3.7463832595618296`*^9}},
 CellLabel->"In[68]:=",
 CellID->178987041,ExpressionUUID->"9e169680-ab0d-4502-b26a-256a59e61b56"],

Cell[BoxData[
 InterpretationBox[
  PanelBox[
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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

         "]]},
       Annotation[#, "Charting`Private`Tag$1224193#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-5, 5}, {-0.999999987301805, 0.9999999723133323}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}],
   Appearance->Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
     "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
         DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
           "Instant", "Gregorian", -4.]]]],
   BaseStyle->"Output"],
  Graphics[{{{{}, {}, 
      Annotation[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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

         "]]}, "Charting`Private`Tag$1224193#1"]}}, {}, {}}, {
   DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
    AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
    GridLines -> {None, None}, DisplayFunction -> Identity, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
    DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{-5, 5}, {-0.999999987301805, 0.9999999723133323}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}]]], "Output",
 CellChangeTimes->{3.74638333903315*^9},
 CellLabel->"Out[68]=",
 CellID->464853532,ExpressionUUID->"3899ab3c-56ae-4e8a-bf21-cd3dd06d1fe6"]
}, Open  ]],

Cell["Birds can say words:", "Text",
 CellChangeTimes->{{3.7463903438929305`*^9, 3.746390348356789*^9}},
 CellID->1325452,ExpressionUUID->"d23fc396-703e-4e6a-8e3d-685a35048223"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BirdSay", "[", 
  RowBox[{"WordCloud", "[", 
   RowBox[{"WikipediaData", "[", "\"\<words\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7463903508667173`*^9, 3.7463903718787923`*^9}},
 CellLabel->"In[22]:=",
 CellID->298041645,ExpressionUUID->"a2370c4b-c78d-49bf-b976-5b18a22b9974"],

Cell[BoxData[
 InterpretationBox[
  PanelBox[
   GraphicsBox[{InsetBox[
      StyleBox["\<\"word\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.2348993288590604],
       FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"words\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.1913658625068021],
       FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-14.5, 36.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"language\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.09885724650825321],
       FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {3.5, -34.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"languages\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08797387992018865],
       FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, -58.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"meaning\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07709051333212406],
       FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-21.5, 63.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Cambridge\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06076546345002721],
       FontColor->RGBColor[0.571589, 0.586483, 0.]], {-0.5, 81.5}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"example\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07164883003809178],
       FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-11.5, -80.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"Orthography\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.049882096861962634`],
       FontColor->RGBColor[
        0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {73.5, 56.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"English\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06620714674405949],
       FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-87.5, -33.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"morphemes\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.049882096861962634`],
       FontColor->RGBColor[
        0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-0.5, 96.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"boundaries\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06076546345002721],
       FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {5.5, -98.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"University\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.049882096861962634`],
       FontColor->RGBColor[
        0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {93.5, 35.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Philosophy\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[
        0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {66.5, -76.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Semantic\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05532378015599492],
       FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {79.5, 70.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"morpheme\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {96.5, -28.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Features\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05532378015599492],
       FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {92.5, -53.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Encyclopedia\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-93.5, -51.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"speaker\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[
        0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-95.5, -13.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"distinguished\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-77.5, 74.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"sentence\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.049882096861962634`],
       FontColor->RGBColor[
        0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-95.5, 55.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"particular\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {100.5, 0.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"considered\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[
        0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, 109.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"boundary\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {98.5, 12.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"ISBN\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06620714674405949],
       FontColor->RGBColor[1, 0.75, 0]], {-99.5, 1.5}, Center, Automatic], 
     InsetBox[
      StyleBox["\<\"expressions\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {92.5, -39.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"constitutes\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-82.5, -73.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"typically\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {96.5, -13.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"multiple\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {68.5, 83.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"compound\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-71.5, 84.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"spoken\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-62.5, -93.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"spaces\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-0.5, -110.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"primes\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], 
      {-106.5, 18.5}, Center, Automatic], InsetBox[
      StyleBox["\<\"Press\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05532378015599492],
       FontColor->RGBColor[
        0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {61.5, 96.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"analyzed\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-64.5, 94.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"written\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.049882096861962634`],
       FontColor->RGBColor[
        0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {73.5, -93.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Forms\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.049882096861962634`],
       FontColor->RGBColor[
        0.28026441037696703`, 0.715, 0.4292089322474965]], {-45.5, -110.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"fundamental\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.4177882075393331, 0.715, 0.25417864494993975`]], {-0.5, 120.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"classification\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {3.5, -121.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"depends\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.15725938678540247`, 0.715, 0.5857607804549424]], {44.5, -111.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"complex\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-55.5, 105.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"alphabet\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {55.5, 110.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"smallest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-59.5, 116.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"different\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {54.5, 121.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"2010-01-07\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-58.5, -122.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"structure\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {60.5, -122.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"theory\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-108.5, 30.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"introduction\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {95.5, -105.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"tradition\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-91.5, -105.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"single\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-102.5, -85.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"concept\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.5788038738141875, 0.715, 0.049249615145579635`]], {103.5, 92.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"inflectional\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-0.5, 130.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"number\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-0.5, -132.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"fascination\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-59.5, 127.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"chapter\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.31827505306025683`, 0.715, 0.3808317506505822]], {-111.5, 41.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"introduced\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-50.5, -132.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Definitions\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {49.5, -133.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Oxford\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[
        0.47401116530937026`, 0.47809330081437784`, 0.85]], {-107.5, 93.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"ways\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {103.5, -65.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"determine\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {53.5, 132.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"century\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {118.5, -76.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"characters\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-102.5, 104.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"delimit\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {98.5, 106.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Grammar\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-108.5, -61.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"confusion\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {102.5, 117.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"e.g.\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[
        0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-118.5, 68.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"history\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {114.5, -86.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"sound\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.7513196300394465, 0.358, 0.48066210763162087`]], {-105.5, 115.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"affixes\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {104.5, -116.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"added\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-108.5, -117.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Goddard\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {100.5, 127.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"called\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {93.5, -132.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"suffix\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[
        0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-102.5, 127.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Chinese\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-97.5, -130.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"verbs\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {131.5, 48.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"stand\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-0.5, 141.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"make\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-34.5, 141.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"David\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.37977756485605163`, 0.715, 0.3025558265468435]], {130.5, 66.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"given\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {133.5, -15.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Classes\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-0.5, -143.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"root\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.049882096861962634`],
       FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-134.5, -13.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"John\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-125.5, 77.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"consist\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {121.5, 79.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"rock\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.04444041356793035],
       FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-133.5, -27.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"units\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-129.5, -72.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"certain\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {34.5, 142.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"koalas\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-36.5, -142.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Free\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {134.5, -40.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"ed\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05532378015599492],
       FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-132.5, 0.5}, Center, 
      Automatic], InsetBox[
      StyleBox["\<\"ideas\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {32.5, -143.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Anna\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-133.5, -39.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"told\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {135.5, -65.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"unit\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.47929071933511125`, 0.715, 0.1759027208462221]], {135.5, 21.5}, 
      Center, Automatic], InsetBox[
      StyleBox["\<\"2005\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-64.5, 137.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"2003\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {61.5, -143.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"extra\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {64.5, 142.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Core\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-64.5, -142.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"5th\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03899873027389806],
       FontColor->RGBColor[
        0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {137.5, 0.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"Cliff\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[
        0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {88.5, 21.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"due\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-137.5, 11.5},
       Center, Automatic], InsetBox[
      StyleBox["\<\"BC\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03355704697986577],
       FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {69.5, -66.5},
       Center, Automatic]},
    DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{-149., 149.}, {-149., 148.}}],
   Appearance->Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
     "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
         DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
           "Instant", "Gregorian", -4.]]]],
   BaseStyle->"Output"],
  Graphics[{
    Style[{
      Inset[
       Style[
       "word", FontSize -> Scaled[0.2348993288590604], FontColor -> 
        RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, Automatic], 
      Inset[
       Style[
       "words", FontSize -> Scaled[0.1913658625068021], FontColor -> 
        RGBColor[0.880722, 0.611041, 0.142051]], {-14.5, 36.5}, Center, 
       Automatic], 
      Inset[
       Style[
       "language", FontSize -> Scaled[0.09885724650825321], FontColor -> 
        RGBColor[0.560181, 0.691569, 0.194885]], {3.5, -34.5}, Center, 
       Automatic], 
      Inset[
       Style[
       "languages", FontSize -> Scaled[0.08797387992018865], FontColor -> 
        RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, -58.5}, Center, 
       Automatic], 
      Inset[
       Style[
       "meaning", FontSize -> Scaled[0.07709051333212406], FontColor -> 
        RGBColor[0.528488, 0.470624, 0.701351]], {-21.5, 63.5}, Center, 
       Automatic], 
      Inset[
       Style[
       "Cambridge", FontSize -> Scaled[0.06076546345002721], FontColor -> 
        RGBColor[0.571589, 0.586483, 0.]], {-0.5, 81.5}, Center, Automatic], 
      Inset[
       Style[
       "example", FontSize -> Scaled[0.07164883003809178], FontColor -> 
        RGBColor[0.772079, 0.431554, 0.102387]], {-11.5, -80.5}, Center, 
       Automatic], 
      Inset[
       Style[
       "Orthography", FontSize -> Scaled[0.049882096861962634`], FontColor -> 
        RGBColor[
         0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {73.5, 
       56.5}, Center, Automatic], 
      Inset[
       Style[
       "English", FontSize -> Scaled[0.06620714674405949], FontColor -> 
        RGBColor[0.363898, 0.618501, 0.782349]], {-87.5, -33.5}, Center, 
       Automatic], 
      Inset[
       Style[
       "morphemes", FontSize -> Scaled[0.049882096861962634`], FontColor -> 
        RGBColor[
         0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-0.5,
        96.5}, Center, Automatic], 
      Inset[
       Style[
       "boundaries", FontSize -> Scaled[0.06076546345002721], FontColor -> 
        RGBColor[0.647624, 0.37816, 0.614037]], {5.5, -98.5}, Center, 
       Automatic], 
      Inset[
       Style[
       "University", FontSize -> Scaled[0.049882096861962634`], FontColor -> 
        RGBColor[
         0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {
       93.5, 35.5}, Center, Automatic], 
      Inset[
       Style[
       "Philosophy", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[
         0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {
       66.5, -76.5}, Center, Automatic], 
      Inset[
       Style[
       "Semantic", FontSize -> Scaled[0.05532378015599492], FontColor -> 
        RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {79.5, 70.5},
        Center, Automatic], 
      Inset[
       Style[
       "morpheme", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {
       96.5, -28.5}, Center, Automatic], 
      Inset[
       Style[
       "Features", FontSize -> Scaled[0.05532378015599492], FontColor -> 
        RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {
       92.5, -53.5}, Center, Automatic], 
      Inset[
       Style[
       "Encyclopedia", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8774935098648088, 0.34000129802703827`, 
          0.2750108168919853]], {-93.5, -51.5}, Center, Automatic], 
      Inset[
       Style[
       "speaker", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[
         0.16397784358994957`, 0.7038177251280403, 
          0.6117734123079395]], {-95.5, -13.5}, Center, Automatic], 
      Inset[
       Style[
       "distinguished", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.6102054708420535, 0.39696347534213544`, 
          0.7619863228948663]], {-77.5, 74.5}, Center, Automatic], 
      Inset[
       Style[
       "sentence", FontSize -> Scaled[0.049882096861962634`], FontColor -> 
        RGBColor[
         0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-95.5,
        55.5}, Center, Automatic], 
      Inset[
       Style[
       "particular", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {100.5, 0.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "considered", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[
         0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, 
       109.5}, Center, Automatic], 
      Inset[
       Style[
       "boundary", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {
       98.5, 12.5}, Center, Automatic], 
      Inset[
       Style[
       "ISBN", FontSize -> Scaled[0.06620714674405949], FontColor -> 
        RGBColor[1, 0.75, 0]], {-99.5, 1.5}, Center, Automatic], 
      Inset[
       Style[
       "expressions", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {
       92.5, -39.5}, Center, Automatic], 
      Inset[
       Style[
       "constitutes", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.7132613816472081, 0.358, 0.5392132590042952]], {-82.5, -73.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "typically", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {
       96.5, -13.5}, Center, Automatic], 
      Inset[
       Style[
       "multiple", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {68.5, 
       83.5}, Center, Automatic], 
      Inset[
       Style[
       "compound", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-71.5,
        84.5}, Center, Automatic], 
      Inset[
       Style[
       "spoken", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.8342400905885153, 0.4628267270590103, 
          0.0038160815296638794`]], {-62.5, -93.5}, Center, Automatic], 
      Inset[
       Style[
       "spaces", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.2187618985811806, 0.715, 0.5074848563512248]], {-0.5, -110.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "primes", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.9038177251280404, 0.3492734123079395, 
          0.18454431282010084`]], {-106.5, 18.5}, Center, Automatic], 
      Inset[
       Style[
       "Press", FontSize -> Scaled[0.05532378015599492], FontColor -> 
        RGBColor[
         0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {61.5, 
       96.5}, Center, Automatic], 
      Inset[
       Style[
       "analyzed", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-64.5, 94.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "written", FontSize -> Scaled[0.049882096861962634`], FontColor -> 
        RGBColor[
         0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {
       73.5, -93.5}, Center, Automatic], 
      Inset[
       Style[
       "Forms", FontSize -> Scaled[0.049882096861962634`], FontColor -> 
        RGBColor[
         0.28026441037696703`, 0.715, 0.4292089322474965]], {-45.5, -110.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "fundamental", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-0.5, 
       120.5}, Center, Automatic], 
      Inset[
       Style[
       "classification", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {
       3.5, -121.5}, Center, Automatic], 
      Inset[
       Style[
       "depends", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {
       44.5, -111.5}, Center, Automatic], 
      Inset[
       Style[
       "complex", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-55.5,
        105.5}, Center, Automatic], 
      Inset[
       Style[
       "alphabet", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {
       55.5, 110.5}, Center, Automatic], 
      Inset[
       Style[
       "smallest", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.9784200278733908, 0.649600139366954, 
          0.058265924741844846`]], {-59.5, 116.5}, Center, Automatic], 
      Inset[
       Style[
       "different", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {54.5, 
       121.5}, Center, Automatic], 
      Inset[
       Style[
       "2010-01-07", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8781534541180211, 0.4921023027453475, 
          0.04333810870621905]], {-58.5, -122.5}, Center, Automatic], 
      Inset[
       Style[
       "structure", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {60.5, -122.5},
        Center, Automatic], 
      Inset[
       Style[
       "theory", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.8607200975568693, 0.34335598048862614`, 
          0.30296650407188447`]], {-108.5, 30.5}, Center, Automatic], 
      Inset[
       Style[
       "introduction", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {95.5, -105.5},
        Center, Automatic], 
      Inset[
       Style[
       "tradition", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.9492067688690977, 0.5394711792460651, 
          0.10728609198218791`]], {-91.5, -105.5}, Center, Automatic], 
      Inset[
       Style[
       "single", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.428777913273419, 0.5052332520359486, 0.85]], {-102.5, -85.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "concept", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {103.5, 
       92.5}, Center, Automatic], 
      Inset[
       Style[
       "inflectional", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-0.5,
        130.5}, Center, Automatic], 
      Inset[
       Style[
       "number", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.6536293927965667, 0.37163285420200276`, 
          0.6534265180085832]], {-0.5, -132.5}, Center, Automatic], 
      Inset[
       Style[
       "fascination", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-59.5, 
       127.5}, Center, Automatic], 
      Inset[
       Style[
       "chapter", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-111.5, 
       41.5}, Center, Automatic], 
      Inset[
       Style[
       "introduced", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.6453361616656581, 0.37647057236169945`, 
          0.6741595958358548]], {-50.5, -132.5}, Center, Automatic], 
      Inset[
       Style[
       "Definitions", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {
       49.5, -133.5}, Center, Automatic], 
      Inset[
       Style[
       "Oxford", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-107.5, 
       93.5}, Center, Automatic], 
      Inset[
       Style[
       "ways", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {
       103.5, -65.5}, Center, Automatic], 
      Inset[
       Style[
       "determine", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {
       53.5, 132.5}, Center, Automatic], 
      Inset[
       Style[
       "century", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {
       118.5, -76.5}, Center, Automatic], 
      Inset[
       Style[
       "characters", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-102.5,
        104.5}, Center, Automatic], 
      Inset[
       Style[
       "delimit", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {
       98.5, 106.5}, Center, Automatic], 
      Inset[
       Style[
       "Grammar", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.9986489531525362, 0.7507447657626809, 
          0.0036478264881522893`]], {-108.5, -61.5}, Center, Automatic], 
      Inset[
       Style[
       "confusion", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {
       102.5, 117.5}, Center, Automatic], 
      Inset[
       Style[
       "e.g.", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[
         0.8857244243136628, 0.3764133635295058, 
          0.1393110607841571]], {-118.5, 68.5}, Center, Automatic], 
      Inset[
       Style[
       "history", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {
       114.5, -86.5}, Center, Automatic], 
      Inset[
       Style[
       "sound", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-105.5, 
       115.5}, Center, Automatic], 
      Inset[
       Style[
       "affixes", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {
       104.5, -116.5}, Center, Automatic], 
      Inset[
       Style[
       "added", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.7678998606330495, 0.7317110956258943, 0.]], {-108.5, -117.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "Goddard", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {100.5, 
       127.5}, Center, Automatic], 
      Inset[
       Style[
       "called", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {
       93.5, -132.5}, Center, Automatic], 
      Inset[
       Style[
       "suffix", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[
         0.8613800418100862, 0.48092002787339083`, 
          0.02824203762907758]], {-102.5, 127.5}, Center, Automatic], 
      Inset[
       Style[
       "Chinese", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.5750747800184488, 0.4174563783225715, 
          0.8498130499538777]], {-97.5, -130.5}, Center, Automatic], 
      Inset[
       Style[
       "verbs", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {131.5, 
       48.5}, Center, Automatic], 
      Inset[
       Style[
       "stand", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-0.5, 
       141.5}, Center, Automatic], 
      Inset[
       Style[
       "make", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-34.5,
        141.5}, Center, Automatic], 
      Inset[
       Style[
       "David", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {130.5, 
       66.5}, Center, Automatic], 
      Inset[
       Style[
       "given", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {
       133.5, -15.5}, Center, Automatic], 
      Inset[
       Style[
       "Classes", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-0.5, -143.5},
        Center, Automatic], 
      Inset[
       Style[
       "root", FontSize -> Scaled[0.049882096861962634`], FontColor -> 
        RGBColor[
         0.8996399512215667, 0.7463488834690629, 0.]], {-134.5, -13.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "John", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-125.5, 77.5},
        Center, Automatic], 
      Inset[
       Style[
       "consist", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {121.5, 
       79.5}, Center, Automatic], 
      Inset[
       Style[
       "rock", FontSize -> Scaled[0.04444041356793035], FontColor -> 
        RGBColor[
         0.7748409210981391, 0.358, 0.4444755060028629]], {-133.5, -27.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "units", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.8745421494417032, 0.39318677583744527`, 
          0.11135537360425793`]], {-129.5, -72.5}, Center, Automatic], 
      Inset[
       Style[
       "certain", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {34.5, 
       142.5}, Center, Automatic], 
      Inset[
       Style[
       "koalas", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.9107287510704583, 0.33890687339431275`, 
          0.20182187767614543`]], {-36.5, -142.5}, Center, Automatic], 
      Inset[
       Style[
       "Free", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {
       134.5, -40.5}, Center, Automatic], 
      Inset[
       Style[
       "ed", FontSize -> Scaled[0.05532378015599492], FontColor -> 
        RGBColor[0.915, 0.3325, 0.2125]], {-132.5, 0.5}, Center, Automatic], 
      Inset[
       Style[
       "ideas", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {
       32.5, -143.5}, Center, Automatic], 
      Inset[
       Style[
       "Anna", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.9046334610863751, 0.334573307782725, 
          0.22977756485604156`]], {-133.5, -39.5}, Center, Automatic], 
      Inset[
       Style[
       "told", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {
       135.5, -65.5}, Center, Automatic], 
      Inset[
       Style[
       "unit", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {135.5, 
       21.5}, Center, Automatic], 
      Inset[
       Style[
       "2005", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.19193353076984873`, 0.681453175384121, 
          0.6453202369238185]], {-64.5, 137.5}, Center, Automatic], 
      Inset[
       Style[
       "2003", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {
       61.5, -143.5}, Center, Automatic], 
      Inset[
       Style[
       "extra", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {
       64.5, 142.5}, Center, Automatic], 
      Inset[
       Style[
       "Core", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.9840111653093676, 0.677555826546838, 
          0.04316985366470745]], {-64.5, -142.5}, Center, Automatic], 
      Inset[
       Style[
       "5th", FontSize -> Scaled[0.03899873027389806], FontColor -> 
        RGBColor[
         0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {
       137.5, 0.5}, Center, Automatic], 
      Inset[
       Style[
       "Cliff", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[
         0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {88.5, 
       21.5}, Center, Automatic], 
      Inset[
       Style[
       "due", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-137.5, 11.5}, 
       Center, Automatic], 
      Inset[
       Style[
       "BC", FontSize -> Scaled[0.03355704697986577], FontColor -> 
        RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {
       69.5, -66.5}, Center, Automatic]}, {}]}, 
   PlotRange -> {{-149., 149.}, {-149., 148.}}, 
   DefaultBaseStyle -> {"Graphics", FontFamily -> "Helvetica"}, 
   Method -> {
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
     Automatic}]]], "Output",
 CellChangeTimes->{3.7463903835014386`*^9},
 CellLabel->"Out[22]=",
 CellID->138724145,ExpressionUUID->"bbb07096-2ae2-4276-aac1-fac41235c068"]
}, Open  ]],

Cell["How neat is that?", "Text",
 CellChangeTimes->{3.7463832740754356`*^9},
 CellID->142109952,ExpressionUUID->"cf9a9c8e-e401-48cf-80b1-676bc567c70a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BirdSay", "[", "\"\<That's pretty neat!\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7463832793152733`*^9, 3.7463832821781874`*^9}},
 CellLabel->"In[69]:=",
 CellID->195532539,ExpressionUUID->"09cb585a-2334-4e2f-b0cf-841ccf10dabf"],

Cell[BoxData[
 InterpretationBox[
  PanelBox["\<\"That's pretty neat!\"\>",
   Appearance->Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
     "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
         DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
           "Instant", "Gregorian", -4.]]]],
   BaseStyle->"Output"],
  "That's pretty neat!"]], "Output",
 CellChangeTimes->{3.7463833422900295`*^9},
 CellLabel->"Out[69]=",
 CellID->3563123,ExpressionUUID->"4f691337-95f1-4ab1-a1ad-da3110f14da5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellID->926027919,ExpressionUUID->"273b84a3-a414-492e-a261-fb7153e00d70"],

Cell["This bird is a nerd:", "Text",
 CellChangeTimes->{{3.746383306486521*^9, 3.7463833107033844`*^9}, {
  3.7463904232284656`*^9, 3.7463904287644825`*^9}},
 CellID->161711952,ExpressionUUID->"3489c9c5-7e1a-4f61-b9c5-b1018564aa63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BirdSay", "[", 
  RowBox[{
  "SystemModel", "[", 
   "\"\<Modelica.Electrical.Analog.Examples.IdealTriacCircuit\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7463833149392357`*^9, 3.7463833181611385`*^9}},
 CellLabel->"In[70]:=",
 CellID->10910897,ExpressionUUID->"3c137b72-137d-41e5-8dba-c7571531a8f8"],

Cell[BoxData[
 InterpretationBox[
  PanelBox[
   GraphicsBox[
    TagBox[
     TooltipBox[
      DynamicModuleBox[{WSM`Typeset`PackagePrivate`p = {
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJztmmtMWmcYx832ZVn2oVmybE32Zd/2YV+3tcuS6dSJ1qh0okatq0zQmQyL
unqZcYYW0VlveGmjZotoyMRO0KqYVFHRgbFDFK1X0KGiOJ23ihRB3FNOeqKC
tyPgBf55IO95Oe/D8/7OeZ73PcpHxLib5DdcXFwS3oK3m5FJbvHxkSnfXoED
AiXhh2gKKcqbkkiKJsVfI74JndfhFQSvV+0dp5xy6uJrcnJSpVLt7tHr9fn5
+TKZ7KxCsrOKi4tra2uRtsFgKC8v9/DwSE1NLSgoONvA7CaEAMy9oqLC3d29
uroaOrlcruMQYDKZCQkJMPeqqiq006EI5ObmwvRramp2d1qdgOtRsuJ3nVSQ
BWw2u7S01NvbG+VgCwKHfypT6mrFG1b8xuMLrYSbm5vAwcfHh8PhYCAgHNaG
FS5+V7TH3g79B4xGox1J4CpRfi1F5Zo+v8+DLQyNChGRSMzMzESD0Wg0JSUl
Xl5e0I+cuW/4Lea/j8Ua81l8c28+o2aFI9rYbYiHtra2Iwlcvyv/kDRN/3N1
nwdbGBoVopSUlJiYmODgYD6fj4YE6ZCYmIicuW94MX/9Y8qM+SxuZKoFg9pD
5ni4dHrjxkvjIZRsJyQL1Gp1VlYWcGhubt45tA4o1PpPqLPm/YcTOM9KTk5G
d0TAITs7OygoiE6n5+XlWTz/MhEQCoWw/YN8RwkggtsAh8MxGAyLoy4NAYNG
D/e8UqncvSsWiUQkEgm2xGVlZZcjC4wG49aqzqKNZg48/oKlEE8gBGDuZDIZ
quL4+PjOeaoDGSeR+XB50XCXK7/LvcXc2j9/Ivi0Qfg1H9Y+SHyY+9jYGDqQ
x+PBbtliSPYnIOH19ndLZUfJIoH+H3v+Ey1Y9DxVMTaUIoFc0Gq1u+d+pOxP
QPBZoyipw+oEjNsYF187E8i6y2h3a+qObrM6Acyy/z3QFflUwu6FOcIixTAJ
ChcyaxaLhfT09PQ4AgE8Hg+HOTk5r56kZDKBQODn55djkoMQIBAIsI2HBkog
MDAQzYJ7P9PMhzsIgZGREblczgv6Q0LsVtVNzT+ZRu1ZuNBBCKhUqlZ8Q8eX
zUOpfw9nSFGTM59vvzRYN6RzSACkUCiyf8qy+rdb1PkkcNBqaAs5CdifAD+A
W0JmPkwq8ff25z9ofPZIDATgMOfOrwE+Ab1MkdC/RZTQfokJ8LzY1BsUKj4u
K/R+F6X1rzhBwa0HcHgHT6m4/ag7tq3jq6YOXPMlJnDkfri/S3q5s+A0T8e2
0MX6C4kt5CTgJOAk4CTgJOAkcBoCRuPZ/GfQusJMYHt7e3Bw0GCw8tO6/YWZ
wMDAgFarlUqlgMJm0dlD2AgsLCxMTExAY2ZmprW1tbKysqWlxYZR2lLYCPT3
96+srMDVj4yMrK+v5/P5TCYzODj4IlaGExFAfoOh0+lkpt9nEgiEkZERiUSy
vr4Oh1AWQkJCkDNLW9ajHi6uajAmiFy95ctQVwtfYBt+Ih1EIJW9/D5x+mrU
HkMIkMlkKpWKw+E8PT19fX3T09PpdLqvSdATERERGxsLp7n+MvfubeU+D8e0
KxFK8PBO2BS24SeyD76fjihaNCdg2N6BK7jPEAIvTCovL+fxeNBYWloSi8VI
J5fLbWhomJubo/624JY+/3xGZ+7kONY6oHkvVBpXpsQ2/KS2ZcCSvFD6CgsL
kXZfX9/a2ho0ioqK2tvbMXgzV1hY2OyshZvzXAlKH+Q+NOCiKxQKWBkZDMbk
5CRmh0NDQ09fC4/HczgcpN3Z2Wm9qK0pqPxQ+vLy8mAtaGpqCg8PBwhQJzE7
hLS6/1ppaWk0Gg1pH/QjqHMiuEYsFgveYYnc3Nw8pbfR0VHfvWKz2VaJ0w7S
6/WndwJ7DKiodXV1ZSYtLy+f5qa6uGpsbPzdJMecvlNOna3+B1VDgC4=
              "], {{0, 57}, {86, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True, 
              MetaInformation -> 
              Association[
               "Exif" -> Association[
                 "Software" -> 
                  "Created with the Wolfram Language : www.wolfram.com"], 
                "Comments" -> 
                Association[
                 "Software" -> 
                  "Created with the Wolfram Language : www.wolfram.com", 
                  "Creation Time" -> 
                  DateObject[{2018, 1, 16, 12, 14, 58.}, "Instant", 
                    "Gregorian", -4.]]]], Selectable -> False], 
            DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {86, 57}, 
            PlotRange -> {{0, 86}, {0, 57}}], TraditionalForm]], {0, 0}, {0, 
         0}, {86, 57}], {
         RGBColor[
         0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"IdealTriacCircuit\"", FontSize -> 9, FontFamily -> "Helvetica", 
            StripOnInput -> False], TraditionalForm], 
          NCache[{43, 
            Rational[-29, 2]}, {43, -14.5}], {0, 0}]}, {
         EdgeForm[
          RGBColor[
          0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
         FaceForm[None], 
         RectangleBox[{-10, -25}, {95, 67}, RoundingRadius -> Offset[5]]}, 
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
              "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
           TraditionalForm]], 
         Offset[{6, -6}, 
          Scaled[{0, 1}]], 
         Scaled[{0, 1}], {24, 24}]}, 
       WSM`Typeset`PackagePrivate`appearanceState = "Minimal", 
       WSM`Typeset`PackagePrivate`expandedeval = False, 
       WSM`Typeset`PackagePrivate`expandedprimitives, 
       WSM`Typeset`PackagePrivate`expandedopt, 
       WSM`Typeset`PackagePrivate`expandedsize = {106, 93}, 
       WSM`Typeset`PackagePrivate`expandedrange = {{-10, 96}, {-26, 67}}}, 
       DynamicWrapperBox[
        DynamicBox[{WSM`Typeset`PackagePrivate`p, 
          Which[
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Minimal"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (
                If[WSM`Typeset`PackagePrivate`expandedeval === False, If[
                    TrueQ[WSMLink`Private`$WSMLinkIsLoaded], 
                    WSM`Typeset`PackagePrivate`appearanceState = "Eval"; 
                    Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["af6d234f-7bd3-476a-8c2b-f404d2fa21a5"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedsize, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedrange, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null, 
                  WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
                  Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["af6d234f-7bd3-476a-8c2b-f404d2fa21a5"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    WSM`Typeset`PackagePrivate`expandedsize; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    WSM`Typeset`PackagePrivate`expandedrange; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null), Appearance -> None, 
               ContentPadding -> False, ImageSize -> {Automatic, Automatic}, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              TraditionalForm]], 
            Offset[{6, -6}, 
             Scaled[{0, 1}]], 
            Scaled[{0, 1}]], 
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Expanded"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (
                WSM`Typeset`PackagePrivate`appearanceState = "Minimal"; 
                Module[{
                  WSM`Typeset`PackagePrivate`cellobj$, 
                   WSM`Typeset`PackagePrivate`cellEditDup$}, 
                  If[
                   MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["af6d234f-7bd3-476a-8c2b-f404d2fa21a5"]}]]], 
                   WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                   WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = {106, 93}; 
                   CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = {{-10, 96}, {-26, 67}}; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null), Appearance -> None, ContentPadding -> 
               False, ImageSize -> {Automatic, Automatic}, Evaluator -> 
               Automatic, Method -> "Preemptive"], TraditionalForm]], 
            Offset[{10, -10}, 
             Scaled[{0, 1}]]], True, {}]},
         ImageSizeCache->{{-0.5, 105.5}, {-49.5, 43.5}},
         TrackedSymbols:>{WSM`Typeset`PackagePrivate`p}], 
        Which[WSM`Typeset`PackagePrivate`appearanceState === "Minimal", 
          WSM`Typeset`PackagePrivate`p = {
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJztmmtMWmcYx832ZVn2oVmybE32Zd/2YV+3tcuS6dSJ1qh0okatq0zQmQyL
unqZcYYW0VlveGmjZotoyMRO0KqYVFHRgbFDFK1X0KGiOJ23ihRB3FNOeqKC
tyPgBf55IO95Oe/D8/7OeZ73PcpHxLib5DdcXFwS3oK3m5FJbvHxkSnfXoED
AiXhh2gKKcqbkkiKJsVfI74JndfhFQSvV+0dp5xy6uJrcnJSpVLt7tHr9fn5
+TKZ7KxCsrOKi4tra2uRtsFgKC8v9/DwSE1NLSgoONvA7CaEAMy9oqLC3d29
uroaOrlcruMQYDKZCQkJMPeqqiq006EI5ObmwvRramp2d1qdgOtRsuJ3nVSQ
BWw2u7S01NvbG+VgCwKHfypT6mrFG1b8xuMLrYSbm5vAwcfHh8PhYCAgHNaG
FS5+V7TH3g79B4xGox1J4CpRfi1F5Zo+v8+DLQyNChGRSMzMzESD0Wg0JSUl
Xl5e0I+cuW/4Lea/j8Ua81l8c28+o2aFI9rYbYiHtra2Iwlcvyv/kDRN/3N1
nwdbGBoVopSUlJiYmODgYD6fj4YE6ZCYmIicuW94MX/9Y8qM+SxuZKoFg9pD
5ni4dHrjxkvjIZRsJyQL1Gp1VlYWcGhubt45tA4o1PpPqLPm/YcTOM9KTk5G
d0TAITs7OygoiE6n5+XlWTz/MhEQCoWw/YN8RwkggtsAh8MxGAyLoy4NAYNG
D/e8UqncvSsWiUQkEgm2xGVlZZcjC4wG49aqzqKNZg48/oKlEE8gBGDuZDIZ
quL4+PjOeaoDGSeR+XB50XCXK7/LvcXc2j9/Ivi0Qfg1H9Y+SHyY+9jYGDqQ
x+PBbtliSPYnIOH19ndLZUfJIoH+H3v+Ey1Y9DxVMTaUIoFc0Gq1u+d+pOxP
QPBZoyipw+oEjNsYF187E8i6y2h3a+qObrM6Acyy/z3QFflUwu6FOcIixTAJ
ChcyaxaLhfT09PQ4AgE8Hg+HOTk5r56kZDKBQODn55djkoMQIBAIsI2HBkog
MDAQzYJ7P9PMhzsIgZGREblczgv6Q0LsVtVNzT+ZRu1ZuNBBCKhUqlZ8Q8eX
zUOpfw9nSFGTM59vvzRYN6RzSACkUCiyf8qy+rdb1PkkcNBqaAs5CdifAD+A
W0JmPkwq8ff25z9ofPZIDATgMOfOrwE+Ab1MkdC/RZTQfokJ8LzY1BsUKj4u
K/R+F6X1rzhBwa0HcHgHT6m4/ag7tq3jq6YOXPMlJnDkfri/S3q5s+A0T8e2
0MX6C4kt5CTgJOAk4CTgJOAkcBoCRuPZ/GfQusJMYHt7e3Bw0GCw8tO6/YWZ
wMDAgFarlUqlgMJm0dlD2AgsLCxMTExAY2ZmprW1tbKysqWlxYZR2lLYCPT3
96+srMDVj4yMrK+v5/P5TCYzODj4IlaGExFAfoOh0+lkpt9nEgiEkZERiUSy
vr4Oh1AWQkJCkDNLW9ajHi6uajAmiFy95ctQVwtfYBt+Ih1EIJW9/D5x+mrU
HkMIkMlkKpWKw+E8PT19fX3T09PpdLqvSdATERERGxsLp7n+MvfubeU+D8e0
KxFK8PBO2BS24SeyD76fjihaNCdg2N6BK7jPEAIvTCovL+fxeNBYWloSi8VI
J5fLbWhomJubo/624JY+/3xGZ+7kONY6oHkvVBpXpsQ2/KS2ZcCSvFD6CgsL
kXZfX9/a2ho0ioqK2tvbMXgzV1hY2OyshZvzXAlKH+Q+NOCiKxQKWBkZDMbk
5CRmh0NDQ09fC4/HczgcpN3Z2Wm9qK0pqPxQ+vLy8mAtaGpqCg8PBwhQJzE7
hLS6/1ppaWk0Gg1pH/QjqHMiuEYsFgveYYnc3Nw8pbfR0VHfvWKz2VaJ0w7S
6/WndwJ7DKiodXV1ZSYtLy+f5qa6uGpsbPzdJMecvlNOna3+B1VDgC4=
                   "], {{0, 57}, {86, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                   MetaInformation -> 
                   Association[
                    "Exif" -> Association[
                    "Software" -> 
                    "Created with the Wolfram Language : www.wolfram.com"], 
                    "Comments" -> 
                    Association[
                    "Software" -> 
                    "Created with the Wolfram Language : www.wolfram.com", 
                    "Creation Time" -> 
                    DateObject[{2018, 1, 16, 12, 14, 58.}, "Instant", 
                    "Gregorian", -4.]]]], Selectable -> False], 
                 DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {86, 57}, PlotRange -> {{0, 86}, {0, 57}}], 
                TraditionalForm]], {0, 0}, {0, 0}, {86, 57}], {
              RGBColor[
              0.43137254901960786`, 0.43137254901960786`, 
               0.43137254901960786`], 
              InsetBox[
               FormBox[
                StyleBox[
                "\"IdealTriacCircuit\"", FontSize -> 9, FontFamily -> 
                 "Helvetica", StripOnInput -> False], TraditionalForm], 
               NCache[{43, 
                 Rational[-29, 2]}, {43, -14.5}], {0, 0}]}, {
              EdgeForm[
               RGBColor[
               0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
              FaceForm[None], 
              
              RectangleBox[{-10, -25}, {95, 67}, RoundingRadius -> 
               Offset[5]]}, 
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
                   "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                  Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
                TraditionalForm]], 
              Offset[{6, -6}, 
               Scaled[{0, 1}]], 
              Scaled[{0, 1}], {24, 24}]}; Null, 
          WSM`Typeset`PackagePrivate`appearanceState === "Eval", 
          WSM`Typeset`PackagePrivate`p = {{
              EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
              FaceForm[None], 
              RectangleBox[{
                Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
               Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
               RoundingRadius -> Offset[5]]}, 
             InsetBox[
              Evaluate[
               ToBoxes[
                ProgressIndicator[Appearance -> "Percolate"], 
                StandardForm]]]}; 
          Module[{WSM`Typeset`PackagePrivate`md$}, {
              WSM`Typeset`PackagePrivate`expandedsize, 
               WSM`Typeset`PackagePrivate`md$} = 
             WSM`Typeset`PackagePrivate`getExpandedGraphic[
              "Modelica.Electrical.Analog.Examples.IdealTriacCircuit", 
               "af6d234f-7bd3-476a-8c2b-f404d2fa21a5"]; {
              WSM`Typeset`PackagePrivate`expandedprimitives, 
               WSM`Typeset`PackagePrivate`expandedopt} = 
             WSM`Typeset`PackagePrivate`separateGraphics[
              WSM`Typeset`PackagePrivate`md$]; 
            WSM`Typeset`PackagePrivate`expandedrange = Replace[PlotRange, 
               Flatten[WSM`Typeset`PackagePrivate`expandedopt]]; 
            WSM`Typeset`PackagePrivate`expandedeval = True; 
            WSM`Typeset`PackagePrivate`expandedprimitives = 
             Join[WSM`Typeset`PackagePrivate`expandedprimitives, {{
                 EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
                 FaceForm[None], 
                 RectangleBox[{
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 
                   1}, {Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 
                   1, 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
                  RoundingRadius -> Offset[5]]}, 
                
                With[{WSM`Typeset`PackagePrivate`leftmost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                  WSM`Typeset`PackagePrivate`bottommost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1]}, {
                  RGBColor[
                  0.43137254901960786`, 0.43137254901960786`, 
                   0.43137254901960786`], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "IdealTriacCircuit", FontSize -> 9, FontFamily -> 
                    "Helvetica", StripOnInput -> False], TraditionalForm], 
                   
                   Offset[{12, 12}, {
                    WSM`Typeset`PackagePrivate`leftmost$, 
                    WSM`Typeset`PackagePrivate`bottommost$}], {-1, 0}]}]}]; 
            Null]; WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
          Null, WSM`Typeset`PackagePrivate`appearanceState === "Expanded", 
          WSM`Typeset`PackagePrivate`p = 
           WSM`Typeset`PackagePrivate`expandedprimitives; Null]; Null,
        ImageSizeCache->{{-0.5, 105.5}, {-49.5, 43.5}},
        SynchronousUpdating->False,
        TrackedSymbols:>{WSM`Typeset`PackagePrivate`appearanceState}],
       Initialization:>(
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; 
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; Null)],
      "Modelica.Electrical.Analog.Examples.IdealTriacCircuit"],
     WSM`ModelTag["Modelica.Electrical.Analog.Examples.IdealTriacCircuit"]],
    Editable -> False,
    SelectWithContents -> True,
    BoxID -> "af6d234f-7bd3-476a-8c2b-f404d2fa21a5",
    ContentSelectable->False,
    DefaultBaseStyle->{
     "Graphics", FrontEnd`GraphicsHighlightColor -> RGBColor[0, 0.46775, 1], 
      ComponentwiseContextMenu -> {"GraphicsBox" -> {
          MenuItem["Copy Model", 
           KernelExecute[
            CopyToClipboard[
             ReleaseHold[
              MakeExpression[
               MakeBoxes[
                SystemModel[
                "Modelica.Electrical.Analog.Examples.IdealTriacCircuit"]], 
               StandardForm]]]], MenuEvaluator -> Automatic], 
          MenuItem["Copy Model Name", 
           KernelExecute[
            CopyToClipboard[
             StringJoin[
             "\"", "Modelica.Electrical.Analog.Examples.IdealTriacCircuit", 
              "\""]]], MenuEvaluator -> Automatic], Delimiter, 
          MenuItem["Simulate Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                
                RowBox[{
                 "SystemModelSimulate", "[", 
                  "\"Modelica.Electrical.Analog.Examples.IdealTriacCircuit\"",
                   "]"}]], "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Preferred Plots in Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                
                RowBox[{
                 "SystemModelPlot", "[", 
                  "\"Modelica.Electrical.Analog.Examples.IdealTriacCircuit\"",
                   "]"}]], "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Model Information", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModel", "[", 
                  
                  RowBox[{
                   "\"Modelica.Electrical.Analog.Examples.IdealTriacCircuit\"\
", ",", "\"Summary\""}], "]"}]], "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], Delimiter, 
          MenuItem["Open in SystemModeler Model Center", 
           KernelExecute[
            WSMLink`WSMModelCenter[
            "Modelica.Electrical.Analog.Examples.IdealTriacCircuit"]], 
           MenuEvaluator -> Automatic], 
          MenuItem["Open in SystemModeler Simulation Center", 
           KernelExecute[
            WSMLink`WSMSimulationCenter[
            "Modelica.Electrical.Analog.Examples.IdealTriacCircuit"]], 
           MenuEvaluator -> Automatic]}}},
    ImageSize->{106, 93},
    PlotRange->{{-10, 96}, {-26, 67}},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
5g==\
\>"]],
   Appearance->Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
     "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
         DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
           "Instant", "Gregorian", -4.]]]],
   BaseStyle->"Output"],
  SystemModel[
  "Modelica.Electrical.Analog.Examples.IdealTriacCircuit", True]]], "Output",
 CellChangeTimes->{3.7463833462879295`*^9},
 CellLabel->"Out[70]=",
 CellID->48954702,ExpressionUUID->"f1231d24-fc1c-4ae0-87be-bf396e649de3"]
}, Open  ]],

Cell["That\[CloseCurlyQuote]s one smart bird:", "Text",
 CellChangeTimes->{3.7463833251109457`*^9},
 CellID->459530256,ExpressionUUID->"97463e60-49a3-4a02-8333-9e88e8888ebd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BirdSay", "[", 
  RowBox[{
   RowBox[{"FindEquationalProof", "[", 
    RowBox[{
     RowBox[{"ForAll", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", 
       RowBox[{
        RowBox[{"or", "[", 
         RowBox[{
          RowBox[{"not", "[", 
           RowBox[{"or", "[", 
            RowBox[{
             RowBox[{"not", "[", "a", "]"}], ",", "b"}], "]"}], "]"}], ",", 
          RowBox[{"not", "[", 
           RowBox[{"or", "[", 
            RowBox[{
             RowBox[{"not", "[", "a", "]"}], ",", 
             RowBox[{"not", "[", "b", "]"}]}], "]"}], "]"}]}], "]"}], 
        "\[Equal]", "a"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ForAll", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", 
         RowBox[{
          RowBox[{"and", "[", 
           RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
          RowBox[{"and", "[", 
           RowBox[{"b", ",", "a"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"ForAll", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", 
         RowBox[{
          RowBox[{"or", "[", 
           RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
          RowBox[{"or", "[", 
           RowBox[{"b", ",", "a"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"ForAll", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", 
         RowBox[{
          RowBox[{"and", "[", 
           RowBox[{"a", ",", 
            RowBox[{"or", "[", 
             RowBox[{"b", ",", 
              RowBox[{"not", "[", "b", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
          "a"}]}], "]"}], ",", 
       RowBox[{"ForAll", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", 
         RowBox[{
          RowBox[{"or", "[", 
           RowBox[{"a", ",", 
            RowBox[{"and", "[", 
             RowBox[{"b", ",", 
              RowBox[{"not", "[", "b", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
          "a"}]}], "]"}], ",", 
       RowBox[{"ForAll", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
         RowBox[{
          RowBox[{"and", "[", 
           RowBox[{"a", ",", 
            RowBox[{"or", "[", 
             RowBox[{"b", ",", "c"}], "]"}]}], "]"}], "\[Equal]", 
          RowBox[{"or", "[", 
           RowBox[{
            RowBox[{"and", "[", 
             RowBox[{"a", ",", "b"}], "]"}], ",", 
            RowBox[{"and", "[", 
             RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"ForAll", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
         RowBox[{
          RowBox[{"or", "[", 
           RowBox[{"a", ",", 
            RowBox[{"and", "[", 
             RowBox[{"b", ",", "c"}], "]"}]}], "]"}], "\[Equal]", 
          RowBox[{"and", "[", 
           RowBox[{
            RowBox[{"or", "[", 
             RowBox[{"a", ",", "b"}], "]"}], ",", 
            RowBox[{"or", "[", 
             RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}]}], "]"}]}], "}"}]}], 
    "]"}], "[", "\"\<ProofGraph\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7463833292537994`*^9, 3.7463833322873507`*^9}},
 CellLabel->"In[71]:=",
 CellID->104344366,ExpressionUUID->"ff531b64-dc83-4df6-b188-cb059a30a833"],

Cell[BoxData[
 InterpretationBox[
  PanelBox[
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "Axiom 1", "Axiom 2", "Axiom 3", "Axiom 4", "Axiom 5", "Axiom 6", 
         "Hypothesis 1", "Critical Pair Lemma 1", "Critical Pair Lemma 2", 
         "Critical Pair Lemma 3", "Critical Pair Lemma 4", 
         "Critical Pair Lemma 5", "Critical Pair Lemma 6", 
         "Critical Pair Lemma 7", "Critical Pair Lemma 8", 
         "Critical Pair Lemma 9", "Critical Pair Lemma 10", 
         "Critical Pair Lemma 11", "Critical Pair Lemma 12", 
         "Critical Pair Lemma 13", "Substitution Lemma 1", 
         "Substitution Lemma 2", "Substitution Lemma 3", 
         "Critical Pair Lemma 14", "Critical Pair Lemma 15", 
         "Critical Pair Lemma 16", "Critical Pair Lemma 17", 
         "Substitution Lemma 4", "Critical Pair Lemma 18", 
         "Substitution Lemma 5", "Critical Pair Lemma 19", 
         "Substitution Lemma 6", "Substitution Lemma 7", 
         "Substitution Lemma 8", "Critical Pair Lemma 20", 
         "Substitution Lemma 9", "Critical Pair Lemma 21", 
         "Substitution Lemma 10", "Critical Pair Lemma 22", 
         "Substitution Lemma 11", "Critical Pair Lemma 23", 
         "Critical Pair Lemma 24", "Critical Pair Lemma 25", 
         "Critical Pair Lemma 26", "Substitution Lemma 12", 
         "Critical Pair Lemma 27", "Substitution Lemma 13", 
         "Critical Pair Lemma 28", "Substitution Lemma 14", 
         "Critical Pair Lemma 29", "Substitution Lemma 15", 
         "Substitution Lemma 16", "Critical Pair Lemma 30", 
         "Substitution Lemma 17", "Critical Pair Lemma 31", 
         "Critical Pair Lemma 32", "Critical Pair Lemma 33", 
         "Critical Pair Lemma 34", "Critical Pair Lemma 35", 
         "Substitution Lemma 18", "Critical Pair Lemma 36", 
         "Substitution Lemma 19", "Critical Pair Lemma 37", 
         "Substitution Lemma 20", "Critical Pair Lemma 38", 
         "Substitution Lemma 21", "Critical Pair Lemma 39", 
         "Substitution Lemma 22", "Critical Pair Lemma 40", 
         "Substitution Lemma 23", "Substitution Lemma 24", 
         "Critical Pair Lemma 41", "Substitution Lemma 25", 
         "Substitution Lemma 26", "Substitution Lemma 27", 
         "Substitution Lemma 28", "Substitution Lemma 29", 
         "Substitution Lemma 30", "Substitution Lemma 31", 
         "Substitution Lemma 32", "Substitution Lemma 33", 
         "Substitution Lemma 34", "Conclusion 1"}, {CompressedData["
1:eJwVxWd6gjAAAFBNQoqCEVxhuMCFCG4RBXErbsUbeIFep8dt++N9T/t8Rx8Q
i8V+/vwP2TiLEiCBkjDJcHEO84BnUjjFEoaANJvmBSQQEYhCRsyks3yWy2Vy
uTzI5wu4UKAiFSQqEZnKnEIVokqqWiRFplQslcpMWarIlUqVVquapGk61VFN
r9XqqI4aeqPRRM1yK9FqGcAw2nzbMKEpdYyOYJlWx4a23bW73V67p/Ttfn8A
BsrQGg5HYDQY43F9kpxMHNNxpnDquNidzvDMnZvzmWd4Ix/78wVcLAIvCJZw
2VstV2S9Wq83YNPcbrbbnb+T97v9/jA+HI7y8RjS8OuET6czPp8v4eVyTV2v
t+ztdsf3+wM/Hs/w+Xzh1yuiUfSOv38B2IAunA==
         "], Null}, {
        EdgeStyle -> {
          DirectedEdge["Critical Pair Lemma 29", "Substitution Lemma 15"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 3", "Critical Pair Lemma 37"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 2", "Substitution Lemma 3"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 16", "Critical Pair Lemma 29"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 22", "Critical Pair Lemma 40"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 10"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 15", "Substitution Lemma 18"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 25", "Substitution Lemma 12"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 13", "Substitution Lemma 1"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 34", "Conclusion 1"] -> RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 20"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 1", "Substitution Lemma 2"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 24", "Substitution Lemma 17"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 25", "Substitution Lemma 26"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 5", "Critical Pair Lemma 4"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 26"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 21", "Critical Pair Lemma 39"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 2", "Critical Pair Lemma 22"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 5", "Critical Pair Lemma 22"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 3", "Substitution Lemma 8"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 4", "Substitution Lemma 10"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 3", "Critical Pair Lemma 31"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 14"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 5", "Critical Pair Lemma 18"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Critical Pair Lemma 6"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 40", "Substitution Lemma 23"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 14", "Critical Pair Lemma 25"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Substitution Lemma 14"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 30"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 3", "Substitution Lemma 34"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 16", "Substitution Lemma 23"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Hypothesis 1", "Substitution Lemma 25"] -> RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 24", "Critical Pair Lemma 26"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 28", "Substitution Lemma 29"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 39", "Substitution Lemma 22"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 12"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 23"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 10", "Substitution Lemma 3"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 34", "Critical Pair Lemma 36"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 13", "Substitution Lemma 20"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 38", "Substitution Lemma 21"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 25"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 3", "Substitution Lemma 6"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 37", "Substitution Lemma 20"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 31", "Substitution Lemma 32"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 12", "Critical Pair Lemma 27"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 23", "Substitution Lemma 13"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 16"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 4", "Critical Pair Lemma 21"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 29", "Substitution Lemma 30"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 33", "Substitution Lemma 34"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 3", "Critical Pair Lemma 1"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 9"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 17"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 24"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Substitution Lemma 11"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 30", "Substitution Lemma 17"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 4", "Critical Pair Lemma 13"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 23"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 8", "Critical Pair Lemma 12"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 15", "Substitution Lemma 24"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 35"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 41", "Substitution Lemma 27"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Critical Pair Lemma 5"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 28", "Substitution Lemma 14"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 35", "Substitution Lemma 19"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 14", "Critical Pair Lemma 17"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 27", "Substitution Lemma 28"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 3", "Substitution Lemma 12"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 20", "Substitution Lemma 9"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 1", "Critical Pair Lemma 4"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 1", "Critical Pair Lemma 7"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Critical Pair Lemma 10"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 5", "Critical Pair Lemma 7"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 26", "Substitution Lemma 27"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 15"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 14"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 17", "Critical Pair Lemma 32"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Substitution Lemma 1"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 21"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 24", "Critical Pair Lemma 41"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 19", "Substitution Lemma 6"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 11"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 41"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Critical Pair Lemma 5"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 20", "Critical Pair Lemma 38"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 3", "Critical Pair Lemma 24"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 11", "Critical Pair Lemma 13"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 12", "Substitution Lemma 29"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 26", "Critical Pair Lemma 29"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 31"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 4", "Critical Pair Lemma 3"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 4", "Critical Pair Lemma 9"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 12", "Critical Pair Lemma 28"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 15", "Critical Pair Lemma 40"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 14", "Substitution Lemma 16"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 6", "Critical Pair Lemma 33"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Critical Pair Lemma 2"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 15"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 6", "Substitution Lemma 28"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], DirectedEdge["Axiom 1", "Conclusion 1"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 25"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Substitution Lemma 21"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 18"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 4", "Critical Pair Lemma 20"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 36", "Substitution Lemma 19"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 10", "Critical Pair Lemma 11"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 27", "Substitution Lemma 13"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 3", "Critical Pair Lemma 3"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 5", "Substitution Lemma 5"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 14", "Substitution Lemma 7"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 2"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 5", "Critical Pair Lemma 6"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 4", "Substitution Lemma 9"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Substitution Lemma 15"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 38"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 4", "Critical Pair Lemma 2"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 6", "Substitution Lemma 7"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 7", "Substitution Lemma 8"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 1", "Critical Pair Lemma 1"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 21", "Substitution Lemma 10"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 33", "Critical Pair Lemma 35"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 16"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 18", "Substitution Lemma 22"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 4", "Critical Pair Lemma 16"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 33"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 19", "Critical Pair Lemma 37"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 18", "Substitution Lemma 5"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 9", "Critical Pair Lemma 30"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 2", "Critical Pair Lemma 8"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 14", "Critical Pair Lemma 19"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 6", "Substitution Lemma 18"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 30", "Substitution Lemma 31"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 31", "Critical Pair Lemma 33"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 22", "Substitution Lemma 11"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Critical Pair Lemma 3", "Critical Pair Lemma 30"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 10", "Critical Pair Lemma 39"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Substitution Lemma 23", "Substitution Lemma 24"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 32", "Substitution Lemma 33"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Substitution Lemma 17", "Critical Pair Lemma 31"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 1", "Critical Pair Lemma 8"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 7", "Substitution Lemma 4"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Axiom 3", "Critical Pair Lemma 36"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 15", "Critical Pair Lemma 19"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 24", "Critical Pair Lemma 34"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 32", "Critical Pair Lemma 34"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 17", "Substitution Lemma 4"] -> 
           RGBColor[
             Rational[167, 255], 
             Rational[167, 255], 
             Rational[167, 255]], 
           DirectedEdge["Axiom 6", "Critical Pair Lemma 32"] -> Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 41", "Substitution Lemma 32"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 16", "Critical Pair Lemma 28"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]], 
           DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 26"] -> 
           Directive[
             Dashing[{Small, Small}], 
             RGBColor[
              Rational[167, 255], 
              Rational[167, 255], 
              Rational[167, 255]]]}, GraphLayout -> "LayeredDigraphEmbedding",
          Properties -> {
          "Substitution Lemma 4" -> {Tooltip -> "Substitution Lemma 4"}, 
           "Substitution Lemma 24" -> {Tooltip -> "Substitution Lemma 24"}, 
           "Axiom 3" -> {Tooltip -> "Axiom 3"}, 
           "Critical Pair Lemma 11" -> {Tooltip -> "Critical Pair Lemma 11"}, 
           "Substitution Lemma 18" -> {Tooltip -> "Substitution Lemma 18"}, 
           "Critical Pair Lemma 29" -> {Tooltip -> "Critical Pair Lemma 29"}, 
           "Critical Pair Lemma 37" -> {Tooltip -> "Critical Pair Lemma 37"}, 
           "Substitution Lemma 17" -> {Tooltip -> "Substitution Lemma 17"}, 
           "Critical Pair Lemma 21" -> {Tooltip -> "Critical Pair Lemma 21"}, 
           "Substitution Lemma 6" -> {Tooltip -> "Substitution Lemma 6"}, 
           "Critical Pair Lemma 40" -> {Tooltip -> "Critical Pair Lemma 40"}, 
           "Critical Pair Lemma 30" -> {Tooltip -> "Critical Pair Lemma 30"}, 
           "Axiom 1" -> {Tooltip -> "Axiom 1"}, 
           "Substitution Lemma 27" -> {Tooltip -> "Substitution Lemma 27"}, 
           "Substitution Lemma 3" -> {Tooltip -> "Substitution Lemma 3"}, 
           "Substitution Lemma 9" -> {Tooltip -> "Substitution Lemma 9"}, 
           "Critical Pair Lemma 15" -> {Tooltip -> "Critical Pair Lemma 15"}, 
           "Critical Pair Lemma 7" -> {Tooltip -> "Critical Pair Lemma 7"}, 
           "Substitution Lemma 19" -> {Tooltip -> "Substitution Lemma 19"}, 
           "Critical Pair Lemma 14" -> {Tooltip -> "Critical Pair Lemma 14"}, 
           "Substitution Lemma 34" -> {Tooltip -> "Substitution Lemma 34"}, 
           "Critical Pair Lemma 22" -> {Tooltip -> "Critical Pair Lemma 22"}, 
           "Critical Pair Lemma 6" -> {Tooltip -> "Critical Pair Lemma 6"}, 
           "Critical Pair Lemma 3" -> {Tooltip -> "Critical Pair Lemma 3"}, 
           "Substitution Lemma 26" -> {Tooltip -> "Substitution Lemma 26"}, 
           "Substitution Lemma 33" -> {Tooltip -> "Substitution Lemma 33"}, 
           "Critical Pair Lemma 1" -> {Tooltip -> "Critical Pair Lemma 1"}, 
           "Critical Pair Lemma 16" -> {Tooltip -> "Critical Pair Lemma 16"}, 
           "Critical Pair Lemma 27" -> {Tooltip -> "Critical Pair Lemma 27"}, 
           "Critical Pair Lemma 26" -> {Tooltip -> "Critical Pair Lemma 26"}, 
           "Substitution Lemma 21" -> {Tooltip -> "Substitution Lemma 21"}, 
           "Substitution Lemma 7" -> {Tooltip -> "Substitution Lemma 7"}, 
           "Substitution Lemma 11" -> {Tooltip -> "Substitution Lemma 11"}, 
           "Critical Pair Lemma 5" -> {Tooltip -> "Critical Pair Lemma 5"}, 
           "Critical Pair Lemma 23" -> {Tooltip -> "Critical Pair Lemma 23"}, 
           "Substitution Lemma 2" -> {Tooltip -> "Substitution Lemma 2"}, 
           "Substitution Lemma 13" -> {Tooltip -> "Substitution Lemma 13"}, 
           "Substitution Lemma 31" -> {Tooltip -> "Substitution Lemma 31"}, 
           "Critical Pair Lemma 10" -> {Tooltip -> "Critical Pair Lemma 10"}, 
           "Axiom 2" -> {Tooltip -> "Axiom 2"}, 
           "Substitution Lemma 1" -> {Tooltip -> "Substitution Lemma 1"}, 
           "Critical Pair Lemma 28" -> {Tooltip -> "Critical Pair Lemma 28"}, 
           "Critical Pair Lemma 31" -> {Tooltip -> "Critical Pair Lemma 31"}, 
           "Critical Pair Lemma 17" -> {Tooltip -> "Critical Pair Lemma 17"}, 
           "Critical Pair Lemma 33" -> {Tooltip -> "Critical Pair Lemma 33"}, 
           "Substitution Lemma 20" -> {Tooltip -> "Substitution Lemma 20"}, 
           "Critical Pair Lemma 18" -> {Tooltip -> "Critical Pair Lemma 18"}, 
           "Critical Pair Lemma 32" -> {Tooltip -> "Critical Pair Lemma 32"}, 
           "Axiom 4" -> {Tooltip -> "Axiom 4"}, 
           "Substitution Lemma 22" -> {Tooltip -> "Substitution Lemma 22"}, 
           "Critical Pair Lemma 19" -> {Tooltip -> "Critical Pair Lemma 19"}, 
           "Substitution Lemma 5" -> {Tooltip -> "Substitution Lemma 5"}, 
           "Critical Pair Lemma 24" -> {Tooltip -> "Critical Pair Lemma 24"}, 
           "Critical Pair Lemma 36" -> {Tooltip -> "Critical Pair Lemma 36"}, 
           "Substitution Lemma 14" -> {Tooltip -> "Substitution Lemma 14"}, 
           "Critical Pair Lemma 38" -> {Tooltip -> "Critical Pair Lemma 38"}, 
           "Substitution Lemma 30" -> {Tooltip -> "Substitution Lemma 30"}, 
           "Conclusion 1" -> {Tooltip -> "Conclusion 1"}, 
           "Substitution Lemma 25" -> {Tooltip -> "Substitution Lemma 25"}, 
           "Critical Pair Lemma 8" -> {Tooltip -> "Critical Pair Lemma 8"}, 
           "Critical Pair Lemma 20" -> {Tooltip -> "Critical Pair Lemma 20"}, 
           "Substitution Lemma 29" -> {Tooltip -> "Substitution Lemma 29"}, 
           "Substitution Lemma 32" -> {Tooltip -> "Substitution Lemma 32"}, 
           "Axiom 5" -> {Tooltip -> "Axiom 5"}, 
           "Critical Pair Lemma 13" -> {Tooltip -> "Critical Pair Lemma 13"}, 
           "Critical Pair Lemma 35" -> {Tooltip -> "Critical Pair Lemma 35"}, 
           "Critical Pair Lemma 2" -> {Tooltip -> "Critical Pair Lemma 2"}, 
           "Axiom 6" -> {Tooltip -> "Axiom 6"}, 
           "Substitution Lemma 8" -> {Tooltip -> "Substitution Lemma 8"}, 
           "Critical Pair Lemma 39" -> {Tooltip -> "Critical Pair Lemma 39"}, 
           "Critical Pair Lemma 4" -> {Tooltip -> "Critical Pair Lemma 4"}, 
           "Substitution Lemma 28" -> {Tooltip -> "Substitution Lemma 28"}, 
           "Substitution Lemma 16" -> {Tooltip -> "Substitution Lemma 16"}, 
           "Critical Pair Lemma 34" -> {Tooltip -> "Critical Pair Lemma 34"}, 
           "Critical Pair Lemma 9" -> {Tooltip -> "Critical Pair Lemma 9"}, 
           "Critical Pair Lemma 25" -> {Tooltip -> "Critical Pair Lemma 25"}, 
           "Substitution Lemma 12" -> {Tooltip -> "Substitution Lemma 12"}, 
           "Hypothesis 1" -> {Tooltip -> "Hypothesis 1"}, 
           "Substitution Lemma 10" -> {Tooltip -> "Substitution Lemma 10"}, 
           "Critical Pair Lemma 41" -> {Tooltip -> "Critical Pair Lemma 41"}, 
           "Substitution Lemma 15" -> {Tooltip -> "Substitution Lemma 15"}, 
           "Substitution Lemma 23" -> {Tooltip -> "Substitution Lemma 23"}, 
           "Critical Pair Lemma 12" -> {Tooltip -> "Critical Pair Lemma 12"}},
          VertexShapeFunction -> {
          "Axiom 6" -> "FiveDown", "Critical Pair Lemma 8" -> "Triangle", 
           "Critical Pair Lemma 18" -> "Triangle", "Critical Pair Lemma 3" -> 
           "Triangle", "Critical Pair Lemma 17" -> "Triangle", 
           "Substitution Lemma 3" -> "Circle", "Substitution Lemma 26" -> 
           "Circle", "Critical Pair Lemma 38" -> "Triangle", 
           "Critical Pair Lemma 20" -> "Triangle", "Critical Pair Lemma 19" -> 
           "Triangle", "Critical Pair Lemma 14" -> "Triangle", 
           "Critical Pair Lemma 5" -> "Triangle", "Substitution Lemma 23" -> 
           "Circle", "Critical Pair Lemma 7" -> "Triangle", 
           "Critical Pair Lemma 34" -> "Triangle", "Critical Pair Lemma 16" -> 
           "Triangle", "Substitution Lemma 1" -> "Circle", 
           "Substitution Lemma 10" -> "Circle", "Critical Pair Lemma 22" -> 
           "Triangle", "Substitution Lemma 9" -> "Circle", "Axiom 4" -> 
           "FiveDown", "Substitution Lemma 12" -> "Circle", 
           "Substitution Lemma 31" -> "Circle", "Critical Pair Lemma 36" -> 
           "Triangle", "Critical Pair Lemma 21" -> "Triangle", 
           "Critical Pair Lemma 41" -> "Triangle", "Substitution Lemma 6" -> 
           "Circle", "Substitution Lemma 34" -> "Circle", 
           "Critical Pair Lemma 25" -> "Triangle", "Critical Pair Lemma 35" -> 
           "Triangle", "Critical Pair Lemma 4" -> "Triangle", "Axiom 5" -> 
           "FiveDown", "Critical Pair Lemma 24" -> "Triangle", 
           "Substitution Lemma 19" -> "Circle", "Critical Pair Lemma 31" -> 
           "Triangle", "Substitution Lemma 27" -> "Circle", 
           "Critical Pair Lemma 1" -> "Triangle", "Critical Pair Lemma 6" -> 
           "Triangle", "Axiom 2" -> "FiveDown", "Critical Pair Lemma 23" -> 
           "Triangle", "Substitution Lemma 11" -> "Circle", 
           "Substitution Lemma 21" -> "Circle", "Substitution Lemma 22" -> 
           "Circle", "Conclusion 1" -> "Square", "Substitution Lemma 13" -> 
           "Circle", "Axiom 1" -> "FiveDown", "Substitution Lemma 20" -> 
           "Circle", "Critical Pair Lemma 39" -> "Triangle", 
           "Critical Pair Lemma 32" -> "Triangle", "Critical Pair Lemma 30" -> 
           "Triangle", "Critical Pair Lemma 27" -> "Triangle", 
           "Critical Pair Lemma 37" -> "Triangle", "Substitution Lemma 30" -> 
           "Circle", "Critical Pair Lemma 29" -> "Triangle", 
           "Substitution Lemma 7" -> "Circle", "Substitution Lemma 33" -> 
           "Circle", "Substitution Lemma 32" -> "Circle", 
           "Substitution Lemma 16" -> "Circle", "Substitution Lemma 29" -> 
           "Circle", "Hypothesis 1" -> "Diamond", "Substitution Lemma 25" -> 
           "Circle", "Critical Pair Lemma 9" -> "Triangle", 
           "Critical Pair Lemma 33" -> "Triangle", "Critical Pair Lemma 26" -> 
           "Triangle", "Critical Pair Lemma 28" -> "Triangle", 
           "Critical Pair Lemma 13" -> "Triangle", "Substitution Lemma 18" -> 
           "Circle", "Substitution Lemma 4" -> "Circle", 
           "Substitution Lemma 17" -> "Circle", "Substitution Lemma 24" -> 
           "Circle", "Substitution Lemma 14" -> "Circle", "Axiom 3" -> 
           "FiveDown", "Critical Pair Lemma 11" -> "Triangle", 
           "Critical Pair Lemma 10" -> "Triangle", "Substitution Lemma 5" -> 
           "Circle", "Critical Pair Lemma 2" -> "Triangle", 
           "Critical Pair Lemma 12" -> "Triangle", "Substitution Lemma 15" -> 
           "Circle", "Substitution Lemma 8" -> "Circle", 
           "Substitution Lemma 2" -> "Circle", "Critical Pair Lemma 40" -> 
           "Triangle", "Substitution Lemma 28" -> "Circle", 
           "Critical Pair Lemma 15" -> "Triangle"}, 
         VertexSize -> {{"Scaled", 0.01740963855421687}}, 
         VertexStyle -> {"Critical Pair Lemma 8" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 20" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 15" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Axiom 1" -> Directive[
             RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], 
             EdgeForm[]], "Substitution Lemma 22" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 34" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 7" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 39" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 29" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 11" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 23" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 3" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 9" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 36" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 30" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 40" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 38" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 20" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Axiom 5" -> Directive[
             RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], 
             EdgeForm[]], "Substitution Lemma 19" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 7" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 18" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 10" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 30" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 10" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 1" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 35" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 33" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 32" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Hypothesis 1" -> Directive[
             RGBColor[
              Rational[146, 255], 
              Rational[10, 17], 0], 
             EdgeForm[]], "Axiom 6" -> Directive[
             RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], 
             EdgeForm[]], "Critical Pair Lemma 16" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 31" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 17" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 41" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 14" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 13" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 26" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 13" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 37" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 18" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 28" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 14" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 12" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 3" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 9" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 2" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 16" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 24" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 25" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 11" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 26" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 24" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 12" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 27" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 31" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 1" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 6" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 33" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 23" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 15" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 5" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 21" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Axiom 2" -> Directive[
             RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], 
             EdgeForm[]], "Substitution Lemma 4" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Substitution Lemma 21" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 25" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 8" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 27" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 6" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 28" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 2" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Conclusion 1" -> Directive[
             RGBColor[
              Rational[13, 15], 
              Rational[1, 15], 0], 
             EdgeForm[]], "Critical Pair Lemma 34" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 22" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Critical Pair Lemma 5" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Axiom 4" -> Directive[
             RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], 
             EdgeForm[]], "Critical Pair Lemma 19" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Axiom 3" -> Directive[
             RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], 
             EdgeForm[]], "Substitution Lemma 32" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 4" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]], "Substitution Lemma 17" -> Directive[
             RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], 
             EdgeForm[]], "Critical Pair Lemma 29" -> Directive[
             RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], 
             EdgeForm[]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.007249642397612705], 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{0., 40.}, {-1.8733700100442547`, 39.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQpcHH5qnenkY/2x52tP7J5/P50d7r+89meDB+fe
7imNy6M/OztMsXs52e6l8N7DYjkHxd44O6xMf/Po63npvTOEZbkMnjg7SFbs
MrXXUdorANJw29kBpCznoNpejdpL6rWXnB3O8YMktPc+AJl7wtlh3sbu6/b5
BnutLi5kcN7n7GAMAXvB5GZnB5Od6w/NeeFgWwPSvtzZ4cT3GWG3L2bYHiuU
OV44x9mBLXoDa/SGWlshQSCY6OzgeurA5bU/u2xjQMKtzg5yQFdV+0y1Xeb/
a4l/lbMDSJj19jzbD++AIM/Z4f1qA3UrkaW2ln2PLfqSnR0CGhTvJ89abdus
e6NJN8LZARwsDRttz54BAh9nhzeqW6Zf8Ntqe1Qv7v8eR2eHeKdqzrdPd9gq
iGky+5s7O4SCgOse25tNIAOcHS7GARXk7rf9WJJdF6Hi7JChv3Bvi95B2wxw
sDk7rAKBrkO29uBgdXYASX87ddi2FKh8CY+zw3ehW94Z74/YchcvcmZkg7rn
x1FbSHw5OwAAnMDELw==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
7KR6n/Hr/wGEJCCr
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAoAhVuXeDKsAAAAAAAIBDQF8TQ2hG
2irAFa/ecMp5Q0CU0/iRoT8rwA8dhnmKckNAQUl2NomzK8DrSfYZQGpDQGJ0
u1X9NSzAqTUvUutgQ0D6VMjv/cYswEngMCKMVkNACOucBItmLcDMSfuJIktD
QIw2OZSkFC7AMnKOia4+Q0CGN52eStEuwHtZ6iAwMUNA9u3II32cL8Cm/w5Q
pyJDQD78dRDtAzDAvVpwnb8aQ0AkXZGITzkwwBn601NvEkNArZk2+mVuMMC3
3TlztglDQNaxZWUwozDAlQWi+5QAQ0ChpR7KrtcwwLVxDO0K90JADnVhKOEL
McAYInlHGO1CQBwgLoDHPzHAvRboCr3iQkDOpoTRYXMxwKRPWTf510JAIAll
HLCmMcDNzMzMzMxCQF9s8Jps2DHAxi5e/7zBQkDV9UeHUQcywCAWKQNPt0JA
gqVr4V4zMsDagi3Ygq1CQGZ7W6mUXDLA8XRrflikQkCAdxff8oIywGjs4vXP
m0JA0pmfgnmmMsA/6ZM+6ZNCQFri85MoxzLAdWt+WKSMQkAaURQTAOUywAtz
okMBhkJAEOYAAAAAM8AAAAAAAIBCQBU+yUg=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-13.256772796278085`, 39.}, {-8.25677279628195, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-13.256772796278085`, 39.}, {6.999999999954696, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAoAhVuXeDKsAAAAAAAIBDQEm3yPE2
HSrA5DqH85t5Q0AHztn7f6ApwElMKITQcUNA1kyI11INKcAvNOOxnWhDQLUz
1ISvYyjAk/K3fANeQ0Cogr0DlqMnwHiHpuQBUkNArDlEVAbNJsDc8q7pmERD
QMRYaHYA4CXAwDTRi8g1Q0Dt3ylqhNwkwCRNDcuQJUNAKM+IL5LCI8AIPGOn
8RNDQOeDwM1rfCPAZ06TRyAPQ0CrE5uHyzcjwKe8FlaJCUNAc34YXbH0IsDG
hu3SLANDQD3EOE4dsyLAw6wXvgr8QkAL5ftaD3MiwKAulRcj9EJA3eBhg4c0
IsBcDGbfdetCQLG3aseF9yHA+EWKFQPiQkCKaRYnCrwhwHPbAbrK10JAZvZk
ohSCIcDNzMzMzMxCQHrUted4SiHAxi5e/7zBQkD8eWilChYhwCAWKQNPt0JA
6eZ828nkIMDagi3Ygq1CQEMb84m2tiDA8XRrflikQkAJF8uw0IsgwGjs4vXP
m0JAPNoEUBhkIMA/6ZM+6ZNCQNxkoGeNPyDAdWt+WKSMQkDntp33Lx4gwAtz
okMBhkJAwKD5////H8AAAAAAAIBCQNLi0no=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwlk3tMm2UUhzsELGxso8CKculV26/IxmSEcnGe9/3qAkMRybBSHEwu80JT
tw6GJaJcFmBc04CTbBFwuLbCEmFD58TIoZO5YjuyBhhkMzpxlypbgGAzcYBl
PsnJ89dJTn6/HFH++5lFXhwOJ94z6+7mZl0sq1EgZ51KFqqTf+7VFytwqWn/
96sGFu5rctR3MhTY2F5lzjnCwkyBz7AzVoHWbdqRbVoWUtS2W/HBCuwIivCP
KWQhMc48HLLI4NbHCyycW+l8Q+tgUF7hlFVksnC2v/9skonBW66pR/0pLESl
3xyq+ZDBxGufc9jdLERPiWpVGQzuil2HhdQYY4C3mEEvxVgHX84CX5W4L2VR
jr+Mn4mrjWDh08AITeCIHK3Sy34fB7FwuSNBkNcixwF5VIiXPwummdaenRo5
9t6YUG/ZwIJyQnC3XirHr164dM30kEJ5vctVeF+GP6S7q6/MU9C55/pGB2U4
vVlXXOKiwFySNdm5z2Bp9WRJ1mcUZl2FAeeuSrFqwdjeeILCb6+/M847IcW6
Ab+K+FYKQv/nnQ9ypXjMmrw9u45C5xPWkD2MFA3SKMv8RxRy2dCToX9L8OD1
iT9XSikcsO3KO2iV4Ms3EtyVWgqnP+EX7TBKkInRjBnyKTxrwb4jb0lwbTLu
7XtqCs1Km91uF+N7Yev5UPhx7NRSapcYB4ZlnoQpqPN04T8dFmNBgUfhFKgb
VCqVGCt9Az1QqG0N8hQnRu8vfXL6fShIo+607XaJcHHv8hevLhMIt307NDQk
wr1zDzwQ0L7bOKtsEeGmZo9mCfA35W785oAIldHT1dHTBHzNY557hPi4rvME
PtCPRGd3CnFFecaRbCGgr+ds8NYJ0b6R5xfWSWDhXt0eR5IQT/UZbjvaCSy1
qVcHnxRicejN/KwmAv/yfs042iPAFzMTqgaOEXi6rev4cKwAg7ON8HsFAWqZ
N72EkfjXc3903y0jUJbptHBTI3HUsfP0iJ7A10ZVK/dqBHYnlasO6Qjsd7un
JA1hyB2/EPnamwRum2OLAkqfQucgU2xJI5BmWk4YbeHj6tw4czSZQMNCWlba
9RBsKOvVfLedgPm47EJXejAa9l1cKRET6NE151mXeHil5hHPxCdQ3l2Rft4W
iAafkpOvbCawQ/CwRu/Yik0zgvZiXwKVk/+sra1t+f+/OAT+A/alix4=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
aYBoJX/9bzBo+AeIDtsB
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJw1lgtUzOkbx0cp0XVYEUNNc9NPUmqaSzPNM78pKtakchfRhdLFVIroJq1E
ucZ2oayW/rlNImwxT7pZWdYIqbQpJJeIxIbspP7f877nPZ9z3vc93/N93/Oc
h74mwitQi0KhnNbMwbVAb+GV2BQCKYNKksHU0UPcu9u3YmCzDIqHedfB5JPL
o2TgMmaIr5uGVpqGyuDFMP86bsoY2wAZ5OkPscmPAzJYYTDE0+LVnHgvGRCG
Q/yk68FXpZsMdIyGWHj3GEXmLIM3w+xgPygZJGwLZq/VsNNARbqaI4OFzSfC
uBq+ZqH4pqDJIMrMcE/7NgIrcuS7qFQZNIjy0sM17BC6xKFERwZxrj5+j5IJ
5GTt+uzZT0KQPdeEoeFD47sevusm4VddSc7cJAIT32xQ7+0gwUilGPBKJPAp
jfHCtpGEjLqohdlbCPxhp5SE2NlHEsPjCGyva4hXnyRBe7T3I3Izgavm/P2n
Io8EB+OsNaabCDxZwppA3UfCyKX+k7tiCCzXvR+oTCUh5vlV7fKNBObObr0o
jyNh96XCybujCZytkI56G06Cy60J/iuiCFT9MrA005+EPOaEpumRBGrtGH92
xhISas+ItnuED/uxJyEr7M7OiWEEzs9K1SRMQt9dhcXz9QQaxh+4oaCR8KqJ
4VYaQmDEyxU/UakkKNKeUZKCCYx8/MRPqUNCelOZx7x1BJotsjwr75eCw93D
rIlrCQzwmfq1u1sKkaFp+zoCCfRsvO+R2SEF8nRa5tkAAtueuOXMaJSClq3U
Df0073vtUuqsUin889S7Z9cqzf9wH99796QUdHr38pet1NwvJVYq8qQQ6/t5
ynRfAq0K+6pM9klhJj392MByAt9HxrGUqVKYJZld1bCMwNgzF7fJ46SQcMk6
5cxSAi96FzV3h0thXLr4SdoSAs8Getlm+kvhfdmmx0GLCfTrKE2asUQKtd6z
aqq8/5+PFNZ19I0q9CLwn5PtiWqOFP6wkn9LWkCgvG6UWkGTQhnb6fdlngSm
7PvNikqVwsqmP77bygncolv6i1JHCqUutw1GzieQzxZ0yfsBygI33ro3j8DL
7xwWvO0GCBArnQvmEvgt8MS1zA4AVX2Cf7AHgbq/ZNjZNAIkHQrbvm728H8u
BVhxPabBSkbgbwUF1hOLAKw+PAl75kSgb/H37WlHALqmnfPMtdXk7+kp2n4A
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
7NAy4ALF+ZWmHr5V/ehXKVz4D9Lexmo=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
ymGfogYD0OF6C7di9vh5VYEB/we2cMjG
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-22.000000000203215`, 40.}, {-1.8733700100442547`, 
            39.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwlkn8s1HEYx0+Jixiqa7XaNJVUiqnv3ceop8/H2tJaq2QSGs2+rNpd3Vkl
VEiWGxlrLKzDdouzijYbpue6KIaLoXLJjxKXU6i71Mp1V6/t/bz/eT97nj/e
GxOkxxKXCASCzTbZXTZiGwIOBf8IA4fQV3yuF4dmZWzL4k8GR4eGJY6+HOYV
31Cf+sYgodFPLg/lUCc6pxWZGPj3N4gGT3BYsnKDS8BHBk0BaT47ZBx62BcM
DBy7M0tTlBxuTe/zTe9j4PbgxeX6Gg5HjYO/H71k0P88XDveyWFwr0rAWhlE
e6+QO81wGGSngUFBX3x6oIcY99xsyh1WM+DnVfpLQWKsC+HN5WUMRq51Jb+N
FGPJSXJFUcjAkjp2KDJVjGZDwKr4HAb1H0ZTvpSLsU13uP3MVdv9ps5JlVaM
Qs87BWkyBi6LFSrZhBhbdT+ktYkM1A9jq6KXS3DKkM3PRjNoDhuqtOglmNSz
vybLm8GtYmOtz5QE7zq/n3Rfy2BBmBaRYZWgdF4v3OTJwL2ysMxJRHAuf42b
Tsig/fS27JbtBNcNP/k+baWwhR5wvQ8ETe/UTyssFPwOTgQ+jiDI58+eN5go
9CqcF77yBG/P5VtV4xTWt2liY1IJRjllKeZfU3ALHkiw5BHs7rJDoaZ6bkFT
RrB9Z5y1RUvhz8BFT6mGoLfIb+mRRgrLeqI0Ic0EhzL932TWUXimrOpY3WH7
T3E2I6qawm6v48m/BggmmcbN+nsUYuL4vM9jBPcZi/YaiyhILozu+mQimGKP
Kyl0hLdGzlgIusormUMOBY9pe2+C//fnOoW/0Poc9g==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxdkg1YTXccx+9Y0WITnuYlNAnzMufmHs7tvn3POVjeZmtesuslUQplkTw2
bULMmswyoeSl5OVByXvM/o+ZotCLipHWvd0rleYlmzLZveeeh3/7Pefe+3ye
5z7nfP6f8/sgaLF/cBuFQrHD9rH/fllp+1KMIAppRuFfMeRo6lOWaLN9pt1o
ElHvc8Rba2HJoQ/LOqc+EWE4XBp86yZL/EJqfRbViniaWRmx9CJLuoQuPq2u
EuGqz0fHoyzpNCx4t3O5iHVTt93Zl8QS3bn8h8X5IuY2jTHovmXJ9g5pu1J/
FZHWv3xhyTyW9PeqOxmWLWLMPb85oX4sMbWkMap0EcNUU9uNULMkrF+kT1Oy
iAuq1JnXBrNk1ZaasNmJIh5Ves77yJMlAya9Ux7yvYjL7L0e091ZMmNy2Yr3
YkUII8piJ77LEs/0Cf7Tl4sIrGq/3bU9S6L04YGjwkV4jYwOTGzLkgAvLr0w
SET8yN63qhUsyfc/0qtlmogFZnsXlqiG20cEkTmmeIDtEuFc7eC8SI/cSA8R
Opk7u9lHRJDMM7KcjFlOIpbLvG9Sc/qkZgHfyPyowT4ComRWJ5i5BLOAL2Re
M/TW6qG3hNfPl3SOC9gk80q7z34BITLn2n1SBMBM+WwW4CGz0e4TJ6DFRPl8
JcAq8192nQgBhSbKZ67t+SbKJ0DAThPlM1zANhPdR8AeE+XjIeC0ie4joNxE
+TgJeNtM9+GhNVM+DTxWy8xJfXiUmOk+PDpZ6D48FlnoPjxyLNT7SuHxwkL3
4THESvfh8YmV7sNjnpXuwyPMSvfhMcdK9+HhbKX78LBa6D48LlvoPjzSZJby
uPGIsdB9eHxuofsAAy10H+BFq/0BClrtD9C/mtrn44CimvLZDzxrtT9AO3qf
NwNMNd0Hr/c5Q+oDlNP7HAH4W+g+wAML3QcYU0P3AZ7U0H2AmAd0H6D6Ab0/
tvPU0n2AUTKP29U4dlejAbzMlRX2MaC7zEvst8s14Lp8P2fpBgZAfn6INAZ0
u+/gpnT7AQ1Il8+30Z6XM8D0p4P7SmNA4R0Hnwp0tV0GLCmlffS4fM3B9yQf
PfIvOVg6Xq4ea3Mc7CT56DE3kfbRo3i9g59LPnqkxjhYet2cHr9HOdhL8tFj
VDjto0ef+Q4eL/noMCWI9tHBOovuo0PhDLqPDs1G2keHh0a6jw5mI+2jw20j
7aNDkZH20eGKzGMlHy0uGWkfLYiR9tHiFyPto8UpmedLPlqckLlZ8tHiZCuf
N/93+Lxhh48WZ430+9LgfCsfzf98NK99HT4alLXqo8GqgUmLcltUpMD9/Lkt
n2oQnWDM7vVCRcoP1Sbu1WpweuPEojbPVGRD3ycNmwZpbAsdfiW6XkUqYooL
ZvTQwD0gZ8eKKtv/z8cPdemggcqLHe16U0WiK3u5/fzKF6nrK/IGX1KRs5bv
liue+cI/7rj3nWMqsudGQeD4el8UvZ+YFXdCSbbOity2v5cvMkLX12WnKEl6
Mjk4yN0XpjzvNgHrlCQsML6mqoMv1nIRjVGRSlJ9uGjytbd8EX868KLLLCVx
i01sqG9U4+/RLxe6T1CSxruFJ2FVI88sPt6hUZIEsuFQXqkar35U+ScNUZK7
gy8UrP1NjeSJNxJc+yhJVe8Ij2WZajSy109ENjFyHzXKrvKN3RoYcuTM3pn7
JqnhbgrNuGBiyEyfuJ4WTo3sr8X8oHKGRJZ03O3dV42DSUVBTgUMaUjW1oW4
qtHCdgnPIAwpind7eaCRw9Gp7WtHn2SIR9oPpXUVHHKasm6bDzLketWRqGG5
HPr16ahdlcoQ68fL/liaxaH2sodbz0SGBJeanM9u51DR7270q/UMWTQutuSn
NRyGfpa5cV0MQ1Iecy7HIjiUjd86JWspQx5ddTnQxcihvOvm6ysXMCS07Glm
jh8Hn8O7ntfNYUi7rv94ZozkcN/tYsnL6Qy5tqbLi9IBnK3f89nZ/gw54z1W
P647h1l+wk6XCQy52pRU26YDB8/uu+PbjmGIQhoO/wHBhcNN
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxVlg1Q0+cdx2MI2FXUC/zTxAoY0BaqgBIJ/7znm/ypQgVfqmd1cJROwCrI
i7PY+V4759QTqdMVK4iiwlmtWopo62Yf6wsUym6IdchQHHJu1Q1EWdXwDyz5
P9zl2XN5uc9d8tznPr/fXRL+q4K3s+Uymeyo5+l9L+zyvMgSiEw6iUhaX559
L1pP7t6J9lv+QsDN8r+/UzYpnujaL30nPhbAJV66FdmuI4O952yXHwgIKErs
LlkcRxIigtbWdQhIm9058Jl+OnlQ1JZ76wcBQReKbQ3J08jLd1+ERP5ZQGz8
kiNVP71OqnK27aw+KaDu4pbQGFUEOTOmuG5RmQBU3MtuKZtAZrQ0fxb3sYfD
r7w6SphAngaKM3o+EjD+8fr2lGcasrO3adHyzQKqfzGm8uw5DflvkSHg4noB
o/ML86M3aUjcp4lvdhUL0IWemkXma4gzo095s1DAVPWlyLwYDYlqMOQdWCHg
YVq1cganIfdatYumvydg7aMsRaC/hqzaVPP9/ncEzLz2Ynh4WE3iZ3qPgMwR
3ngj0vMQUHSdcmNRSENRiICsRspBSu8RYGymnH7WP+2sv4Cnf6F8fJ7r2DyX
EyVtlB/3eo8TgbcpG0vuG0ruO5HfRfnjmPatMe1OjH1OWdL5yonDw5Q3eH1q
nOgPcEnc4PUpd0I2zuXz+cSJRo5ymtdnmxNzJ7p8PuucKA2n3OfVyff4Rbp8
PsucSI5x+XyWOEFsLp/PTCeSZruYPk7wixmfEM99uYyP0vP57YyPvxMrTzA+
LgeetjI+vQ50ywYlNkh9HDAkDDJ9HNg9PMj0ceAls8j0caCiQPTNq9yBlAqR
6eMAd1Vk+jgwcF9k+jjQK4pMHwfk491MHwdiX3UzfTz3a91MHweiR5j2cWBq
mJvp40DiyPelPEoH1nFupo8DLYFupg9g8XMzfYDrz0Rmf4CChyLTB2ipF337
/BXQ8Lno86kBgmtEZn+AL0+yfYDKC2wf4E4L5WqpD5D3SPTtcz6QomT7AJvs
bB9A5mL7AFbtENMHqAodYvoA05+4mf0BuirYPsD5kb5vVQ4kVw7YUb+O+nTd
8R47Ok/S/Vjtva7Bjqg6ul8B0gV25HT+LHGOdOyoyd5SmSeqye2lx6/6zbcj
M3fSptp+NRlzfs/5DJMdpf9pO9japSbuja/Z175mR/y/K55/f11Nvjidk5aq
tOPt5Rv3HaxWk5DkhYH/cNvwz4zVBbM2e/xSHy3QPbLhyY0NO5rmq0nCxdho
x20biq+Ud0dOVJPuvaEHxzbaoLym2nYkXEXqpiW9936SDSkpc0LbezgStqo7
6wlvw6e7cov1ZzjSlNjadul1G/q2Fpd+vYUjF2q50y2cDYt0eblZSznSU3/q
aZjchusHUkYnGDmycMGBY7W9Vsz6Wp0Vq+WIYmsH+X2HFT+WtnyUOo4jA0mF
SUeuWVGozc/8gx9HIqt/aRbPWJHT7u0VPNLHiuD1gxK/OOZdACsuThQlltbP
YEX6N5QnR3iPFT8vdktcnznG87BiRz/lZGleFqh3Dkl8V5qXBYe0wxLTeVmg
PUeZzsuCByWjPL9bHFku+VggauQSuyQfC+bvo0x9LOiR+UlMfSyoy6BMfSz4
7gvKdH/MGNdLmfqYUTZJITH1MSPTSZn6mNGxmjLtY0bSB5RpHzPmLlMwPmb8
ZFEwPmao5QrGx4zOWtbHhPh5rI8JU/4mZ3xMqHlLzviYQKJkjI8Jpu3DzLxM
ePB8iJmXCZc3Up4i+ZjQpBpi5mWC/DKdF/UxIm+zm5mXEfIFbmZeRjTp3cy8
jECcm9kfI07pKNN5GdE6k/IeyceI2njKkk6EEal6dn+MqNKzPgbU6lkfAzbo
WR8DRv2fjwHQsT4GuAqrSiLlHFm8/5MbV+YZ0Be713ToJY74H0dfhtEAbd4P
flnBHFm1/9d/4icbsCtqwcMPIziyJ2eqae5YA3RZ2t5OPUfyNdnvVz3joZpk
Gl+aypHRJyfPju/moVt6KHXvCo6kh+Xc8mvhsTMo9cT9HRxZuTr6FeUFHmFz
ZkX89jRH9DXFAelHeRzd/VfF2E6O9K8xjJ+xi0fG9tbRJEBF3ojtX7ltDY+5
huRpFbEq0nHj8IT0d3kUHeYLji1UEcWy2RPr5vBo/ra87ccPVOTE3Z6C3UYe
S//44ZK4/SrS+OZv1P+K4hEypdld/6WKZJYpgq5O4BG8Yt+VnGYVWXPrd++G
B/JA9s0T6FaN/D/k8T9iGwb/
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
UYjD4B9/mSgY
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
G7kOGSXm+cTmaGTwvW7at/q2jKwPFjcmNsjQfrz/w9OnZdTxJHHjvtsyaNzv
jjHKltCFjs+G350kg8eYGdIXqyQUcnS1+UYnGc5Uhm3cHi4hucaWfWorQwaG
iEUqCQVUjz7ypJ8MJ+MXmIvHSmjXzB3z17dL4fxZyITBphJyCl/14a1GKZ4O
eJ15qsGLnvW/l1JRI0VLoljx3p9a/uBIS+xlKWYcELlOyfcip3GNB47nSxHL
3ZGZzvUy9JFC7J92p17hRVPVSX1CAqUou93t2MfBi0o/rTt+iZcioMXHMshE
u9+vWYt2j5cib5P/7qf1npQzpZB5NEyKl/n2ZceuelL3kNHDdppJYTXn1J78
w57UNuau8fk3EgxaNdr6n3RPWr+w2WjOcwlee8xwDVvoSeeaggaF3JegMGrq
Uyt/T9p8YuikmzckOPahWORwfTL5/RvZb+UvEkx7eU6WFDWZgr9J2l6TKcE6
P/N0uz6TqdQ/uLp+mQSRs0zfGB3yoB9DRaWH50nweETRdx5BHnTubPySMWoJ
THbauRwc6EF+kbl/THeXYMNPURVXfp5ELoG5f48fKcHshK7v/2Im0edr4jef
sZAgjDoTIx+5k0g3EvwH/Andmg==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
jAj/AkpkY8c=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-24.000000000219643`, 38.}, {-19.00000000020924, 37.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-24.000000000219643`, 38.}, {-26.000000000213788`, 
            37.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-24.000000000219643`, 38.}, {-10.9999999995743, 37.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxVkQtQVFUch1cYkFRUHHOcREIYh4xHxGMve/fu7u9eEuUhKJJCvoDk8hRD
SoRMMtSKJqKhB6azVEDOaCIDo1CGnWQShDDCBMoEcR8lRiJCI5TW7r138Pif
/+7ONztz5jvfWZa6Mz7NQaVS7bZ97L+v37F9qcKISppwbHperDPeZQjbELTx
x0kBeeEnl3MWhhhX9C4wjgloPXslrf9nhviKw0E5wwJizw3m5p9nyI30nU2a
IQGPR3fCtY4h5wPSPnXuE7AotfJq7ccM6fq6c6SnU0C84yqDrpghM+ZUVxm/
FXAxoC/78naGJHvdOp3ZIKDIvDolYzVDfr9fHRhSI2BCs2GmWsOQz73zgiaP
CFjMGrd0+TLkZsUfmdsqBFw3e24P8GTImdhZfWKpzYcdeCJpEUPmJvQWztsv
IIXt3b9mLkNuV8fEJxUIcLe4HJ7twpBE/Y7k53YI2MvuTq5wZEiMd1hNd6qA
Etaj36xiSHv8yaUPNgoItNi7MCRYGgF+Cr/W42NbAT4Kt+W521bAEoUXuNlH
wCyFN9U72dZ2H7PMtXFTNXFTPH5V+PZf9uHxjcJhZSbb8qhUuMS//w3/fh7z
zZRPI49hk8x77T7HeHQp3G73OcrjrInyeZ9HvYnyOfiQJZ8iHs0myieXR4fC
GrvPizysJsonkYdI+wTzKDPTfXg0mek+PAYUlvK48XB4pA8/3VPuA0RZ6D5A
joXyMQFlFroPcFfhEKkPMN9K+RwDVlgpn6OAwUr3AdZa6T7AZoW/kPoAosKj
Uh8g00r3AbKsdB/gBSvdB0igfXyAdbSPOxBH+7gBsbSPE7BG4aiq8ciqccP0
/4PX7GOYPm+X/bg2AzYo7CwdYJj2F6UxoFPpNVljv6ABd5T3fdeeN8yA3usy
e0ljwKu/yXwmebZtDRjopX30cOyWeUDy0cPaJrN0vTY9Ss/J7CT56FH9Ce2j
x2PlMt+TfPRoOiSz9NxhepzYJ7O35GM7v4D20SNjl8zRko8Oz+bSPjoI2XQf
HSoz6T46dGTSPjo4ZNF9dHgqi/bRgcuifR6y7KPD0wpHSj4cnLNoHw6XMmkf
Doce8eEQkSFzuuTDwZIu85Tkw6E8nfbhEJ5O+3D4T6R9OHwv0u+lxUci7aPF
SyLto8V6kfbRwlOk+2gR0fzLttYHavLlwX1VtWu1uFKXVuz6j5okieNeVk6L
S5E1WwfG1STHpX3Ux1eLZ97+8H7on2piyp50yV6ixWSOZvPCITUh5W9ln3LV
wm/ivaLCy2riWPDK4okZWrQtO5yY1qomJzzIPO4eix/GEv7uq1eTr97MWHdg
lAWb0br+pyNq4t+Qe61rmMVnISPVDTdCCUpfjqpuZdF3vOfUTE0o2RMQXdNS
xWKwI7+g2xhC+oxjw+7FLBo/6J6aszCEJF7N8vguhUWiy01NS2Uw+dfUqD++
ikXn8paQIb9gcqG5K7o/kIXrSMytPd1B5HRS88ropSye3Fq55UBJELl4Id/P
0ZWFqrDqHceIIKKShsX/g/7K2Q==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlQ1MlHUcx+9MiCgiXsayUEtn0MzW7tLjuXvu7vs8li/kK2WxkeB0mPMQ
pksIBljhCwvCZMmUmYiCprEBiQbT0T/IHaUulSSiAunkfIldd3IQR6Td8zz/
ud9v97LP9rx8ns/zv3ueX5+TkjlFp9PtCL6V7w99wQ9dEtOpsxCHOY+Wrz1/
PyCjnXPZ5x+dSBuR8Sfnjris7+KGZYTd0/hAzPTwV27KMHCOVHb4TUY658Si
awlF12RUcL5xp2eyqUsG42y+Wqtb2C5jjLNRmdMy5oxoXKjsfkLG65ydW+Od
Ww/JeIdzdFRw9slYwzmtKSStaZeMxZzrV07UrSyQkcD5b09wsmWM8/MJFa6k
ig0yWjmXzOv9eF6qjOM+4mOUkcFZvZwEGWYf8YmXMd9HfKJkrPARnxAZpT7i
MyHB5SM+HulhryTFxyUhQH16JRSO0j4SNo/RPhKO/qNxl9pHwnMB2id4vgna
R4JnkvaRID2gfST06fWkj4TzU/Wkj4TlkXrSR0J8tJ70keCP0ZM+Eq7Haqzm
iZJwjrPWR8JXfHutD3AsSk/6AEefJD4u4FQ48ekFdvPrfVXtA+T4yf06AYR5
6foBlg/TPoB4h/YBfndrfFztA7wwpLFX7QPMuEnXD9DpousHKB+i6weY66br
B2hz0/UDLLhF1w9w5BZdP8A45+Qa/9Iavx24rfHAH8rYsZ3zNuVwTjuqOYeq
B7Dje84b1bHjMudAnXKBdvRy/lTJm2SHi/MsdewY5nx23ePBlx3jt6mPDVN4
v37Vx4YIzurlOW2YxjlE9bE97K352NDAjzeu+tgwxPuotzvJhju872zVx4Yz
A9THhuQ+jd9Qfaw42U19rLhykfaxoqOD9rFi6hHqY8X5/bSPFQ3l1Cd4vJ3U
x4qEYupjxekPNF6q+ojIfZ/6iMjaSn1EVOVQHxF3szV+T/UR0cN5QvURcTKb
+ohYl019RAS2UB8R+Vvo/bKgP4v6WJCYRX0sSHVQHwsWbKJ9LChq+zWj876J
NewqrqlfZcGSxswdEf+aWOpG/yy3aEHV0rr0fr+JOcK6vAlzLdhYuv+/+cMm
NugIhDmeteCcQ3g3dtDE2j8rdTRGWFA5srcgv9vEHuRuf3pUb4Fn5sHUzE4T
q5/BIsVxMy563xr7pcnEvt6zafVOrxlZGyY3N3cbWcua1rOB6WY439xR1dxi
ZOfS7pU54sy4dGF3+KkqIyvMa9sfE2FGQVu0szrfyHxfRvzs05vx08uzL5Ws
NbJnvJ5FoaMCLs9pnZYpG9nEsrWeVW4B2w5fbbQlGlnlt6k/Xr0ugB3IqXgq
0sj6Fw/2lXYK+Ca28kzfmIENDo3NzG0U8Ha0MOeLAQOrPqiMgBd70j4p+sHA
lMdpfomA9jrfvtoWA7O/lBJ6OFtAbPGE5bFaA2tWfxDB7dfnlrZUGLTn4xIB
utWZeceKDOxK74W/akwCqpKdYT1bDPz/Q4BnxSFxWYaB3VU2nybg0fSb0aEp
Bhbnfm3PlCcE3MirKXtkkYHp1BHwPxsJACc=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxVlQtME3ccx9kMujiI05jFKDgHJmRQM8MK/nu9Xr93uoeyBJ8R3UTEwMBX
g6II8f1YfODUYecER4lUNOKmwUzImOMvJMDCCAhGEIalMBxUVGSlUgay693F
/PfLv20+ufafz33+Te79RMvypDf9/Px2yS/f54EX8psfoX7KLMSF7LxlGwII
NZdErm7wSuB/WNlWNZPQmx88mJY/KCElVJcbFkHoqmRX5BaXhKD3Qs5mmwjV
pVhKDU4Ja89EVwwuIzT6w6SCiS0S5mSkzl2bQmh6ed3TpjoJluZfaOUBQnsC
Cm35FRI+uxx+TpdH6PHQJz+nlki42l+Wf76U0ITxwvl6u4Sc74qHf68m9I+5
aZHePAmj1o2XIu/LfK43dX2OhE5XZ949B6HxsZNbkk9IMFlDe4r6CD208kHm
lIMS3rVG7Ct5QajB/vnyNRmyv2s42f1Svi5sTVi0VUKU9aRty6j8+1Bib0yU
sNfaHTZrXN5/+Y/Br1ZLSOj3dTHQj5SR4NR4b1OYvCSkPlW5Ji1IXhI8Gk+b
6hsJXz9T+Yub/vKSMPu5ypdjR+yxIyLKNH7+zDci4gZUJt90y0vEmMaH57Ue
mtcqIvwfxueWiHqN9/h8roiId6tc6/O5KMLhZnzOiogdYnyOirg+xPhkifAO
MT7bROg9Kht8Phvl/T2MT5yIXA/bR8ReD9tHRICH7SNC0vZX8kwVMcfN9hFx
dZDtA7QOsH2AkmeMTzcQ1c/2AQq6VNYrfYAuB+NzBbjWwfhcBF62s32A2ja2
DxCscZHSBxh+qPKA0geIa2P7AKZ2tg+wqZPtA4w72T5AcjfbR/b/i/3/AMU9
bB/gxGOVl9jci21uM7i/VXZ0+MaMco23+7arMeOdXpUnKhuYsVbjZGXMSNXY
a/fdoBmZGp/y5SVmnNQ4RBkzLmp8O+FteZlxvZf1EfCbxo8UHwENGiu3VyPA
qbG/4iMguI/1EZCjXR9WfAQ0a/erHDcR0K71ClV8BBQ7WB8Bi7TziFF8TChq
Zn1MaKxj+5hQWcn2MWFCAetjwq9Wto8JN7JZHxNaj7A+JkTvY31MqNut8mLF
h8f5dNaHR24a68Oj2cL68Fin8VeKD49kjUcUHx4WC+vDY5eF9eGRZWF9eOyx
sOdlfM2qj/H191UfIzL+52NEgoXtY0TO3Yfrq14ReuLoPtvlpUagLGl/4L+E
NiS5Qx7zRiSusMc/csvPg0m1A2ERRni/tY5F9RNanup9a/MsIyZnGL6c7iQ0
8dSxzTcCjTg9fjors5nQ8O07Zwy9YUS27kJcUhWhU2fQKfwwh/GxlZ6Wm4TO
3J+y7MgAh74dVSvuyc+PhVe2ddS7OJT/9LSwpGsBLTiYvqSwikP18eYbkwwL
qCMsxn7HxiHAf2dGY340Hb0w6Araz+HYnKaRgOnRdLhl0+y7GzgIf7oMd76P
ovedt4Rrn3KYRyr0Tl0UPVNaH9M6n8MqfeyT3Y16GrGm7OOYYA63G3PXHTms
p0XVO3QTAjksDbx0csIneuqnDIf/AEX239g=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlAlMFFcch7daaRW5igelVlu1KiiRilnm2OM3UyWiqVCNKIpGJNDqtmih
IIIWqHhEhXoVFgVWEMWYWjeiVgPaF2gLWSyiqKgVRXYrEDnWqxa02tmZSfr+
ebubL7t5+803k/fhqrUL4gdpNJpM6eX6zHokvWkYopHnE/hGL0i1TGJIZeLj
Ubv7RfTMG/QDG8WQze9d9yl9JMLL5h3TmMeQtW7HnDM6Raxv3tSwvIkhadNN
lbNbRUz+Itze4c+S4vyxS281iRi7Pfnwl4ksucfXOHpqRMSEvHTvtrHEMC5q
4eZKEfbV9jEJwRw5j9tHCstEWKcG3LhdwpHIQ/PvBO8WASFhrqGSIy+EleMD
dolYkf23lf+NIx9VHHx/1jYR7t23hjZf44jtsqYxO1uEmO296M12jnRWfR/S
ni7iLeHA3svdHNlimjM/PlnEkqnra2Y+40jx3cCx7iYRWlQ4Ql5w5OORoYeb
Y0WUZQb2X3rFEcHrq9aLi0V0dLi68CREHhFGlTddnSwtEZceKFz39RhpichT
+R0f14jIVnmZdYi0RBxX+UjEQHnEgAA3db++XtcIKFCZybNLS0BMp8Kbg25+
F3RTQPVDyqdSwMVuhTe6fCoEHO1RuN7lUyRgXS/ls0eAfx/ls0XAsT7KJ12A
n5PySRSwRmXW5RMnwOKkfJYIsDnpPv9/r/QR4OGk+0j7q/8n5/ERcK6H7iPg
6UO6D2DrovsATAflY5ceDwfdB2i9qfBMuQ+Qc53yqQAsVymfImBaE90HCGyk
+wAHLil8VO4DbGxQ2Cn3AZpsdB/AbKP7SN830H2AZw10H2BrA90HyLLRzw/Q
Xk/3AU7+rvBcy9Nwy1MjHLUK32t1jRE5ROEk13Z1RuyqVthN3sAI3xMKJ8hj
RMYxhfvLXRdohKlc4VxXXsaItkMKj5fHiJZihc+udJeWEYsP0j4GLC1U+K7s
Y4CjQGH58uoMeJKv8BDZx4DAfNrHAD+V/5F9DGBVlm83Y8BOlSfIPgYML6B9
DLio8jzZR48yM+2jx5lCuo8eLw7QffRwWmgfPUJK6T562EtpHz0Gl9E+euwo
pX30+FbtFy776HCvhPbR4cci2keHB4W0jw5ReQp/LvvocGWHwgOyjw57t9E+
OuzLoX10uJZN++gQnUnfLx4fbKJ9eARm0D48UjfQPjw8Uug+PF4lx7bdkc7L
kzlB+mWRPNKSc7KTpfM0fpW1sJp38Wp7rXTebn/dm7Fjiuv33m6NPRwZEdNl
/3UUj2EpG7r22DnimWa5YnLjUZJanuvVwpGkhT6zM59zOJe253FYPUfEXoPh
dReH6Az4MT9zJHPOlAsPWznsDjt//1Qtq/pwmNNTXFC1nyUzPjNvdURwCNoy
qyY3niVJ+5f9cp/lAM8TsQFalkwKtnqvmMghfXtLSp4bS8In5qdHe3G4/6T2
VfUNhtxd5/Fv8wCLbyKTXp4+ypDOkaPMfzxgEVzSnpiaypA4X+u8sGYW/q0j
ot4IY0jk6j9HGwiL6R5DTy0ayRDraPPL0ydYxBbs7/O5HEpaTB3ey/ex2JBb
H5eVG0qCJ/BtdekskvrKPUsjQ0mVft+aZ3EsPr0Q4Ez2CyUpVX0n/5rPYtjz
qLf7HVqyqijSauZZ6XmZtjj4rJZktZ0xeQZKPj8dv/PuLi1p3DauPcyfRf7U
K+YzCVoSsTfXVxzOom3EoZ2Dw7TyqaDRsPgPIowTsg==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-6.999999999639158, 39.}, {3.9960923459148034`*^-11, 
            38.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-6.999999999639158, 39.}, {-6.999999999637623, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-6.999999999639158, 39.}, {-2.999999999483009, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
meB38YMz+Usp0NODVQulJn/9XxwK/gTQYCXU
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
oNDdOf3I+ukcnsqkSPkV1P//Ux4N/wJ6m2wf
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{5.528871626623129, 39.}, {-8.25677279628195, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{5.528871626623129, 39.}, {-6.999999999637623, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxN039M1HUcx/EDPQk5Mk5WZ5BCQ6HojANjB2a8vp8vzhaQyIwujwaIeCez
LyJhaWK3HCeZntkMCc0pHXgOMhowwlyfr8Y6TBfKXEeDLuRAyjru+FWIGN19
7o/rvX333WPf7fN57r19o7eW5hQHSiQSeB7vWzz4mPHjpx73UiIx8Hh9862K
UWs4UtucJRV7eQx+9EZA4rKlqFddLUwu46F99kLcrrAwqN+tHCY6HsZ8g40v
DMXMoRWTdVoeL6rXfWpyBmGkwHL0pVd53LZXHxatAfg3UNGmTONR2/iD0Prb
dFq6IGzXr+ah/nKb/ebq/rSO+ibzWASPvXpn1H2Ng+ae7RHEIB4KTaOtS3KX
zn6hij4g5aFrj2yv0fxO4/9uTXgmkEexIbtTKLhH/6jJ/fzKQ4JHO7nhTMVf
NMG4TLdhhkCf735BZXDShV1zRy+NEwjleRcjasdocbZEHnGPIGa6KktW4KKb
4mMm9XcIqod3Ll3Q56LXNutVZhvBmidknsW4aZJ3WgleyQpl3t8bW9l7nqCh
32drWaS17DTB+qs+y8M8c5wgLsBnbYtU21JFkF0bwtywcda8cR/B5UPBzK4x
zwgEO3sWMaeYHGpTEUFh6QLmg8q+D5QaghuJf87Pz7t8PUme82IczJXenliC
Ct0AM+uJJEiZ+5mZ9YQR1A31MrMeKcFnT95kZj2zHFLMPzGznjEOe973We3t
cXDIae5hZj19HNbwv/h7WjnUrfPd79sPh1S7nbmb7YdD+Mo7/p7jHJ6WO/w9
VRyEhmF/zz4ObvuIv0fg0PTdXWbffjicTR/192g8PaWj/9sPhzxFRfevcjcd
OPfNVEochy1r70e/k+Gm6V/lNyxZzuFElEF244Kb7tDGrW8L5xDcHVw9oByn
WY3y27EyDp2qmhMW2zh1HVueU7KQg/nNlYkJ5ydotiKTvvcQ+DGjo6D89CQt
TTsVkfcPoJzLiNrdMUUzpTJdyITnu+DY9dzMNB3dcebch07gzNvfWw90PaCm
RZ846vqBbdXN2utHJOJr1sGRyOtAfXTviksPAsXU5sOWJZeBxcaclpDnpeLa
9mPx5ReBU+3KUHFVkLhlyCVsqAdyW4qSbUOPiCeTmnYfOQmk7pmK31S0WJyw
XEkmJuDloEGn0hIilpCkb/VGwFC0av9bX8tE3/8O/Ad6G/Yz
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
9CUqzcaxEWuPqYzDFjLV/0MtNv4PSuoXsQ==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlgdQU4kaRkEILaRQgoAgGinqIq5KKiT5kthbXA08RAQLiuiKgri4NFFE
EYUVViwsoiIggiV2R3gSFjQW9vHAAirw1GXZhyAtsWCBDbnMkH+SyZy5yZ9z
z507yfg1W5auG2VgYHBe+xx6VSbT9x5ytoPB0CRJkdWXGJv3XwYkeRcSr/8s
xeS3c/N7oxm4+7xSwY6SInVjxLf9FgykXPE9khwuRem27gNhmbbYPXHs1NwQ
KQ6Tahalmdui3Gd9XJJcCuk4Y2lflA28O23jvp8rxc2qo5tO/mGNt7zJXuf5
UvR171VlOlijxbXosPo7LRfU+T/wtwL9QupFEycpptTf+dRAtcJ4d0+rZIYU
U/sjA1fW0lFfueXTj1QpPjl0xC0/RodL0rLQahMpUrwnr6wJp8NsdYN8/4AE
jXOnDlyX0pER+uVB2XsJ1P6fg+3c6biSVlG1olOCJ8EHdr6j07Ht8QRJ+BsJ
Yle9CfEx1u4XTpzV2iCBd/bA4OAgDTOG5qoEXqkEx9d7JNSfleDlToJVkU6q
yFwJxPEEW1tpJ1MC/wSCVyhIKxQpErgmE1wo+1wgi5WgKJ3g7i7tRGj35RLM
y/iTm7FWgnsKgpOnNO6eEiCBg8ngiM8M7ee9CE4Y8vGQYGXU4IiPkwSCusER
HysJTrsNXWg64UOSgLOVYJ3PZzHW3CdY59MlxngvQx1zh3z+FCP6NME6n0Yx
ipYZ6ZjoI0bpY4KJPmIEzjTW8X1dHzGuFBJM9BHj6kfjEZ8UMYL5pBGfWO37
N5NGfCLEuJRJMNFHDP8i0ohPgPb7hpnoI4ZnAcFEH+3xfIKJPmK0nSJYl8dK
jJqTJL0+Ylie1PP5DJTk6fl0Afl5ej5/Ah/y9HwagZzTBHvr+gCt+Xo+ZwGz
Qj2fXMC0mKTXB2gu1fNJAdIVBBfp+gCjbxDco+sDxJbr94H2ftPvA6hb9PsA
J9r0+wBHO/X7AK969HysgBi1fh9gpYbg+Sc1805qRMgaPv6/5qERYXQvwVFD
61QidAzvN9EtEEHdQPB63Yhwvo7g/oKhExRhZg3B6UN5uSLcVhHM1I0ItGqC
b6wiax8iSCr1fYSQVxDcovMRYuYdgnWnpxLCZphJOh8hUKnvI0RPSKfhJO39
Y5gWZV8kE6JenWFa8JUGRUy1yf+5QrgK1fTITzRETg2a5skUolXoMPZQHw24
zDsWRRbC9oPBVMMOGpjfgnzKNALcWFsirX5Ng63NPUeTFgHu72MEPX9Gg506
mr1MJcC8NZIdeEiD54nwjHyFAN/fOy4+dJyGY3aHv8rXC9DjdH5hQhoN9e9s
uUdlAqxy4j3JjqPBrzuZ9JwrQHI1Gp//SIPzmNehjkwB5IyqgHnB2n2Rnv4r
yAI0UJV+rTIaknrXPf9N4wvyZU5tiZgGp9z0rpfNvuj5Mulu7gwaDCLPZI9R
+WJv9xHObTcaJm89+59AhS+8z1l5BvRTEabr4wu2WfazUx1UZJnTphfKfGE4
82ncv5up6NrO3tzK9cXhoPoxF2upiCttGu3K9MXbHw7eiKqkglViOD2U7AsL
V6OF5KtUjI8qLCvQ+KCvnt0UU0CFr9H9a381++BUsEfYrWwqUleGO3uofGCn
etJZs5cKo137329Q+OBa4PaQBD/q8PXywZzeTClzNhVbJmXvKJT54HXi06mR
bO3x94v3/cX1wR4juG50p2Luw1+z3Jk+mLSzbhzFjgpG8dqcDWQfPOvd7xZI
oqI2405eqYaPtBXh03/QUBCdWHCyu5kPSfmWOX1vKDCJYZzwVvFhaHsiVFBH
QfIOq6OxCj4cVtUFmx+hDPvw8begaP3eZApmMX7qL5TxcWLThfUxWykoL6hP
+5vLB7+9LbgpiIJHtvGO3zH5uH5jqez6XAoi1kUVbyXzYf+khzPKm4LiI9e9
b2l4CBFX2leNpSC+eFaFYQsP+weqej+aUdCaw5y7SMXDcXL/76f6LNG6eWFt
joIHAysXd7ezlsM+PLyVXjs4/xdLZD6Y5Fos42GAsbFh2k+WeLf9NKuHy4Ng
H0xerrDE9k1/5AiZPBQd5TjMhiW8Si4s+5XMA3uOjL5tgiUY0yWrujRcqLP3
dawmWcLT6IBS1sJFY/KrEus2MqKcU6NvqrhopwcuTrlLRlsSL97tMhcG8YH2
g8vIwz5cZGQavyucQsZssTy9XsZFbbY03NmAjGr5ghfHeVyUp45OX/fIAi9O
LVhUPoEL+cakgMRfLJDm5tfGo3KRy098FLbQAs/ehBVa93OQ2U9vGz/KAuWN
yWmzWzlgn+UWn1eYQ2B6LvtpLQf7pO+tzALM8a+IhnsVZRw4Poxw31NiOuzD
gV+E8eq+GaZw+X3A5oOMA+vCE8tLb5pgQsB7jQefA3kEn36JZYKoifPNv7py
YPvwxZ5vF0ggz/i2JIrOQcCtxJtHxpHQFUOtSfvKhgvPvTg23RhjPybEzmpn
Y8PCOv9zGiMcUSwIyn/GxvS+nVVMfyMEFsREnq5mI8c/xevMrkER4cNG6W7T
JTnl30SCtE/xlUvYuDW2eYd/+xdRzo6mY34CNm5PNjnXYPpZtGua9W2mJxtX
ina/crb/JOq4dvzVRGc2CrKWukxy/CBqGrXNcgOdjYyu7ev6KRqRfEye4BWJ
ja23O69kqHtFywYcozO/sZDVuZlWn90taixtvxT3kQXvmedU9IkdotYJFr15
ahY2hV19uPiFuiLk4vvinIcs0ArIqWlcc+U4apGZTSELBkrGb9YHbZQe0jF0
s2QWqs403fxy10G5bZFfxc+hLMgTAnMM5rsojafI7TbMY2l/v+ecplsylS9e
j2Y8nsZCe6qg0cveVflx06my284srGmj9gU+cFMuf/TO3IXCgvJOWddhFw+l
7v+qAQv/ALgJMGY=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
90cuHVSu/f/M4uEfsH8dQg==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{5.528871626623129, 39.}, {11.99999999989933, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQfaBZoG2CrJgDAwg0ODv8M7u/VGWWmMNnocjDmyqd
HS6yxvV91hN36FyTf1i7yNnB+kOP/d/b4g77zjgzZGc6O1h8y97puFDCYVLx
1cqCeGeHk+K/fx+ok3RgW6hiYBPi7PAuxIq9ukTKQTLUUPmcu7PDirWat/Ob
pB3O9P8OUrNydviheLJ8/goZB4XA5v0u2s4OtzdK3OV8LusgNPNEhqa0swOL
9Z2qUzFyDklBnDZXRJwdbJ8d4E47L+ewWdxR9jmvs0PT5mP9d+zkHZhf5vMk
sTk7XFj0lk1vtbxD0LGpnK7/nBzEbs2y0OVScJi3fpPIhK9ODqeL/Z8b2Co4
vFlyTNf5jZND67wp/IvyFBzMl10MiXvk5OAWlbWxYZ6CQ/Pmy50Przs58C6/
cObMGQWHs2dAwMnhh2YPE89PBYdjenH/9xx0clDrSPx8WEnRQUFMk9l/u5PD
zIMB8794KjrcatK90bTWycH3WiTbvDxFh48l2XURS5wcXI7VaByYoOiQ8ebR
1/OznRzqJ+5kjd6g6GD/crLdy8lODn/MBeblnVV0KAUp73Fy2Luz4eOv54oO
3MWLnBnbnBwOiHEDI0oJGl9ODgBl3b2V
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
vVAvZAe2vPA/cqRkxg==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
+drj5vuYLTv8H09yv1c=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxV2AdUU3cbBnBEhoooBJAhaFjhXpYQIIxA8iRsUbSiuKhFqANBBHEi7oG1
uLfiREEsfg5w1FFHKahga6m1FJUlBUE/sIKCqPiFe3O+8/o/OYfznIR/fvd5
by65WMfNGzdDU0NDY2IfDY3en7fWGmzYZjUEGr1rVSDu5bl8Lvcxxbdl4XGZ
SwPxtHBD/dp9Zhi5RSxfkRqIzryhbhf9LXA+7OqehlmBsFj3qinW3hJ7umtn
X40JRHDY+/6Z44bhU07uxc9jAuHfLSwzihOiIUhveZEiEFOC4kOsb1hj5LNB
NyvdA5Gx5ud3iX62EM89vyxJGIjjRYqn7X/bYX/Hmwvz9AOx4vXSS1Ms7LEw
2bvrQ/9AjPaHV80ke7jPGP/dfu1ADN63a9Lq3fZ4UBk+M0wjEHf6LhYqHtoj
7J7p1n7dSsxe2ZQ1rL8IOZKf+la9UaKPXuMhc4hQLQwovt6iRFbu/CjxQhG6
Mnc9PFenxIBxm8/MPiVCe2Ixc+kvJQKWZc9f/J0DMuq9otNzlGhwlOavzXdA
zpWDk2ceVCKzafv7/SUO+OTyz4fWHUrYnj8af7XWARuVggDjTUpcyZzV1NDp
AOU7G6vHq5QITmxcZz6QwYhw02zPxUr8OtXKf5IVg1HSth9HzFVi7OSB+sec
GGSXn15UGqdEWXxhZ7uEgeWn8IoPE5UQOcy1qo9koJXtONnQQ6lyZVQVTmDw
beTLG5cdlKhaIu+fHMPghOWFUV9bKiFvKco3iGdQrLNSW9NQiR8kz64dTGBw
Z+C4Fye1lbCcdkU+OIXBYVent2HdCuyIDfFKXMQgJmmA88tWBQxkmdlnMxh0
/tKWlfVcgT3v0hc+XcNgvvSJqUulAmNTbs7duIeB8w+jHrgVKpDSav7ztmwG
w1zN9z3MU8B4Z9uovccZtElvRKVkK+A7DXrZp1TH98hHw2C7AjVjBvYc/g8D
Udf3h86uV6Df7Cj7o0UMtuRechqTrkBRrsnqI1cZVNRcOd2arECtXpThoVsM
2nN2WGyJV2DbXr3H+0oYvHkTuMxlkgIaoh6/vlUMPLilwIeiWec0ahmUh7Yd
r3BQQP+v2806jQx0Q/2mzbdUwDNrYJPJKwa1bsYzBIYKJD0KPeXyhsFk7eWX
L2grcP1smktkl+p4ixdMiOoGhMO2LVrcw8Ap+YOsoxXYN/zQ2nwtFus0DRfs
fg7YFx0Y3zCARcbqix2SStXrN8XeiBrOwrOXUwiYZIQ65duzGFmwvLUiDzhp
cnbvEGcWHyvTstKygbLovZrZYhZhP5rom2wHMuUaSb6+LFxGx6dcXg88+a35
j1Y5izO7Yi5NSQdKdcf7XQ9hUbq1T01PMjCySXbk2GgWy2TjWnLigZnJpzWP
jGdx/2hkZfgkIKooZ1RdIqvuB0iIuHhRnMZiR/aBrEcOwObavY5V6SyGHmjS
SrcErqVF/PDXGhYPnSyybQ2Bd1oPvZ2+V73/V+Jxv2sD0l32Dx/tZDHHNDZS
560cm61HLXiUzeL3QpFkfrUcLQWBdo65LDYtuTK1sVSOKMnA2j/Pstg7w+Rm
3Hk57O4/m1NcweJOUrduTbwcouKgQuVTFvnju5eeHC2HLDjYMKeBhcGOzrap
3nLMGV2z7p+XLDrt3iRoWstx+qlg0IA3LCbqtzTtGyCHRntNgUEnC0lETcLw
DhnmbAuZ/r5bdXzVv7ftfiZDS1GIU/EnFkmlt5d+LJFhRWztgNTPLIq1z+pG
nZPBYrmR6kLoiJnckqE8jc9dJ8Z0nxgjw8pEPm957qN6yCD+ls+2Nr1Lhrqv
+XwpVk/1kGHHJD5HHOkIP9IRAOV4Plc/610BeD2Wz/MtS1MtSwNwNJLPOlPP
aU89F4C0COoJQMFIPr/nPAHoCaeeAMwKp54ANIZRTwBWqXM45/GHaxj1+ONd
KPX443Eo9fjjkTrP4jz+qFDnbs7jj7JQ6vHHj6HU44/jodTjj7XqPJLzSBET
Sj1SuH7hkaIrhHqkEIXQfqRoDqb9SHEtmHqkOBBMPVKsDaYeKdKDqccPGcHU
44dNwdTjh5PB1OMHzy88frAJoR4/7PvC44edQXy24zx+MAikHj8IFNTjiwMy
6vFFrpR6fOHtQz2+aHekHl9oO9B5+WKrLZ+3ch5fbBHymePY+EJzGPX4onUo
9fgg0oJ6fGBnTj0+SDWjHh+4mFGPD+aa03584GtFPT7YbEvn5YMEZ+rxwQNv
+vnyxvUv5uUNcTT1qHIC9XhD5wL1eGNLKe3HG1ur6Ly8ofuS9uONd13U440Y
LWPSjwR++sbEI8EWI2PikSDG1Jh4JDhqZkw8EkQPMSb9SLBkMJ83cx4JdNXv
x/cjQU879UgQX0Pn5QXPEtqPF1JO0X68YL6B9uOFNE3ajxeqnwjI9dALO64K
iMcLWYcFpB8vlGYKiMcLEYsEZF6eMJojIB5PCOMFxOOJBdMFxKN6fZqAeDyx
fomAzMsTcRkCMi9PFKwQkH48EbuSz5c5jydWq5/nr4ceGJRBPR7QWUI9Hpgz
n3o8EDKZejxw7yvq8cDICOrxwN1g6vGAQkH78cClAAGZlxislHrE2OdLPWJo
+VKPGAuk1CPGZH8BOX/EUARQjxiOMuoRY7CcesToklOPO2pBPe64q6Aed5xX
Uo87coOpxx2NIbQfd/wZRj3uWBhBzx933ImkHnf8NI563DB7IvW44U4M9bjh
Xhz1uCF2KfW4IWYV9bhBkkk9bni9mfbjhrW7qMcNHQf4vEvWvFPWPAJBx/h8
/VrvGoGUPD5z220ZgfQzfNbjNhiBVbf4/KC8d7mi8Rc+d3AnpCsW3uezVe/h
pLpC9Cufg4N6lyt6HvI58faQpNtDXPG+gs+7OY8LLB5Rjwti1bmB87ig7A8+
D+Q8Lv/fn/c4Y2M59ThjXhn1OKPyPvU447Y6J3EeZziX0X6cMLScepyQ9YB6
nLDiN+pxgn4l9ThifxX1OOLPp3zmxp3qiNvVfA7hPI6IrqUeR2TX8Xkn52Gx
rZ56WIifUw+LNc+ph4VQnTlOOYO36t9v5zwMyuqph8ExdeY4QQwW1dN5MRhZ
T/txgPALjwPe1lGPA8rq6Pmj+sJeR/sRQVRH+xFhRB31iDC1js5LhPw62o8I
Fl947FHwhccecV/0Yw+/BuqxR1YT9dhhxQvqsQOa6fljh9+aqccOji3UY4cJ
LdRji8gW6rGFcQv12CK/mc7LFgua6Lxs8LiRzssGSY20Hxt4NlKPDRwbqccG
0Y3UY43CRuqxBpqoxxp9XlCPNUa9pP0IEf6K9iOE43+pR4i2/1KPEHtaqUcI
mzY+M8srHJZXDMd2dV6yuHcNR4M63+3dznI4LF7z2ZTbYBhGq/OB/b3LCt+o
8wvuA2KF1ersy10QLVGozps29i5L/KvOlWtcVA/VDeO/1DMU2f9Sz1D0e0M9
Q7FOnc04jwWiOqjHHA3q3Mx5zLH0LZ+5ep+bYfA7Pn/HecyQq85/cx4zoJN6
TPG0k3pMkd7FZ65uS1OYv6f9DIHoA/WY4N4H6jFB6kfajzEsP1GPMe5+oh5j
LOmhHiM4f6YeIzR8ph4jHNIwIh4BdPoaEY8hStS5hfMYYquWEfEYYIq2EZmX
AZx1jMi8DKCpy+ex3B/AwahW59etvWsQbvWj338HIa8/n125DfRxZiCf+f8n
6GGPxWbrX1X31ykByzbK1wzAMuWH9T6q+/GX82+GL3vSH9HrvnaRv2Jx4o/P
ixpl/cHUFprWq+7393zjb7C6oB/+ndATZH2PRcmQhSYRdv1Q+I//xY/nWHi+
z98QlKuLpK3zZi/YxeKpzpP4uWJdDIvaM21jmur+Xd7vzC93dVDidn6vTySL
xhz3uNEJOmhadeyq5hMGn6JmL7wxXRvLzibPLEhhELbeo196shZWXTc76DWY
wV3vnRZrt/ZFR96RSYcvOSA9MbOgslgTVal9jzTOdECs0OCn9EGaEFsEJQ8S
qp6PdhmTkNQHH49OLzGpF+Gufs03J6o14KUTk/exQISIEPvXTjM0UBvuYfjz
KhE0+IX/AZ2dU4I=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{11.999999999898534`, 39.}, {11.99999999989933, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-1.8733700100442547`, 39.}, {-2.999999999483009, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-1.8733700100442547`, 39.}, {6.999999999954696, 38.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNkn1QFGUcxy8SS7pEIpmR0RqRRDHzbmES9t6+uxoDpB4eGuChMaj4Bog2
SFmgghSJGSJ2puTlDEjhDKNBTkNKDxeIIFpAMiIojPIiL3cHBBSG2N3u/vH8
5tln5/PHPvPZz+7C+L2G7S4ymSzJcTnvc3odmyyAOHfZYR7HJR4/vvna9Cc8
vPpEzi04UmL8iEeZxBavxGqvRB7rn4h8xnOBm2IbD5d+kd2FB3gQiZekN/ul
GxznD4jc1d86dTmUx/ZBkdmmC7JVWh7hQyIHCMPD3yqy8/FmPx6jEtftm+9Y
PIpsIr/m4RwearvIxsuujsWjSuJi/dMi/VMOS4ZFttucw+GgxEEnHjsWhwqJ
s5bfy1x+j4PbCOVTzsFb4s+cPiUc3pT4ptOnkMO8EcrnJAfXEconm0PPMOVz
kEMl7ZPMIVPiYKfPVg6gfaI5KOx0Hw7tNroPhxwb3YdDsMRCHg8OA1a6D4dC
K90HMFjpPsAsK+XzGLAM0X2Abun7BQp9APsA5VMCnH9C+RQCQ910H6C9k+4D
7GkT+aLQByhsEnlY6AMk36T7AI+u032As6fpPsClL+k+wNxDdB+gLZX+f4Dx
JLoPsHOHyOHmsTDzmA7vxovc+cA5OsRuEXm/87g6HTqMIs8UDtChMEbkBGF0
8JN4ssj5gjpYokX+ypk3SIckiX2E0cFX4qtxrziWDoNRtI8WFokfCj5aXJRY
eL06Lc5K7Cr4aFEeRfto8aPE/wo+WqRLLHzuIC38JV4k+Gjx0we0jxZzJX5f
8NHAsJH20WDPBrqPBh9G0n00iNTTPhpobIv98p4zpC9yzeAveg2+uH22ENMM
CTEvMwQEa7DCaozzmGJIZuiMc3d9NAhYu3u/yyRDzuhba81yDUzW2mbPcYbk
VlxoPjmhRvSd5CPvDTMkNi2h+lKXGh/bt2WYBhjy0hnffGuDGhMRP9TP6mZI
nlfH6qif1VhQN80n1zFkh+Cjhjmrc8BcxZBfp08P9ejViGl9u/afCoYUhBui
+oLVCP+ttym1lCGjYecu7vZVI0X7qoe3mSF/TqXc3+uuRmPk95nd+QwJ3Noy
OvFUhbjn5sV3sxninW6xP+9VwZ+TPxtMY8jRcG3TsRYHz+txXbqLISm3Qkwm
okJi+9/1od6M1EeFhYmG1GFXhjCxf5RM6FW4MeNozMsjSpJMVq72Z1WILc45
kNeuJPNPmVUvvKVC19q4xpxaJQn6a+aJT+eosHHazThSpiS1WUmqb6dYVF7N
8WkwKYnlQsuqTf0sZqe1+XgeVpIV7wSXVLWyMOieGRt3KIl86fntN2pYfO4+
dnt8nZJsync5tK+cxS7PhzvDFivJqWWlW3pMLDpmPpMnypRkSlOjQgaL+/0R
lZsfKEhBfYRXZgKLhGttKW9cV5DYO3pbaQSLjAyTosysIOvXVP9eqWaxSHFs
Up6tIAdWFX9zxZ/FxqYrt9gkBWko/y/ha28Wr8fPLlkZrSDrvqsJ3CBnEffI
nPtiiILIhGHxPwy5m3A=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlWtMFFcYhlctqBSkIkVMNa1UoRFvnWXbmd3Z3XfG1tS1RiTGekEwtCsV
rffSaAQERRR1UeuNCiJ1hZqqYDQaE5seQVykIrdWIBUVReRSda1AkCJ2Z878
OF/OzubJzDnzfO/ZnRkftybKPlin06V4Psr3O52eg85IlKNuq4wVHZS79yy9
OrBJxvl2yrsPphYu2SCjrY1ySdCqa0GrZPhqfHTUOJ/p38j44Allf3WCjJBW
yh8l1YYlRckIeEz5Qfud/uIvZLgfUTbW5OtmWGT89pCyXi0Zhc2Ulem1YTKa
HlB2rRvrGTJiNQ4YqZSMqRovKfbyDBkzNT41t885t0/CGY2fP1NKQoy2Pu94
5BkSlmj33zalIW1Kg4S7rYzPBQlvtP62KD6FEhxa/+WKT46E7W2Mz34JrU8Y
n3QJ51oZn80SHrYwPqslbNXuLyg+X0vYcZ/xWSjBVsfmI+FKFZuPhN9vsflI
iK6grMYzUsKecjYfCfNdbD5A8Q02H+DkDcbnETDZxeYDJP5BOULNByi7xfgU
Ai2VjE8OUH2bzQfIqGLzAXyrKReo+QDLNHar+QBbq9l8gDXVbD7Agio2H+Dy
bTYf4BjrMxYYdIv9/QCPb7L5ALO1fm15XbPyuqzgrlO+36SUFUcJ5fXKci4r
0q5S9lYXsML7LOXlalmx9hfKr5xKg1bEOCnvVeLlrag8QTlELStILuVLy972
DCsijrE+FkzOpnxP9bHg1BHKansuC34+TNlL9bFg3yHWxzNf417Vx4K0g5TV
7eYtOPAj5Q9VHwsWH2B9LLi7j/Js1ceMoCzWxwyfvWw+ZlzOZPMx42Uq62PG
mRQ2HzPmJ7M+ZrQnsT5mJCSzPmY0avNnqT4iDGmsj4jkdNZHxKVdrI+IRC3f
eNVHRJy2H32qj4gXJ1kfESEFrI+IrgLWR0RCAbtfJqQ6WR8TxHzWx4SjOayP
CZkZbD4mrK1rjC0dEMjB9OS8U5Ge89ftKX7/CaTH3hXSKppQu9gZc69LII6h
5e6wcBNshw+9NvwjkIUJr4atfM8Ed6IQHdgskAWOnSuL/Ey42Z+1eVOdQDI3
fB/cPciE6rDshfZSgbjHEH+x1wif3vk99cUC2ZP67bztbiOu7Ki0Dg39hNz7
83mEfZoRFWk1Plu6DMS5tyR42gQjsgdNsiWUGsj5pp1zckcbMXFI/euaAwby
VplcVzTciJUZDRMvxBlI9gz36eV9AtY6ppb46Q1k46L9NdfaBXDBjbXNQwzk
sHeo7Vq9gHMTGr6a9lcE6bedG2W/LqDjQvi8noIIcjp00tSzRQJIQuDqTJee
nDEb15VCwPacvvTRv+qJrelleNvHAm6EN78bmeU5f9yoez9EwLbg8nERG/Wk
KnXEs/iRAq7EFeWWLtKTSzvWdJe84bHK58ihAauexJxdGjT9KY8c/xSvx6F6
UtHdEFnUyOPz9fFPE0foSW9ssxNlnuu5yDkXezjS1pkY0FLEwy9SmJh7nyM/
ZSvFY8X46MykmxxxKK/TbTxI/4v9+Rc5gslR3sdX8wh82Gcans+R8+oflMey
msSdFx2c9n7kUVhh/+FkEkeqGso68z7l0VHpGnbnO44kq88zHqF/54hfxnKk
Q7l8DI+Yf1sCvKM4EtT6WcZgXx77Rp3YPWQmpz6ldDoe/wMNLAg9
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQY/jtpCGM4Ovzd4SFZcOmr7tSd2z7+fTg5pD15e
+7PiqG33lMbl0Z+dHKz6Hlv0VR+1PSSWc1DsjZND5S5Tex2vo7YzhGW5DJ44
OSilAjWIHLXlB2m47eRgCVJ/+4itRu0l9dpLTg67gcqD5h2xBRm74YSTw4ro
z4eVYo/YWl1cyOC8z8kB7AyJI7bGILDZySHvLNCkmUdsa0Dalzs5zAMJrDlm
e7xQ5njhHCeHCUDjHwecshUSBIKJTg4OOkFs89rO20ZvYI3e0OrkELWEx+au
2mXbpf6/lvhXOTkUA7XJBF+3ff8OCPKcHHLrIpbweNyxBbsz2clBGeR+poe2
zbo3mnQjnBz+gwDvG4h7jJ0crI/+Pd89v3j/lBme/L4aQPujEm53z5+8X7Vr
MX+MnJPDo9qAyFrhZfufsTuaJIgC1YcW3Ouev3n/FUGl2kheJ4fmSIMer5X7
9n9a7vbKnQ2oXvVLVK3wsf32p9ZVazM4OTCLndH14zm3f3dFlCHLb0eHCf/8
73fPv7w/bbMn96Vvjg7z325ne3v1xn6HqhrOqZ8dHZ4lqhhUzHu/f9WW8+2J
DxwdbBvf6jfN/bF/IcOC30fOOToofZt/RC2A4YB63NuU/fscHVh3sgidf818
wPbs9sMBGxwd3DlVGXYpsh944PtfvHIx0LxnDP3PP3IeEHpwONFiBpAfOGNf
eAzPgcvNrAv7+hwdXLxe93El8h1QsjxytbrN0YHhwk9gAPEfAMdbg6MDAIzT
EIQ=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlglUU2cahlNQqqRSRAsiqAXBuoAbavZ8b66IgkiQOoKISiObOopSpOq4
FFdERwe0tlamWGTTjsdIRNxBWw2dg1RUlOIEREURFxaTiIGYCff2HPOd757k
Offmz/O///3PvV6q5Ih4Ox6Pl2U9ej/Z6rou475Mx+awSVceLD9PNZucgwve
MaiYrYqfPbiKuiPn1Bs6GFxLWR8c6nSfNu47q+loYeD9784F32ke0nyv0Nof
GhhMlZvWxWY+pQxnJ3pxm8GhnDvpu/ivyCWmp73lOgPfGBLv8Ogko73bi6wy
BoWVm4pTHYw0qd9i/6dFDG4NKuBnB5not6SasuZDDIoTjwi9NnTT1/2fHF+b
xSD72Pzk9N09pNsTUxqxh8Ee7b1TJalmet8mrt+4nUHWHQ/TGcl7ujt1yxD9
Ruvvtb5hGQ3vaemiMavPpTKoPqb/xW+RhU4kiJp+X8HALiljUF6ZhYrnnlox
WsUgaHDT9pZXFloyfM+ndyMZJFx8b7EWBbBlnV8Tx5tuf2FtBq0KC8vaNZ7W
tvroOHYZ2FsMPo5mg8VCdV9rM7j8iOMCpSlfaVLgWcZHLLe97i0FtoeyqwLh
vsfWVuA7f3uWt/nXbfWvU+DpbgeWWR2NAqkZH7O8sdenSIG8Zf1Yruz1yVEg
2b8/y6xPlgIP7vT/4LPD+v8xjh98NiiQVen4wWeV9XpXPsuiXp+lClyfyf/g
E6VAQAL/g0+AAjXLOebyUcC8imMuHwXKUjhm4xmoQM9avk0+ClSv49vkA4z/
B98mH2DoJhufx8DBzTY+dUBCOsdT2HyAPlttfIqAGVttfHKA0X8xlw9wMt3G
ZwdQ+y3HhWw+wNEtHLez+QCfbLbNB/DYaJsPEJBqmw9QmmybDyBKtM0HuBRt
4zMQoBDbfICrUzkOydUH5+oJM4Zx3KjrLYKWx3FK73BaQshDbj0d2AEIU+I5
TmCLcI7h+F1+7wQJgaM5/mdvvELCnc849maLkMjn+Gws39qEj/o72vjIcdSJ
4wbWR45AT47Z6WnleDmJ476sjxwJR2x95DAM9Q7c0m2h0zkR7ieVcpzCLGez
dT8mXwt07COSw1y0K279fQsdvS8VrfCWoy78IfTW/Sv/n7jwEV+OIElEwcr9
FlLeks9dbpAhKFGX1Wzd739oZontGmWovZvuEDPSQhU7o746USnD221kX9P4
nnyCV91QlciwHcvyPH83U9q4Ed/ci5MhMvupvmWdmYrzmkxJYTJcHL7Tje9n
psrjxT91CGT4T/NMx22PeqgWqarVXjL4PRt3Mzynh6oTA4OaHWUQj5wcm7qg
h0qHu4eE66W4dzj611fuPZQZ37nytE4K3uwC4yVdN4VJb53up5XiwjQXU1N+
N5nzSj6br5Ziw5hp5j4mEwXur/pxaIIUpSszZL/eMNFgHxe3ZUop6qMifos/
aKKGKtmZUqEULa0Hsl6qTJS3W5nC85biwcg5BZGTTRQTPXNuMF+KMvvNlkI7
E7mQ79x/6SXYkDnqaP2dd3RF8HxNrU6CUeeCdnUWvKO4wAOaIVoJzu9tOPN6
3Tuyix/pGq2WYOK67IsLW7soZJzydliCBMq9oh0Pr3TRhaYBC7KVEhQOWHSo
9EAXuWReC6kVShDQ0/O6PqmLwn1WFrl5S2CIdN8fLu+iFPWA5AV8Cdo/L0lz
HdxFG8bn//yjXgzvSG2BX+tbWv7TRHqgEyPTFOV5oOItyXmamR5aMcbyE+uD
v39Lpi/HXYxWizGwrtt3vctbWp37ZEl8ghjnjvrvOvHcSIUdzWPzlWLMSHm1
s7HCSNONK9oeCa3nQyW+Q34wUuDJtJNe3mI4T3RTzUs20nFXh/hYvhihnumy
g0FGSps81DVXL8KqgevL7g+zjsfTVOh0IqR9avljuMFA0vRbcZ5aEVSug3Yt
qzKQ6EyK3UK1CFUHrk7wm2Ug7n4WoT6QmTxrhIH+VFcuLFCKkD6hs63boCf+
oGGDm4UiXPiyJmlmlZ669i7d7+stQubpxpyxeXrKH55zM4EvQtusYXsLvtGT
U+WN6mK9EK3umdPOhepJsPtx9gudEOt9RuWovPQ0TNXpPkErRG5Sx6V8wxu6
GvFm6ddqIXj+wVMWxL/5y0cIZ42w7fnoN7RnxOGaJeFCqKRRf19R1Un1Nxe/
qJYI8aay6BedspNmrynTaEYLURH1xUloOqip/7GxTm5CVL+4t/qgsZ1yv/cK
b3AQwnPrWWOdezt9OzTAx6dLgHDB3k2e4teUkX2/sLFVgJbV/Owk3ks6Y3Gq
c24UwKxuHXto53NyUP1ZVnZXgNc7DLfNEx6S2M6jZkKJAOKz3eonkdX0tzyV
5KtsASr7BYV16tLL5zFq4+y1Ahzx++/UeT/fLJ/yyN6+PVoA0716yA4/KO9J
XxQ7Z7oAI8+P2Tov9XF5oddlp7jxAnikFpWkLWkpn3rV22mKpwBxOU8n9d33
svx47L7Flz8RgDf5mfVx3VbOvf8I8H9g5LTc
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-8.25677279628195, 38.}, {-10.9999999995743, 37.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-8.25677279628195, 38.}, {6.999999999950205, 37.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
NYWAK+f64c//bwjhLxcM/04=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
bMkAUcORlH5jkP7/Q4b/AdkDXmc=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-2.999999999483009, 38.}, {-7.999999999629097, 37.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlG9MW1Uchm//0MuGMitaHTJwM7ELGYsryQTR3fceitMPBgca0G6rYxhF
Z2shmXSDDQHFpaUZyZgOJrgFgi7YFZEZnGOHuQYYOgoM7MJ0kzHI2AShRWkB
a9v7oX2Tm5snOSf3PU9+567P02e9LWYY5mX/E3iXPT/j8/lYygSTjiOHBV4w
7/rpPw/B6T6BTcc+btG4CPpjZ4N8SbGvW3GfwFco8Bcx61Y/M0GgHhJ4TWDD
GMHxlL+DvLF0SFk6RLDYLPCtu6PLtl6Cd2Pngvzc4CkmvYtgslbg5EDaCawP
zge5JLC9hWBlv8A9hrgew0mCwUGBH5b7U0OwMd4VZI0tQmP7hEC2U+DmTG9T
5gGC90wCz874oyPIahU41XI7xbKXgHYJXJHkLE/KJXjlvCvUJ5mAUIGDx1ES
dI64Qn3iCM4uuUJ95ARPqdyhPhEEjxndoT5eHmaHO9RnhsfhlIUgpwT63Obh
si2E+jh51JX9G+aHx4VVi2F+eFwuF7g36IdH673FMD88itSeMD88Eqo9YX54
nLF7wvzwiJ3xhPnhUSDzhvnhMRntDfPDQ/Hd9dfTllhqVinr7ih55NcX5/x1
n6Xs/Nq0rjgev1wZlSpGWPqVIUpxQc5jB9y7OtpZ+kbbUuK4zH/eJUde/2cs
VbVNG5OWAdvKvpjc11iaaHCKG+cAU0avXqNgafrcZfvWKaB8ePyjkasyenCL
7ZL7BlD79G+HpNsjaKrseH2lFThQVRbNzElpcbO3KKEJMDc+2drfKKWZY49+
f/IE0Kv7IeedbCm92DKlWbYAmxfU8uEoKbWv/vD9bZUAVfU5o/skNF96djzP
CJQq1dZYk4TWH2vqLtAB+cMdNf/skNCC869GZu8F9m+Nrzi9TkIHitvPxecC
Jf1F2herxNRSI99wQwU4rpkju98UU23hSlu1Epiy3zINbBbTLczRJ16I83+v
QX/XIBFTUVrf7umHgJ3a1PVfO0XUseGbg7URwI/stuRCq4im6bUTJW4OY5+X
JjgqRXR0vrPyyu8cutYs3unWiKjOsccZ08MhX//tp9uTRVQWmXMz18bh13Nf
ivZEiWjdiUA4nGmwPP7HBENN/uturOBgvZlRbaEM5TZlyRp0HK4bf9YWNjC0
LTC+Gg6JH7BHjxxi6J+B+/sSh1Od8vhrbzF0wGm/1/gsB047viorgxHmUclB
stuYLdnE0OnA8rUcZjtGvVOPMFQxqa4SP8CBuRqYf99F4f/D4X/nalnY
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlG1QVFUch0ERdAV23V1A5EXRMRdFKgSFpHt/92SOoLZIFKkDOrBiKIqY
xUipCKMoIogGQ5Gsm6v2QRQEc5ps/BsmU6bAZrzU8hKYhCJqQbpKbHv3+mF/
c+7ceb6ceeb5cIJSMuM3jHNycoq3feI/N3rIarW6kZN9b+D69oYiWepEkl0I
S2yyMOzYVGQKbJ1IPZpWZdXfDIWzYlqiV0+iXN29sIx7DOOrLAd0g5Poni7z
UtQfDHc6jlvKSmQ0Y+6GE65tDCFtEbNa2GSaUX/jgekGw29lVyd4u7rT/XEn
9VVXGB56CQZdhzvled+/mH6BYVNi/cjlyx7UO3TylXAjQ6055gftQk+65pMV
ZqlkeNNFpiozeJKp8K/0dccYZt8a7ioa8yTZMllbWiGD9jVZ8KKVctqsbd0p
38twfVns42OH5fTkxIr41dk2f0v9opNX5FQdvWX9ki0MFStiR3V9ciqeGWls
TmH4R5DxHU/lVBFfHTCWyJB2atjWR04L7GNgVZnrj41X0Lrq+F5nDcPMiqa9
Kz0VFNfZuPblAIZ3MU0XOkNBbg1H9d8qGdrLtW4LoxSUm1xXfXoiw7nKzM26
1Qqi88H7H40JuP1WzpFvchV07esRzWcjAlbUZH4UcV5Bhz7wKT8xKMCbtAHt
dxTke7f4pusdAc1fmXOSu5RU/ljsI6By45neOX4q6vcV+wjI3llw8Kc4FX1Y
JPYRkNr1SebSPSriYsQ+ApLLCz6tPK0iIU7sI+B9w5mnP15XUa5B7CMg32qu
bOlW0TN7HwHnaubsvvBYRTX2PgIG6gv0GaMqMtj7CPDw/M/WR/Wij4DhF7zL
NMd2BLgoJG7M8rcdAdwUiafYJ0CvlHhtzQTbETBPLfEp7TOj9hnQ7SXxwyFx
wGUfiaOK+yKL+4AGX4nz57fnzW8HPIIkDhd16oCUWQ4+ZwDzbAefL4BsjcRK
UacUCJ/n4LMP8AqV+LTokwNMfVXiR6LOVoAPd/BJBQ4scvB5D7jJHPsAzrxj
H8AY4tgHuDTZwWcKsNA86tAHeKlK4lj9cIx+mEf+Kom7O8Xx0P773M7bxesa
eRQWSexqv4CHx4jFzmn28Xi7h7r2uaipsmGgJzGOR4rB+2MfpZpUyQbN+cU8
uMjnt+s1amqKOPx6hoZHr3HrYNIyNf0cWz29xJtHfP+2q8osNXkcd27yceVx
yOqc8MuXaioNKVzu+oRD8YMgo75TTYmWpWVrBjgk1TbXZgd50frxkWfVnRxG
Yj13rd3qRWdjk46EmzgcDOz4NWW3N/05YcmpBTUc9hjTawN3+tDsSaZg8xEO
JvMVeUnyVEpNcAsM3cEhr/H3R3WhvmTs79sbvIZDqe67hMMDvnT3+43v3GIc
rHW6xX4l02ju3aMV/qEcblxsMSZN96NtqzYsV/tzeJLuUprwuR9dcunectGd
Q26z2NPvxXvI4X+ymX+s
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlH00VGkcx6/MjJeKDJXVjKNNRkWhtmTdub9720qnttqpbSpRqJEpomgj
a0XS6mWzvVAklmFVoullN8VzC5kS28oxlCVvhWIYw4nF7IzpHPs93+fc8/nv
83zPee5s3wOCPZMwDPPUHO032r1HrVYb0Nh4VsCykS8ODaQa0BekLsK/hiiw
cRE4Ns8zoBkLatlpSgpcGy8tLMlm0YKALpf9XRTEYB2HU8xZdGTggT+WN1Mw
nLySJQ5m0seX7UlnySnIzslvWFjEoMXlFd3VFRREO9gNdw7p0w7czGtpiILT
vFzvFDt9+oXrh3sBUgrKk12NV6yYRHtYZTktyaIgT5LpVvBMjzZxC3EZSqHA
FGv7KPbWo80lHQE7z1PQlTNkc0hPj97saSwXJVBAXG2rlUkx+uWO2nDTYxRM
e5tlsv8gRifkrhNs+4GC7cFush2A0dFk4K5vAjX3Wy/RT+FgtNTWNeulLwU7
w9tpOwOM/nJTHndMSMGLkEHNPmq0eDwU7P5dxz9W8zSlYFOVjstDOJpScLFV
x2wzbSiY36FjzwKmphSwG3Qs2TCctWGYhI1Ix4oebUhoSdSx69lWTUko36Tj
WMe6GMc6EjByYMLnDgnVPapxjtT65JAQk61jmdYnlQTzvaoJn0QSoharJnzi
SJAZqiZ8Ikjofd8/4RNEwsBLHS/X+viRUF/SP+GzlQT/0v7/7UPChrh+3ySl
GslPWvL+5ZFwo1R5yuu5GjmtbQqy4JIQEdMXIYhXI/eIeOOf2CQUFisWHZ6n
RiPTzYbdDEkIDO++LisYQyHWkbjHGECitOvDGu4YunJeVpOtArAXv1cOBY2i
I2GDaMsHAOf0VlQnGUFGpUy1sAVA/I4rbMsbRK2Ps31lNwD6roRd9EkbQJ/K
G50GMwBSjartHJNU6EHcXc5AEkCAy+LJq5P7kUbWruwMwJbpl6n8DCUi7Jd/
K4oF8JfqV+6504cYUzsS644AXDE6dF1c2YvCcpeoZgUBNH5Vde9okwIljlqH
OvkBVL1Aj4qX9KBtRjlmM7YCYJsLO+PYnZ/3AXCYowr2in6PKpld+CseAJP1
G+tkdzsyIOY+D+UAnBkpuc7c3oZaG9vkM80AaNZ2r9qyFuTVbu//iAmQbrvb
etipGfVmtShKVQTsuFn6pnlpE9q7LtLCopGAV0tzk8KMG5D1Y2t3UTkBko6w
4PyGOjRd/7noYQEB14qkA/s4z5Ch69gUfBsB3NhYR0Jegi7ezHjKX0lAsFtc
UbJPMfK5nbO+24mA+plv2TzBfSReNU3iwSGg033RfQGWj27te/NsowEBP6cK
HQh5JnKabVTEVPJh4dWD03iCS6hXdDnKv0HD677jEfJY1OV+2uTwUz7cTktg
E3I/ZJvZvN+5gA/js+QocNF4+FAZ52LFYYUiJrNXXriRD1MU/nYc1gX0xK+Q
8TXOB+djVXlNJ7JRckzZx3cL+NA4mDCPw7qLTviYnSvm8OGSdZze6TUIncPS
eh6b8qHhjTi/6cRTJN25z7CPwQd7n2Ibz9wq1BsV/s/aERwu/OI9n8OqQau9
ZYHVAzgoE+5IHgrr0Z+jwgfH+3DIZ49N8pvxCVXtqhH1yXDw8e83MV3AoIvO
Mg5WZuIQdcqcey5hMh0f3/HaMgaHmkLF968tzGi7tdEZr/xw6P/1hhefYUGn
11eUjXrgYLW+aG7o+Rm0yqVidZIzDh4fbW8dfWJJWwujeOlcHKIDWwY3J1rR
c1a177acigP9t/a9z/r8f8bhPwDw494=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
BP8H9LilWQ==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{6.999999999954696, 38.}, {6.999999999950205, 37.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-10.9999999995743, 37.}, {-4.999999999662691, 36.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxNk31MTWEcx+8yEjeUSVHr3HMdGSLJEPN8n1MZSbUsb1d5qbxsyW7aJKIX
irq7vW9e8lIrzLzcGLNSe9iKZi2Vl8xbWFk0Zha6Q865jz/Ob7+zZ5/tPOd8
9n2en2HbnpgkJ51OB+VR1551v4eHhyWmUytLRryJ86Al7u7f/TKWbOZcWJ59
0bRXxr4Ezvc9ku95JMuYsJPziYk+YwISZTjv5jzesUH5XirnGZmdfpkxMtzS
Off0P/ttWyHDeIhzcEeVLmSZjLIjnOc7SkZ0AWd1e6efjEgr5wdmb6VlHCvm
7O6mlgxdCWeTbaTSMm4Vca6NstdE2SkuWzh//aIWxat8zousH5SmiMjmnOvf
nePfTbE8UeNzk6Lnfz4HVZ+LFJ6xnB+qPpUUA1EanxIKU4TG5yjF9nCNTwbF
uHCNTwpFzCrOi1WfBIrASI3PeoqyeG0+FP0J2nyU/+3S5kPRl8LZEY8bRX6a
Nh+KsAxtPoB3ljYfQJ+n8fkAeFi0+QDTz3MOcuQDBP7smt35R/EJ2hUsXgJ+
fN1wc8VPibUMGe7azgCpBdayhAHFJzfuzpsyoKbF3Ca+ltj6x1PnXikArDUj
tua1Sqzq3SbBKweYMy000lonsf7bgkXKAI6Fza8IrpBYQPSO1I5U4MTojgWF
aRLbdzWgyzsZGJJyP15vMLLoKUmDlTOB3qZrBWcOGFl5aexpFwMgRdhv+Cw1
shfpC+1kMlDflrQl4I/IfNvGuMMVqA75Vvq0SWSJRe3vXUYAb69Whrtmi2zt
4bEvgr8RmPU785+HiKy3YWP84EuCdZvXrAxyFlnaE0tsSAtB6YX4YuMjA3Nu
rWqaZiMQ3h/fVFtkYKdOqkUgPvxlnrTWwArV8coluD2uvbzd18DI7JhRZ1MI
Xt/SN3cNCKxOPR4TQUVjnZPYKLB3jnkh6JGaVtcXC6y9u/nzuYUEjV/mXajc
IfD76Ecwy9NV30oF9kl93YvAvzrqMPEVmEdfaL6TniDL67tyXr583nUE/wB7
IRF3
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
xSumWg==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-7.999999999629097, 37.}, {-4.999999999662691, 36.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwl0wtM03cQB/AiWF2DgAiFmBL+v6FAZY9GJSzase//vwfzER8tmS4dqCi6
hoIM1yCjPOomIo6uICCCyMMBIqGiDJljwwMCPrJlYliFoYJAQobGTBhrfAxW
/F9yuXySu+SSy7G4g5r4BRKJJMKZ85Wqns3NzQWSZD6yBWjPip75Nubn2TQB
F8pFnygy1+sOCegoFd0lN3TKDQKsxaJLlwXIVPsEsELRnq8GBCRbRIdm3AnJ
0AjIzhM98pf9ZfPHArbkiF7XVy15P1LAn2bRa16FgFh9RPNNF47CmzSjLqEC
PjwwQcGLOGq4d133doCAmp/cV/t5cWTpLKxs9xZg3FvvWq7gaEzX0lS32Lnv
nrbwy284+xuVOX/P8shoVd/4DBw9bJ4JPT3D43JsRHvZDo6OJ/iVVD3mERNT
72FI4ahmyPKbdJyH8tL+xAY9Ix9z7ffFtTzO5JTsP5LL6AP181SvCh5pJ794
U13DqCdv5frwIh7X7jo67VcYFRpCnrie4JGkVa7Q9DKyPZyzmsw8cqXSaNtt
Rn6TtqDKVB6yp/nbH/3B6Peja+sSEnk4vDsVr9kZ2X+w+o/G8dhiqGxd1Mdo
VWr3Vwt28ojKPa/7pYGRy4XJoLrVPHyT9Fs3VTDKLL6xeG8ID2v7WK1ngXPf
Y64pCgWP9mS/XbKjjLoyy3fd8eJRkO+Wvj6NUa7J2vfNQue8d+OzmkRG8dmj
19c8B6JmZUOIY6TLKxCGnwDBmhWBvjsY6csq+GNjQMsSR0/gZkbfNUt7wgaA
fh/P6GQlo7Xz52oBBpffPzmgYHRwbNpHex64lWm8v9OdkaV1c/CXZ4FaDKie
OjgqaHj3QEkx8PnuhZbqYY6M13rvXs0H5A9e/qPv5ijSMZH6IAewXe2I33iO
o8lt1VFuZkA1vXFEyOLo8K9TH4WZgIq86n1a5/0e6e8ZtYeB6ayuqfQwjqCM
7TcZgXDV7Q3pnwTQWwlxU6N7gPKusshVJctpd/Q7Sx9vBXzaxrvd5P7UPz6s
Kn0PqFpiG5TZfem44tPtEyogsvffLLV9GR15cS5lMAiYGum4clruTR1mKkry
B36MkWa+fsqL1BdtbXUewMq0ssamix7039dJQ2YpIHkRbEq85C7+lwT4HwhS
n9k=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-4.999999999662691, 36.}, {-3.99999999981992, 35.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1wlQE3cbx/Go9ZiKSlABS7IL4ZT7SCAXyS/xwGPQqWMtirbWgL5V0FKP
ghWq1Gt4610lePJ6QfFV0XrgVUWtaFFQX614YGmpFZRTEEiQ+pLdnfrkPzsD
35nM5sPzLBnwmLVgUmJPkUjk0UMksn0Veb/tPm6wfStaboRC3fUgapAEeZXW
DEuaEaebnj6UuUsw+UHbsdELjcgcs793cbgEfetbzM/nGZFtiI13ipHgAvMq
4onJiLbHDx85z5AgLak50yveiN0u41aWLZJA/WvzqksfGrG5ddfHqvUS9Jje
oi2MMaL8y/uTP/5Bgltdr/NatEZM2dz0td81CXads1zLCjOite7e0HG/S+D4
9muvb32M2FukGuHUKUFNtbJvipsRn75m3lsxWAqvuaELJjsa4bdvZdw2fymu
bpo1Pai3EaLLczEJUtyYVl7WaTGg5sM7505MlkL+85JrFxsMeDqp6JcLc6To
eSduRFq1AX9cZZOT06RQZCwe5VdhgGPfn4d+cViKwTrvzD+OG8BGJ/vdPC9F
FNae25xngKeDy8WfSqX4ZdTTNuw0YOiiyw9jHnX3BF95/UYD2hYtSJ1TI4Uy
3rQwe5UB1wcyO6RtUgyZt/mEfqkBWYYyw9xeDGZknGh/Nt8A3YDlSbGODIZs
vaHNMhlQlRLhViJhoD5659vAOANyByzILhjBoKpxq3xQhAHfTXM8+elEBqPe
pjqc8jWgImP57YppDBzNv4qmSwxYtvRi7dDZDIxnj4h7iA1Ij70lcklh8DCx
h/5A7+7Xt/8w9MnXDB5sL1s7xgpsTPvIL3E1A81U58YXDcDeu+XK4xsZ9PlP
Rcp31YBjr2ExV7YziPxyqDioAtj2F7Nw5VkGd+9dl7n/CDx+MPal11UGmXF9
kq/kAa+OV6XtucXAdPuybvZO4OFX1UzrrwwWa//O7rcJWO8z6ZGsisHJnUWp
BasAp4uB/w2oZeDT3Fw1fikw27Dw+4GvGFxXFdyumw9kHfbeUmplsH3J7zHr
TEBGr5H5s3qx2JGXPTooDpggj889wrBwCB7SMDwCOJLgUCPyZWEodfUv9QUS
f5syVRfCQte0MiBJAizcr26dHcWix664Vw5i4O6Pp4uW6lmsvbMl43Dv7vcb
UHYwLYbFYbfk3B2tepiPpf9kmsji/r4VZY8r9bDuufZW+TGLLE3iGrcSPY5X
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
0RX3hZ5iHix9P9QVl4QWcccV/wc+O0ZQ
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-3.99999999981992, 35.}, {-3.9999999998205453`, 34.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-3.9999999998205453`, 34.}, {-3.586634607240228, 33.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-3.586634607240228, 33.}, {-3.5866346072574515`, 32.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-3.5866346072574515`, 32.}, {-7.999999999249098, 31.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-3.5866346072574515`, 32.}, {-1.9999999998370868`, 
            31.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1H9M1HUcx/FvbJgTKMTNdeVMkemccCk6v7+/35dbGwLWKW3adkNZ/mD+
YQXSzDQ20Y0yINccjsuC1Nm5HFyyyinzeyl2VHLcqBA5sK+H3negBoc4UEq6
+3744/3e97vbc/fdZ499Pnffxe+8V7QzieM4d/xOfHJTSw/u+T7Vz9kDVLSa
D3O8Kf7VBxo+dT7S0a08XrFp+xy/0nzwiwODOhwndqy9GZntf6nh3MtWSEf+
VWeaf+nz/oC8KLPsso7tV97ypbyW7C+oN72O0zp2fvbHq5emkvynvMPNZrWO
jcub3b/XcP5gubbml906ClYGApXtU0bneFj4bb2O9hbr/ezJx0aT81rbgywd
I9rGReU/jRtFE9aqoVd0rKu9XLL35CPjy6pfO/Lm6rjgWZ678tsxoyJUemh2
so68Us9x782YETGvuldMaHg2lvZJf07MMFv7tvgsDb3qkdQb50aN8vyWD070
aPgz77/F+wpHjfpv8IN5TcNY+v6OgYxRw9VWN7+mRYPn+j/T09Mjxi57NMz1
sJ4843p6xqVh7Yes6waF+KUhqYT1kszEaKjYxPrHkpT4peHYBtaFjeP5jeMq
Ns98f3sgMSrat7EuXxAoWxBQEd7Hepbbl+z2qSgdpR4VsedG7H5ie1TsHqIe
FcGz1KNioUQ9KopPP7Q73/YoOBp5QDwKTk3cJx4F3sgw8SjYdTZqd6ntUXCn
+J7dT22PgiPZd4lHgStjkHgU4MUI8Sh4e8kduwtsj4zjb5rEI2Py2N/EI6Nq
+DbxyOjMHSD7I+NwUz/ZHxlZsTDxyDifFSYeGQ65j3hk7Flzi3gknE/vJR4J
wa4e4pHQV/YX8UhYfShEPBJizi7ikbCjMEg8Eo72dNqdZXskbA11Eo+EqBAk
HhGZ6V3EI+KFzSHiEdEyp5t4RHAf3SIeEV9dDJPziq9nsP373PaIqKtl+21z
MkWYM+fDPCIcVRHiESB6B4lHgF5/l3gE5Gy4RzwCuJnfD/MI6Ocssj8Com9Y
xCNgYa1FzktA5RWLeASkRSzy/+LRMWERD4/maYt4ePz8xCIeHlyUtachMTwy
brCuKW57tv8wj6ZW1uuyi2Z9/S6P706yvpCcWIDHqmrW5lDPv771PJx7WYd6
r99v5OPPl7Cu7F72cfey+Hou1sOJxx085oH1/Ojr1UmpcU8ua/Z+5vE/Dn5j
/g==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwl0ntIk2EUBvAx8hZWWjq8zOwtzSJXi6AEfb/3VCMko8SVRKZoFyXFzQkK
84pGVGCQZplCijIrCLxGMdJ5Ei9JmDbNSyHKWuZci8JpjE9dzu+Bw+EHD5x/
DrmmTrgpFolE4Rvj2iJ+f1F2uzeKNgNgKP3rfsx9O/46o4+7s8SgNWw5jtTs
wLAZvm7CzGDR/jRc2uGDjb2DtqUxBtU/leKuN754459UMYMMLmceismZ3oma
Qv5Z1SsGx4tDx6KC/LD//HV+VzWDyD3yQX+tP6ZpLl5NK2BAlckBHisSPP39
ExakMEiXvBjwrgxAlc54IBUY1L+VqZqUgTj046u+9iiDkFl9hsEvCGVls39M
hIG5Iq4zdTwIa/LnhqN9GdjRFH+/Khg9BmbidU4OzhaWQtQFKZaoJ7VSGweW
d6Q8e2sI8rnDsbppDkbLh/wP9oVgyWhPd3Q/B+sj+Xxm0W70vNcyZWrl4H2V
6qQxlqDc3KT+KOOgLGVbhEJNsJl8UFr3chBsNMvklQTF+/SZzRIOHtjsl560
EFQs5L12eHLwpY025A8SvKVZly84KCwH93h9/kYwz5Awl2Oh8Puw9nGzlWDG
SG7vo0kKBkvWKfsKwRhdymR8H4X0czU+3WsEHTGS0JetFOYTeafTSbCu1hUK
nR2CK5K71rW3KYDX6qZZZIJ7vYrCwyuC292S2tySKDQ8F2yyTKy2xVLQ2ASP
TvVbG05Q2HJkbdMlxohiYwSFxCzBi656IIWsJsGSecVdsffGvXHBwv9Q+A/v
7Suc
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwtk39QkwUcxkeQcrjtHUuGQG3vdkEBmw5EWXt/fSP7IehaiF5cgdwUgQgY
ntGaoAMNz8DQyJzISQVkFNfmTkr0sG9IWLrqopC1gDwKcxCKQHMOYxnX5+65
55/PX8/dIzeUZeY/wOPxUu/nv+bNx1WWnOYjbxGAtQMlY6/9wseDBuHUH7Mc
eLjQYd0SAb6XoSc3X+dgxTpvoS9VgPLzXx/XD3FwYTT14M5SASpPl2YP9XMw
RnxH93QIsFuVsdVzhgPLUNc+l0eA/eqXPq39gAPrmpmcvpVC3HzuJGOr5yAx
oeaKxSTEbZcjJNsqONB05TsFl4Q4k4cpH+ZyMKoe/v18KIEep5yoWc/B0ely
ty2NQMXl+AF1Cgcvz8XZPbsIbHrRVfWZlIMken57UQuBepNKPB/KgeSbm76V
vQQ+Ex/fIJllgW8NelU7QuDu4itzvBEWxJ2rL9RNEzjNLn/qXD8Lj4e8eUtx
j8D21mBzmp2F1UpvIBAgcMciLGQ/Mjv2Z4gIs5IapU16Fibn3HUtD4lwYfmz
srM0C983O/xxShHmhdcUYgILwRHmVXt0IjTFrfM7oll4Kycpod0swvSsQz83
8FnYXuGaOGEX4UBTzp0tPBbe3lpWbpgWodh/xhDqZWBZlLfH90Q48nc2Stqm
GKizsqe8xVLU7q0/ClEM9MVMBOxfSXH37ZxVdjEDJq6xYyMhQ8XVIYUmjIH2
YG2bM0uGiSp/mStAQ3rh6C3VOzK0evskR2ZpKCix1JdfkuEryZpIwzgNATFp
PjYnw/evbSrPGKThQGfu8A98ErVBK2I3XqTBKVM++nQMiZp39ycX2GjY1e7I
rdaQWLC4Dw0TNkuyLo3Ei7GRMWF6GkSmn9q8OhId17eEm7Q0jP/zSZc5l8Q1
HbHr7bE0FD65NN9tJPG5kn29jnAamtJuOCJqSbyZbKzau0BBZZCuRXmSxMf8
k29I/qJg2R5NgqybxJle7xevuylIP3tq09RVEp8/dDi19VsKNPYTMcfukMhm
d/us3RTcxb8DpWvlONjQrO5tpqA1K2rSaZTjlwPVG+5W3/eLl4zYP5LjvLxo
A1tEwechPYPRLjnur8pUH8mkQCpnBsMeVKBhnPHdZigwYu2vFpUCD2cntuUl
UtA5dvxG5QsKFLqjU0aiKfjxQMW9BaMCf9vB/7iAT8E128ORS+sV//+Lgn8B
48yLcA==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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

            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1: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
8Bg=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-7.999999999249098, 31.}, {-6.999999999814577, 30.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-7.999999999249098, 31.}, {-7.99999999958726, 30.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAgBnz////H8AAAAAAAAA/QGLPdbfV
MiDAJ/sgkkrzPkD/PI8tUXAgwAmumrTr4z5AmNVFYnK4IMCoGG1n49E+QCmZ
mVU5CyHA/DqYqjG9PkC2h4oHpmghwBAVHH7WpT5APqEYeLjQIcDdpvjh0Ys+
QMDlQ6dwQyLAZPAt1iNvPkA9VQyVzsAiwKbxu1rMTz5AtO9xQdJII8CjqqJv
yy0+QGbBECdEbyPALPTHU+siPkBELegtMJEjwDIAuWqlFj5ASTP4VZauI8Cw
znW0+Qg+QHbTQJ92xyPApl/+MOj5PUDODcIJ0dsjwBezUuBw6T1ATeJ7laXr
I8ACyXLCk9c9QPVQbkL09iPAZaFe11DEPUDGWZkQvf0jwEM8Fh+orz1A4Nj8
////I8BmZmZmZmY9QK3Yb46D/iPAQldAyOJPPUD798g5DvojwLOs+8XaOT1A
yjYIAqDyI8C3ZphfTiQ9QBeVLec46CPAS4UWlT0PPUDkEjnp2NojwHMIdmao
+jxAMrAqCIDKI8Aw8LbTjuY8QP5sAkQutyPAfDzZ3PDSPEBKScCc46AjwF3t
3IHOvzxAFkVkEqCHI8DQAsLCJ608QG1q8xuEYSPA4+/oeu2SPED6JLL/8T0j
wEpMZHFyejxAu3SgvekcI8ACGDSmtmM8QK5ZvlVr/iLAC1NYGbpOPEDX0wvI
duIiwGb90Mp8OzxAMuOIFAzJIsASF566/ik8QMOHNTsrsiLAEKC/6D8aPECI
wRE81J0iwF+YNVVADDxAgJAdFweMIsAAAAAAAAA8QJfpF+A=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1FlIVFEcx/FJUqykMELvjKOjY2WZS6bQ3ftBCzYPaeaDKGNhlBGkJqaI
aWPRQptRPaRRhowRQqVlhmFwjDYrLMu0oqQSKtOytCKXuTZzzzyc/pzL8OVu
H86FicjJT9viYzAY1roPz6/DODo1NWUhBn1WYOHGiRPpNRbiNxl+0jaqont/
h9NusZADTTXNg/0qDh+zSyFVYcQRviO3v0vF6uKb6ccGQslw8pmGhNsq/NH7
43pcKHkTba7oqXff/7VtTlW2maj3/37oOqLiYvG2prDSEGIKieuJzFdR2f/6
ZU6FiRQsbst8kqIiJyGwPCvPSNSfdfmPY1WE3njRVBJhJH+WPNwwaFURMG+B
s/YdRz5Ht26vD1IRs843/UUdRwK/72oe81exe3NR+9ydHCnYpS39MqbAkF44
ZE/myMz2tPcFAwpaLFPdzYs48uZZ4Z1TvQrO3TeVBc/lyEdndm/qXff55Ht9
+6dzxKoEWS5dVeDI8+wLR7bqoyAjfJreY86UcWeKgrALtI/38+6loPMb7Uir
ZxTkzvDRu2XTLPdS8H2Enl9b+8u9ZGQ30O575xkZt+JpF5of7DQ/kOGzj77f
L6vRN6tRxtFil/t7BZNc3SODPz2p97jukfHz7YTe1COjOZU29cioHB7Xm3pk
ZLXStukeCcoV2tQjIbqTNvVIiDTS51GPBFMHfT/dHwlrbNRH90fC7RYX45FQ
NltjPBL2rtcYj4SuPRrjEbG9WmM8ImznNcYjoui4xnhEZBo0xiMiqJv1iIi4
zHpElByhPV/3iODyXYxHhH+Gi/EIWLnGxXgEPBJcjEdA7TIX4xHg8Db1CIhP
dDHfS8A1b1fpHgF+SbR1jlVATBLrERCZxHp4DCWyHh6HElkPj9//eXgkebum
2jM8NiV498PeppXu43F2KW3EpPmdz+PxMZ52k6/nATwSvf1+oGeyMZnHyTja
T1/dG6xdzmMilnbF86jy51E8Crz91XO5kcdIDO2gT6sO+gTwcHib/v/w+Ad2
aVRE
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-1.9999999998370868`, 31.}, {-7.99999999958726, 30.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1n1ME3ccx/GiwTWCjGyOMVGHqLOUAn24Pl3b8xOdxqcE5+Z0c3PAsBhw
8qRODBE1RkR50IjJZJomimbZRsJcRKdbTnxiLuiMoFYnzAwViuITBSz0Ye39
+sf3lxLyDr3rq9/fXbhp2QXL1oyRyWSngj+h37Lr7kBwiTJpzUa+k3Xfe+c2
+wYEPOtmHZc8NuP0YwF7X7DemerckeoUYPOzVs/iJ2b+KWD8hEGpE6UDBLyY
zHrpSEPGSEPwfKmsz7c3erL2C4gE65KjcyN2lQngPmZtl5aAj9awfh06PEOA
YQPrmm5T8CXgQTnr6UmhJWDJbtbNmVHBl4DyataLHe6FDrcNm2tZd3WGlg2G
GtbFk1uLJrfacKaS9bhVTZGrmmyQfUM9Nsy0s/ZIHhvm5VCPDatyqceGvALq
saGgjPVCyWPFuhrqsSL7OPVYsbSFeqxo0wxJnSt5rOizsZbGm2FFZcIQ8Vhx
4i/qsUJYTD1WLD/C9m+R5LGg7/wA8VgweuoV8VhQVfaSeCywNz8l87FgzLIn
ZD4WzJneRzwWTFe6iMeCY/Ze4rHgirOHeHjs3tZDPDz6v+whHh7uwh7i4WE/
1Es8PCJiXMTDo6/BRTw8pqxmvhmSh8d35ifEwyPT+JR4zChe0U88Zlw/9Ix4
zNjof048ZtQn0OvHjGUOul9mfDoyLHWt5DHDofJILXGSzFAbRojHDPm7o8Rj
guLvUeIxoXa1l3hMEC57iceEa5k+4jGhqsJH5mPC9z/4iMeEwYs+sl8mHL7r
Ix4T9rl85P4yon3ARzxGZL/2EY8RwrCPeIyov0c9Rqy44iPzMcJz2Ef2y4jS
1T4yHyNuj6ceIyYe9ZL5GMDN8BKPAer9o8RjwJuuEeIxQJf3mngMkDUOk/kY
EBvJulryGJBdPETmY8CAm95fBlyqGiQePZxmer/rofK6iUePi+1u4tHD3ugm
Hj10B+5nlfsD4rdLVP8ez9CjcXldhc8TEPds/2laj0mPDndC0ZZXAfFw5MNU
ZZIeRwtLpg71BMQfnbfGFkTpkXi1vrbwXkD8bWTbsVNuDov8+y+5rgbEy/mP
ov2dHKbGfvZHVnNAvJEyFgtaOTj8z0udjoB4l79nrWviwEWdMB9ZEBDfzz3o
nWLnMPd29Nm30gPiB5dnXszP4LD+0rFNlfEBUdPhFU+bOJy8lVcQERkQrXWT
BiKSOMSMz27Y4vaLCyLLv1gUxWFXVuU7g4/94vJZSu8+tw7x9x9cKLzvF3NG
Em7e6tThQunan/s7/OLGrZ90xbfqsJtPvJl/wy9W/Nqe+HmTDvXj5NyT6/7w
fHRo874hNbt+dKhys2bXjw7OftZsv3Q42cua7Vfw8x+xZvulRXQ3a7ZfWlT/
x5rtlxb14b+z/dLiWvj8zKPFkpes2fUTPN8g9WgR46EeLRb6qEeL1gg58Wiw
M/x9mUeD8ig58WhwNlZOPBq0JdH5aPC2Qk7mo8EZlZx4gq1mze4vDWI5OfFo
0GqgHjWcJupRYz5PPWrEWKhHjTaeetTw8NSjRreFetTYYZOT+ajxz2zqUePp
HNZ1guuA4EpH83zWv58LrXSYFrOWTleTjpKlrKOkE6SjPof1tbbQSsPKPNZu
6R90GjzrWU8JfZ2iNJQWs573YWil4c4G1vktceta4tIQt4n1QcmTCt0m6kmF
eiPrh5InFbElrKMlT/D9udSjQtfX1KNCRRb1qJCeST0q3PiK9TrJo0JhJp1P
CqKzqScFDTnUkwJ+LfWkQLeZepQYLqMeJZK2s5a2u0iJkztZz5c8SpyooB4l
IvawPiB5knFhL/Uko7eKepKxoZp6kmEPN6cLrWRMCPek0OPquGScCx+/dWVD
tLVTgfXhzpY2XIFp4W6Rnj8V6Ap/vuOXvXdmFyjgCPeodD0qsCbcHaG3axVQ
h1vVVhkTGa+ALNzs+VmB/wHt0m6l
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1HlwjHccBvAtjbaSSckaRRlk32yOTTZ737uekqVoXC11FTFFiwodzZQU
ibZmtBMUvVCmGrRaRweNo9NgKEZoRyWu2pBEYuMYZCuXXc3+3vePJ995M5ln
Jnnz2ef3/aX/9NwxMzqoVKpTbV/R76rzoadtU6oSMwAHirZde93fUvr3oV4b
6x75sGLKroP3X2go3f1j4eWpVT5UF/TQf7+xpnRDmeXgO+d9KMgzH89rnl+6
Osni6lDiQ/manFEZE+oGrN+3bEr6Jh8y9pWdrKxvGrAj76WkuiU+zP3z+YcP
LnbEiXmtRabJPuzbuWzp+VAsHm7UfRtv98H+8Tb/J7MTkBrZMTg/3gdbeKJ3
c2kC8jbb12Z09qF5fqv2QGc11i5dkbi/ow+FgRUdzgxXI3/z+sb4Vi/O+MN/
XVmuhi6S09X3wIuK7VNW1+1RY+d393NfqfZi+zM/49EFNUIfudQ9L3rhGFdV
3XxHjc6b/K0njnuxqvjZRZEWNe62vJji3+PF1eQebb10w0wxXvQ82Uvk5uKR
LcUjvahN6CPyqmpH2+OFr2tfkTWJ0fGi39F+Iv82Lbbt8WJN30SRh24JtT0e
fJapETlwPToedHkg5/d7n1rQ+5QHiTmSyJ0m7Y2ZtNcD1QdyniU8HsTmyrlF
eDyY9a5EHg8S3pbI40HcVIk8HoydKOdhwuPGg7ESedy4PFoijxsJI9jjhnaQ
RP24kQiJ+nHjoJc9btx2s8eNPS72uNHFxR4XOrvY48ImF3tcOO1mjwuWgexx
YUkWe1ywDWGPC9OHyVkSHheeZLPHhefGsMeJT8axx4n5k9jjxLlp7HFCu5A9
TqxcxOflxE9L5LxaeJz4tEDOgpPoxMvL2ePEvOXscSC/kD0O+Jexx4Gz+exx
IDSbPQ5UzOB+HBiUwx4HnG/xeTlwYAJ7HDis9DFceOwY+gZ77Jg6hj12PB3F
HjuujmCPHWezuR87zgzn87Ljwqvcjx23sthjRwy4Hxv07fbHhhlm9tiwQ8ce
G7Lj2WPDlhjux4ZHYfl+FgmPDYMbNdSPDV8/1JDHhvq7GvJY4QnyfbdiVS3f
dyuqajTksaKsWkMeK44puUl4rIhUs8eKAuX35X6sGHKLPVaMU/6efF4W7Kxj
jwX+IHss0N5hjwULH7HHgi0hDZ2XBWsea+i8LMhq4n4sONIs5xLhsaCxRUP/
D8143MoeMw4/YY8ZA8PsMaMhzB4zukfYY0ZyhD1mSBH2mBEX4X7MqArzeZlQ
HGaPCaPD7DHh7hP2mJDdyh4TDimfT94fEzq1sMcESzN7TEATe0xIb2SPEU3/
sceIH0LsMSKzgT1G1N5jjxHj73I/RrTUs8eIs0HeHyPO3GaPEY/r2GPAmHb7
Y0Cg3T4b8E0tewwoqGWPAXNq2WNAWi17DCi9xf0YkNJunw2Yqez7el9wnS+Y
icXKffj9SHQyMb1KzuJ1qzLR/6acY8ULMpH9r5zPlUVHj8BVOYfEQuqx4Yqc
+0Q/zgI9Ci/L2Z8VHT3WXJLznGPd5x7rrsfpCjl/KTwZ0FWwJwMl5XKuEZ4M
zFNynPBkwFzOnnRYytmTjuxy9qSjsJw96Tir5LnCkw59Bfejw852Hh1wiT06
3LvEHh2KrrInDTOvsScNI5T+xHEvSEPWdTkPFp40+APsScOblXJeJzypyLvB
nlRsvcmeVASq2JOKXsq+CU5ZCrKU/WwQnhRoguxJQYmSBScrBU+DfF4peBLk
fpKxO8ieZHQLsicZhtu8P8lQ1XA/WvxRxf1ose0me7TYf4PPS4v6Su5HiyGV
7ElCWYA9SVgcYE8SRgXYk4TXlGwWk4TJSu555MNwQ6ckvKfkpeOL4zzXJeQr
OUe8QMJKJR/9Z1dzzhcSvlLy5l8/vzQgV8LWAN9XCb8o+WL0x00SSpSsK1sZ
H9NDwlElq8RI+B+L7yM7
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-0.9999999998195221, 23.}, {-0.9999999998372573, 22.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-0.9999999998195221, 23.}, {-6.18089241920984, 22.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-6.999999999814577, 30.}, {-6.999999999407407, 29.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-6.999999999407407, 29.}, {-15.273491598680323`, 28.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-15.273491598680323`, 28.}, {-16.273491598620467`, 
            27.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-16.273491598620467`, 27.}, {-16.27349159863877, 26.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-7.99999999958726, 30.}, {-8.999999999747274, 29.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-8.999999999747274, 29.}, {-9.273491594656889, 28.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-9.273491594656889, 28.}, {-9.273491594554741, 27.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-9.273491594554741, 27.}, {-18.273491598542932`, 26.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-9.273491594554741, 27.}, {-20.273491599143483`, 26.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-18.273491598542932`, 26.}, {-18.27349159854191, 25.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-18.27349159854191, 25.}, {-18.273491598683506`, 24.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-20.273491599143483`, 26.}, {-22.2734915986847, 25.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJw1lXs0lQkXxjlJOFE6bpFC5HaO8573dl6i2UL5Uh1qjWSacT+TJTQxGUWR
GUk10cVILpORYhT5OOabwlaKKZ9ym1I4M19UaIapCI1MWr5nrb32H3vvtX7r
+WM/5sHRW8J4Kioqke9rtv+m9/3ReetYVPkgR9CzLr/g4sbi0NJrX02/4mC0
4dF8EbBoaDtPVvOUg9gBi7I2Zxa/Fj08JHrIQW7m4Wx7RxYJaye9wGYOom5r
3HViWFxhMHvAwbOUYrcZgkXvqSLZVBEH6ncCefFCFrHj8mRQJgct2dIFl6xZ
jCl0U01N4MBp1G7LMQsW5R/Ewf6DoW/MTFksNdrTcFXGwfUxbX6QIYtbKm+U
Gjhy8G6L9fGNuiz6U34WZyw4WPNdReITLRYbz5E2ooUcJN0o6bFSYzFz2Od6
35gUsHNJqWCawToLRV+JUgq81uGBsjEGN7sGnPj2Fym4XqEz/vqDwTXrN7Ue
+7cUkjIW8r+5z+AGj4Ed/aFSiBlJNrBoZtBs7fhYzGYplLbX2D2qZ1AZ068+
JZWCpdOV9ZdrGEx7VH5ir7kU+qzCIs+VM2i01y9jUEsKvWd6zhVdZPD0uj6N
ra9ZWJGu19FcwOCEl+tkZS8LRTxtgUY2g+6pyUGaTSzsmrn1SXAGg/vH8l19
K1jIiQvXeRfHzPnDQn+iX7j7bgbdgmLP18tYCNfa06q7k0FF5127zY4s2Jsq
XOQBDNbjLt6SlSxYKyxrXH0Z9LfaZsPXZiGgq9apaCODR3hHcx3fMNCxL7n5
+FoGN/lpBOT9zsCh4ujAd1IGi1fdi2ZbGIjyS+ONCxk8FalsVathwHu1qO7F
DD3Hw4Cm5Ity/Vc0Dq4/q/hRxsDogMMF66c0+kQHHHzHMaDmLy+w6KYxt+cn
/MyCAbfjhvnqLTTePnFhXwufgYqDa8931NHYmWZ1ef0YDZ6SZ5eOXKXxZhPn
d7+PBp3C+dU2RTSe3qjcL2+mYaYt71ZFFo2ehkuNtCppuM/Paz+58/88NHwZ
u10lwp9GHWuH4G4ZDWGaoSHXvWj8fbhSVO1IQ+Gd629TnWnsrXrdPLmSBuuf
Qn65I6RR9dAr6qIODW/a/FoOL6Nx09byqNpJCgRGuWp1/Pe8NjbxzgMUxKeL
9kROUSjnfbbVso0CO1tt/aznFIp/856OraVA0cO8mjlFzfFQcPxhy3BuIoVe
gt7kNhkFVos8+UNyCrtyo8rOOFKQkHTR55mMQt48k6eVKyk4KRyuO81R2O7x
PwdbHQrCBYKtL80o9AhrTJ2YIGGGXqGjoknhjqCGP8z6Sfg4c9Fo7SiJBk7d
IYX3SIiw6Z+wf0hi7Ah/MOEaCXurcuOmI8g5HhKyvgp3vbv5/bzQlPdERkKA
h+unHhIS47t3X37sSEK7seXdCAGJMfzAnd6WJAxP6B5dMybBQG6YdF1EQplS
K6/2Vwm6By7RvjIlAYN7OqqDNRJcntI1nvVUAjZNpjWYLcEX39Ojb9sl8KRJ
Wu8eL8Hy/4gne+olUNHomefbR8zxSIDt3TR6TkGg5oaQBJ63BOKKT1alfUvg
nbjDWdudJLDbzHBomZzAkpH2qggrCZh5Pc7wcyGw+KrHA05XAumrlJdW6xGI
tcppnCbAP8wj9FiXGKcE523UhglYrPTaPposRp+qI9t43QRwP7cRP4jEeDv/
bPq1JgI69EqWZTqI5ngIKCrMCZIohHjKTa1xozcBN5Y+1zZ2EeLLT/nVh1YT
YLsv09zrpj2mVO931LAh4PHNrNxGT3t03/CxT68+AV3jbw6k/tcOuWXZf6vO
J8BYUN2c4WOHP/um7X0xJIZSo9b4J522GD5SaRzbKoaUBW4nD2yzxQRexUBO
lRi+7ny5vOCSBZrJhoIb0h0gnhXl9Iyb4ycHRngmEQ7gcs82JtbDHFeLP7fv
+JcDtOU/L5GfNsP6IJ+ewVUOELqhI0HetAIH9K/oB/AcoLlxe1CVfDmWeyU+
IHtE0FwWqlqjboom8+rNw6pEsJP3ekfURRO0c455PZYugqJbC2IfeRpj3/hZ
2UCACJLGC9a9HTJCmpqVCIR6qX/af2eIxrNxoS4CZV7KN02+BpjoV7TQuVcI
Waey+a22+hjMVwTyFULwGWtM+mixHjZ8+P9CWHxTY8BES4D5V48++ChaCF1/
h3AhhkvwQ1zIhFBQ+Os+fU4XO2fXSSFEVgWWkbsWo33LEZ35RkJIClXL+fLz
RXP5JYR/AJPEDqw=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-16.27349159863877, 26.}, {-15.273491598725855`, 25.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-15.273491598725855`, 25.}, {-14.27349159867424, 24.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-15.273491598725855`, 25.}, {-16.273491598688565`, 
            24.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-15.273491598725855`, 25.}, {-5.999999999835495, 24.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxN021IU1EYwPGrZtoSKp3zbTVTc+7FJe6+uWU+KizbipkS+UapWJQDxS3E
oSiZmU4zApGCUBHpwyhZRGopckBMhaSwEKWc0iA1TU0Nc5nmdvywh3O5/Lic
w/9+OCfzi9OuuxMEwew9jjfUQIBXowwRzokDogr7R1Bf2b91FkgjdoDIQ9vz
nYUveuya6Mnq6EkWfumwY4QKbu4ICxUF2AKeYwMLxhzsVHun1t7JwkI6Nvr0
YivvEQvv1diGjmS32goWQhOxbziHhbcM9pZju5YFw2nshza2ycayoIrCDg9z
DAuxYdjduYf3FgvK49iato3zbRsM5AZhW6cdw0ArD1vPHy7hDzPwh4t9MNvi
mW1hwMB17WHAsm/n72gZyPPHbnL2MFC/f54zJ4yBiEDXHgbIYGy1s4eGXr5r
Dw0WgWsPDYJw1x4aIMa1hwbfmcZj7iYZCnxeNHcqlYbLNj2xfleGvIjXSXMK
Gjzj12xTRhmi8uPKzJE0hC5x+rt1MvR0/O/9Yj8azKv9dfWZMpR0abuEdqOh
Q+2tTkuWoQirgt5docDbvrR7VLT33djzeXSGgq87heYhjgy1hekvtnykQEVV
D4o2pPs9FCx1eVxje6Ro7ll6Q2AqBX06ZIw3StG5xZTxlwoKLLpevziFFN2T
q5SxkRSMdi1KJXYJaq3SvHviSwGHyhryeyNBLR8yDPO7JOh3PKbXSiWoMLwo
6cQyCbucBcOIXIJCyhvkymkSXmUdMjWviJF5wqJKGCPhwc8CwRWzGPnT1nLx
AAm3MumxRL4YxUz1J1xtJyGjkkB3HovQvIk30l+z55zBTZ5AhOI1i1yVjoSb
65W33SxRSBqsjLSnk1CfLKcTNVGod9Nze/IsCQMXZs9MrArRrE3T8k1CgvuR
2jrULkSdVp/fvBASMk0RQUS2EB2YTwks9SEBDfQtNwuE+/eLhP/dv2A0
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQfUDIQZy9R+cAAxhYOByF8l9K7q74+9nc4SyUL67J
7L/9mbnDVSi/RfdGk+4Nc4c7UL6BupVIwglzhydQvoIYSIO5wzsoP+DXEv9f
S8wdfkD5By+v/Zk40dyBSRjCL17kzNhWY+7AC+WngYG5Q9edVf6/O4HuYWKv
1Aowd3hv8frH9WadA37RYp0/rcwdrDQYhedW6hyYlD9l2mU1c4eMVW/memXr
HNhm37hwh7C5Q/X+tTMfROgc2HX6zsoVjOYOZekubPFOOgfmCS9fv/iDmUPo
og2Pj6rrHEgSf7Bp5QMzB+mCT4ainDoHWK+3b9510cxB4b5d4fMnWlD3mDnw
SR0uaFuqdeAnz9ZtyQFmDsv1bVUPpWgd6G4+V3/P2szhmfzavllKWgfkTm06
eE3DzOHUK6G1/Pc1D6x5kFjjIw60b0Jeg+IszQNWx2+vt2c3c+gQOMBxIVjz
wIlahZgNP0wdkrLZ3aR5NA8Esxg0zntt6vB4gYsF82GNA/eiuOS5Hpg6cG0s
v99eoXEgvXG96eerpg4auvdSliWoH0iJFZPQ3Gzq8OBfV9XbOLUDiiK7RRUm
mzoYqNUpxBarHpi1dK7ejVJTB6nF28O+zlU5cFFwX1JgtKnDnFJz2W33lA8c
i5DZ1O1s6rBj7t/i+abKByqqdsi065k65EhzRW9cpHTgRdmkRc4ypg673sVc
eq2qdEDUb5XzQR5ThwXi32767VeEph9TBwC+Mfgl
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-16.273491598688565`, 24.}, {-12.273491598698456`, 
            23.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-16.273491598688565`, 24.}, {-16.273491598693, 23.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwtkmtIk2EYhsdGYmkapaVLZ1bzMNG9L/V9X6TmMw/b0iybBSZYllsqwjTF
6EeQZefIogiLcKRsMVKnbGn9aPVotvrmoYOHzEiyUBHFQHNhTSmlC26u/zdX
6LFijU4oEAik/7bkTYEPromUBAXL7ADX451ftBqC5VqdxTDLQaVjVvc6l6Aq
s0EaN8rBy/ROadQJgvquPt1gHwetqW1BNysJTr8d1pe1c5Bj7091VRPkc5yw
2sLBU5Nnc46F4J/y6s+mag4couw9DgfBSwHKhPgzHFz9yIeQEYJFKQNFvVoO
BKFZsvsLBM1u1dECNQeaztTz3d4UZ1TftDMcB/NOYQwrpngg4n3v8zAOXCEV
4f1Sij01fpZuPw7UzvaSR3KKR8wNsxIhBz9458pWjqKn+p7ROs3ClOTuzK94
ivzpIbw8xMIuXhZVkkixTlmirn3FwtibczZJCsVbpuxYdxMLwcFL/1A8vgwL
5sK1+vFkip8GX9SlZ7Dg3lfof1tB0cs2L78Yy0LAO+NZjziKiz/X+ayJYGF+
osOq2E6x0eATP+nPgrGGNyfLKAY1TzzbsIIF/0lrnq+E4u5I0/U7cwzs/VDx
vdaXIrtK0aQdZyAjc1uEe5HgiMYeemGIgQC9k0qmCKaJxKOuHgbyle5hjyaC
+Qd5sbGRgZaOaEX9SYIicVfSWBUDwonDWV5JBIP2b861lzKQZruxNdyPoPV3
Z3HkIQbCVBVpC71ydKznS2WJDNjKvj7ZckWOWabAQoxmIG4qoapNJceCh3bN
5EYGsNnQM+Arx7nAFnm9NwPQ5j6VNxLzvx8G/gLdVgtL
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-5.999999999835495, 24.}, {-5.4709497962842875`, 23.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-12.273491598698456`, 23.}, {-6.18089241920984, 22.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[{{-5.4709497962842875`, 
            23.}, {-6.409548349959532, 
            22.13723078651465}, {-7.677028398000971, 22.}}], 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[{{-5.4709497962842875`, 
            23.}, {-6.738429844325745, 
            22.86276921387599}, {-7.677028398000971, 22.}}], 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-5.4709497962842875`, 23.}, {-0.9999999998372573, 22.}},
             0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-7.677028398000971, 22.}, {-8.873648463526308, 21.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJxV0ksoRFEcx/HrMUPG28xIlLCQMnLOPfLI4hcWKEZeG6mhWFh4bigWTLFC
NsICaRY2MjZmQZESGyVKI5FSymNHipB77/mXe/+d2+3TPef0Xdyc7oHmnkhF
UYq0R3+vp39cNx7kHCrGlGCe/JSxN/rzJjBBdhVEeUOPAn1kvyc85QkLtJKL
8yucvlOBSnK2Wz8gkEdu+gp4vwICseTDy63PrgWBV7f0yEZ1xPS4wBm51xiB
bbJx3CuwSJ57KNOWwCQ5L1cfgX5yyOfY9TkEfOS6tXdtqWgn393qo6KRPJx1
MpR1oqKBbO8I2jqCKlosPSpaLT0q2iw9/99lj4om8q7Ro6KeXG/0cFRZejjK
LT0cHksPh2Lp4bhxSX8aPRyzLnMPR6rL3MPR5zT3cCylmXsYVlLNPQyDKeYe
hsxkc4+2P1F6ZVkfhqQE6dnO/d8xP8OyQxqFzfbVfobKOOkdm34Bw3us9P3T
1XewluEoRvo8fPyyVsqwaZeeuMjXFkPAJv2sb89gCEVLux9rZiLjGe6jzP8z
wx+FSFyH
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-0.9999999998372573, 22.}, {-0.999999999848967, 21.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-0.999999999848967, 21.}, {2.0551498352091926`, 20.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-6.18089241920984, 22.}, {-6.180892419202053, 21.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-6.180892419202053, 21.}, {-2.925517276046321, 20.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1E9IFGEYx/HRMihFIkIqjCWD2f+7M/MWVIT9SAusyOgk2EEt95KkFoUH
KUkoKtj+qBc9LIhgJIFBFGUH7WKwa6a76hpqZGYogtgapZC1877P4XmYZfmy
O+98ZmZ39lXVnq/O1DStPP2y35virdU/6zRocg5giXpxd1/D35TAxYTqPPem
0tfzAj+om/3J2/6kwPUx1YbzyM6KDwK546odcgeBl9Tn1rtK17sELk2o7o8/
X6t8LOBIqr7WWZRxp1FgnjokRyA8qVruXiqwTB3+dii9CWz9rHp/gT0Ck/T5
q4rs9CZQRX0qsloSWbXQSevPTNtjoYM8V/MH6/MHLZwm75by3qzyXgtDn7jH
wsFh1WvSY+H7EPdYmIlxjwVHjHssdEe5x0RDlHtMPIpyj4mVKPeYCH3kHhPe
YX59TMwNc4+Jh+SXnAITnhHuMfFmhHsMHB7lHgM9o9xjYHucewzsSXCPgeoE
9xjoTnCPgdkEvz4GdoxxT/r41K2FCy2FC0GUUb/rsyeIK9RyuXAQjdTZcoEg
mqiHYvYE0Extn11JJIAn1Hvt06kP4Cn1iWJ7AhikvjyQVzOQF8AydZv0+OEY
5x4/yqjnpMePDuoc6fGjfYJ7fNiW5B4f3ia5x4eeSe7xYYp+3zXS48PZKX59
vNBmuMeL1Bfu8UKf5R4vQovc48H8Evd4cHxZtbzd9R40rKg+KT0e3E1xjwd1
v1S3SI8b4jf3uDHyh3vcKFnnHjdCG6olJ+ZC+J/qlPS4cF9rYx4XLmSolpxi
Fzao1f1y4UZmG7s+TrynVh4nvlIrjxNxavX7caKdWshx4gy1fBxucWIz9a2y
rpyj0zr66fiVcgEdN6nV801HEXXkxYOJY7U6cqjV/0NHks4vYX/d0vGM2hu7
l5u1S0cTtXo+6/gPNP2QWg==
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-18.273491598683506`, 24.}, {-16.273491598693, 23.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-16.273491598693, 23.}, {-16.273491598690896`, 22.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-16.273491598693, 23.}, {-14.273491598696864`, 22.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-16.273491598690896`, 22.}, {-11.561683140199762`, 
            21.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-14.273491598696864`, 22.}, {-15.440212040761821`, 
            21.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-11.561683140199762`, 21.}, {-11.561683140199762`, 
            20.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-15.440212040761821`, 21.}, {-15.440212040761423`, 
            20.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-11.561683140199762`, 20.}, {-11.561683140201637`, 
            19.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1G9IE3Ecx/FlblazgigpMSwjorvtdne/PYhI+0AL0pTZzFxO5tz886CF
zAgGJQ0tQwqhPz7pyaBGTzKwJxbYA61AEeuJQhJYYCHZo8o9mRDk/b734Pvl
xniz3fH6/Xa3w/HeUFeRw+Go3XxZ747i4ifXe0qmHHL8GLX714HJ9L91gWon
ddnxrcHXqwLrdg96lwa8SwJvXNT6sZN7Y7MC90uoK+UJAn3bqBs3csGNnEDP
duqphZeFjgcCyR3U156e2TJ0UyDjpu6WI1AopZanBwW03dQj309sHgKH9lAf
qbJGYG4f9UTMvXkImOXUddl8bTZvIlRJ/XXZGhP6Ueq+iplUxYyJWZXaFRl3
RsZNdAe4x8Td89QF6TExcoF7TKQvcY+JQCv3mMi3cY+B4Sj3GHC0c4+Btij3
GOhu4R4DD5v5/hiYuMg9BhbslpwqA6vN3GPgTwv36Mi3co+O31Hu0bGS4B4d
/jT36PjSzz06iga4R8fYbb4/OhbvcI+OjN2Pa9Ye1az5MDZI/XbSGh/CGWp5
uREfhm5Qu+UFfKjvov44b42GT7bfWl1tVkP/ZeqD1nJSGprs/TgbsEZDKER9
ZbosOV2mId1IPSo9XswFuceLgP35D+nx4qd9P5RKjxcNbdzjQVM793jwvIN7
PDiX4B4PRCd1Uno8uNrJ90fF3wT3qPgQ5x4VKzHuUdFg74dfWKMiFaEutx53
l4r3Yepb4VzpqWUF1fb9HJcbrOBbE39+Fbyw15t9de/z6V4Fz4L891fwroF6
0fq6qWBnPbU6P7zLuV9Bpo7//yj4D2Aa1eE=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-15.440212040761423`, 20.}, {-11.561683140201637`, 
            19.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-11.561683140201637`, 19.}, {-11.561683140200216`, 
            18.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-11.561683140200216`, 18.}, {-8.873648463517327, 17.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-8.873648463517327, 17.}, {-3.9255172760555865`, 16.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-3.9255172760555865`, 16.}, {-3.9255172760595656`, 
            15.}}, 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-3.9255172760595656`, 15.}, {-3.925517276057292, 14.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-3.925517276057292, 14.}, {-2.925517276054336, 13.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{-2.925517276054336, 13.}, {-1.9255172760537675`, 12.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{-1.9255172760537675`, 12.}, {2.0551498352143085`, 11.}},
             0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{2.0551498352143085`, 11.}, {5.000000002087916, 10.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{5.000000002087916, 10.}, {5.161988668923982, 9.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[{{5.161988668923982, 9.}, {6.737417042163997, 8.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], Dashing[{Small, Small}], 
           ArrowBox[BezierCurveBox[CompressedData["
1:eJwtk3kwnAcYxrcat8T1fXvYXft9a4MGoa4gDU8TKUlYLerOUaFJSaXuRJSN
ONoGsQSTna2gRQcTNKsxZVqDVNPuNiVtKNFUnaEIkWg0tHT8Zp555/njmfn9
89KRZ/2j1RgMBjayeSWnCsL/qCE26wZCSKzf8s6+QeBXh5TF1SkaIT9X6xi2
EbD216iIU9HQDMiqzu0ioBHerB7eTCNfsaA/oSIQKU6y7CyiMbM84289RMDj
/wENikiKjZgiULl86PryIRrWRpdDk58SyKoLf9ItpGG0YMtP3UZi0jNPTe85
BVV95FfvECRUyk0o9CuLM5+LSLxil9rqd51C2QPbe2rOJJaO9wl+j6dADrm2
fOhFYmfEsO45Twp+t5s5MaEkukWl5/ksCm9UXNX7PpZEWeJan/yeAKtREx+X
Z5BId7ZTkOcFiOF8Jh2UknAp7rpWYypAWbvK7HINiTu5iiyfHlPoxaap2qdJ
yK5twsfq3TBL5TqJA6mPQmw9+DCPN3o6wWKilntl5Z8JHvLFVQ7ajkx8m/tJ
8r8FPFid1hx3CmAiv22433UPD9u+8dQ4k8yEUUuWfsMoF+w3Q2UNMiZ8P8i0
Cijg4pTpwcrlLibwrM/c3o2LRUstttc8E9P7017ynjbBu0sdDckK1pYPB+mm
e6z7Zlmo727U8Pbg4C+RKNFwJxvuvvIbxybZaFXPljifYCPI+bR0pJCN+51B
gfiUjYUMg6YeFzb8g+Tzux+woWtRqkmMs2DxXaCfGp+D+t3PZD8WsRBkIEn5
+jgHylKH92bdWRhxNI0K/pyD+AjfhMQNL5POl9ekv5ls+ZBYyXuY4WTDxd6R
CYa7BwmrqjFtQRYXWTcl5c6TBBS6BhXiQS7e58UcvVRIoKg3am+PLQ9rrGp/
kQuB7l9GRzM/4sGu1jKVM2YMH4c86cU/edDqXfsh8ooxLMcCD9/Zx0dOGi1m
7DNG+PhhvWAZH7WdJYylWSP4hL5w2GUj2PIxxKivX+aqTID78n4bVxgiUUeu
TFKn8KjF4YjZjAF2BQ93XnCnMDDYsRhcbgBWQTSv+BwFmWEcPeBlALdGt4e3
blKIaytUvL6ijxJFmPbcAoWQeKlLTLQ+hLW3Za/a0FjyHf/JYmgHJiUXSnJi
abiL81LT3t6BUc/0J9P1NFwS0uwjB7Yj/oD5qLlIiJTIKY+EeT20SP3MFVeF
iFC+lujI1IPc9u+uohdCzDWlKb8Q68KJT93qCDeDcHvVkbvlOkgP61Vz+dIM
62NNj+sWtRE/NVejxhAh27Gu3T5CG8Y9JZW8gyI0r+c2nh3QwsnHbUs5F0XI
2e/XfeykFk6cOSp3bxVt/bsW/gOcaKQW
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{11.99999999989933, 38.}, {9.000000001290914, 37.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1: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
SDZPbo0fWgAJuxT4P5jEWkE=
            "]], 0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{6.737417042163997, 8.}, {6.737417042165646, 7.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{6.737417042165646, 7.}, {8.000000002208594, 6.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{8.000000002208594, 6.}, {10.000000002205411`, 5.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{10.000000002205411`, 5.}, {10.353993307502208`, 4.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{10.353993307502208`, 4.}, {10.353993307499138`, 3.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{10.353993307499138`, 3.}, {11.25148824454385, 2.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{11.25148824454385, 2.}, {12.251488244544078`, 1.}}, 
            0.5112182581649675]}, 
          {RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]], 
           ArrowBox[{{12.251488244544078`, 1.}, {12.88331518877311, 0.}}, 
            0.5112182581649675]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], EdgeForm[None], 
             PolygonBox[{{-0.48114635534667144`, 39.839618051957196`}, {0., 
              39.518853644653326`}, {0.48114635534667144`, 
              39.839618051957196`}, {0.48114635534667144`, 
              40.481146355346674`}, {-0.48114635534667144`, 
              40.481146355346674`}, {-0.48114635534667144`, 
              39.839618051957196`}}]},
            "\"Axiom 1\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Axiom 1", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], EdgeForm[None], 
             PolygonBox[{{-13.737919151624757`, 
              38.839618051957196`}, {-13.256772796278085`, 
              38.518853644653326`}, {-12.775626440931413`, 
              38.839618051957196`}, {-12.775626440931413`, 
              39.481146355346674`}, {-13.737919151624757`, 
              39.481146355346674`}, {-13.737919151624757`, 
              38.839618051957196`}}]},
            "\"Axiom 2\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Axiom 2", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], EdgeForm[None], 
             PolygonBox[{{-22.481146355549885`, 
              39.839618051957196`}, {-22.000000000203215`, 
              39.518853644653326`}, {-21.518853644856545`, 
              39.839618051957196`}, {-21.518853644856545`, 
              40.481146355346674`}, {-22.481146355549885`, 
              40.481146355346674`}, {-22.481146355549885`, 
              39.839618051957196`}}]},
            "\"Axiom 3\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Axiom 3", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], EdgeForm[None], 
             PolygonBox[{{-24.481146355566313`, 
              37.839618051957196`}, {-24.000000000219643`, 
              37.518853644653326`}, {-23.518853644872973`, 
              37.839618051957196`}, {-23.518853644872973`, 
              38.481146355346674`}, {-24.481146355566313`, 
              38.481146355346674`}, {-24.481146355566313`, 
              37.839618051957196`}}]},
            "\"Axiom 4\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Axiom 4", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], EdgeForm[None], 
             PolygonBox[{{-7.481146354985829, 
              38.839618051957196`}, {-6.999999999639158, 
              38.518853644653326`}, {-6.518853644292487, 
              38.839618051957196`}, {-6.518853644292487, 
              39.481146355346674`}, {-7.481146354985829, 
              39.481146355346674`}, {-7.481146354985829, 
              38.839618051957196`}}]},
            "\"Axiom 5\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Axiom 5", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[71, 255], 
              Rational[182, 255], 
              Rational[109, 255]], EdgeForm[None], 
             PolygonBox[{{5.047725271276458, 38.839618051957196`}, {
              5.528871626623129, 38.518853644653326`}, {6.0100179819698, 
              38.839618051957196`}, {6.0100179819698, 39.481146355346674`}, {
              5.047725271276458, 39.481146355346674`}, {5.047725271276458, 
              38.839618051957196`}}]},
            "\"Axiom 6\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Axiom 6", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[146, 255], 
              Rational[10, 17], 0], EdgeForm[None], 
             PolygonBox[{{11.999999999898534`, 38.42863691376193}, {
              12.57136308613661, 39.}, {11.999999999898534`, 
              39.57136308623807}, {11.428636913660458`, 39.}, {
              11.999999999898534`, 38.42863691376193}}]},
            "\"Hypothesis 1\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Hypothesis 1", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-1.8733700100442547`, 
              39.57404698209344}, {-2.444733096282331, 
              38.58441994235427}, {-1.3020069238061789`, 
              38.58441994235427}, {-1.8733700100442547`, 39.57404698209344}}]},
            "\"Critical Pair Lemma 1\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 1", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-19.00000000020924, 
              37.57404698209344}, {-19.571363086447317`, 
              36.58441994235427}, {-18.428636913971165`, 
              36.58441994235427}, {-19.00000000020924, 37.57404698209344}}]},
            "\"Critical Pair Lemma 2\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 2", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-26.000000000213788`, 
              37.57404698209344}, {-26.571363086451864`, 
              36.58441994235427}, {-25.428636913975712`, 
              36.58441994235427}, {-26.000000000213788`, 37.57404698209344}}]},
            "\"Critical Pair Lemma 3\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 3", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{3.9960923459148034`*^-11, 
              38.57404698209344}, {-0.5713630861981149, 37.58441994235427}, {
              0.5713630862780368, 37.58441994235427}, {
              3.9960923459148034`*^-11, 38.57404698209344}}]},
            "\"Critical Pair Lemma 4\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 4", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-8.25677279628195, 
              38.57404698209344}, {-8.828135882520026, 
              37.58441994235427}, {-7.685409710043874, 
              37.58441994235427}, {-8.25677279628195, 38.57404698209344}}]},
            "\"Critical Pair Lemma 5\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 5", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-6.999999999637623, 
              38.57404698209344}, {-7.571363085875699, 
              37.58441994235427}, {-6.428636913399547, 
              37.58441994235427}, {-6.999999999637623, 38.57404698209344}}]},
            "\"Critical Pair Lemma 6\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 6", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-2.999999999483009, 
              38.57404698209344}, {-3.571363085721085, 
              37.58441994235427}, {-2.428636913244933, 
              37.58441994235427}, {-2.999999999483009, 38.57404698209344}}]},
            "\"Critical Pair Lemma 7\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 7", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{6.999999999954696, 38.57404698209344}, {
              6.42863691371662, 37.58441994235427}, {7.571363086192772, 
              37.58441994235427}, {6.999999999954696, 38.57404698209344}}]},
            "\"Critical Pair Lemma 8\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 8", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-10.9999999995743, 
              37.57404698209344}, {-11.571363085812376`, 
              36.58441994235427}, {-10.428636913336224`, 
              36.58441994235427}, {-10.9999999995743, 37.57404698209344}}]},
            "\"Critical Pair Lemma 9\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 9", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-7.999999999629097, 
              37.57404698209344}, {-8.571363085867173, 
              36.58441994235427}, {-7.428636913391021, 
              36.58441994235427}, {-7.999999999629097, 37.57404698209344}}]},
            "\"Critical Pair Lemma 10\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 10", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-4.999999999662691, 
              36.57404698209344}, {-5.571363085900767, 
              35.58441994235427}, {-4.428636913424615, 
              35.58441994235427}, {-4.999999999662691, 36.57404698209344}}]},
            "\"Critical Pair Lemma 11\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 11", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{6.999999999950205, 37.57404698209344}, {
              6.428636913712129, 36.58441994235427}, {7.571363086188281, 
              36.58441994235427}, {6.999999999950205, 37.57404698209344}}]},
            "\"Critical Pair Lemma 12\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 12", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-3.99999999981992, 
              35.57404698209344}, {-4.571363086057996, 
              34.58441994235427}, {-3.428636913581844, 
              34.58441994235427}, {-3.99999999981992, 35.57404698209344}}]},
            "\"Critical Pair Lemma 13\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 13", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-3.9999999998205453, 34.}, 0.5112182581649675]},
            "\"Substitution Lemma 1\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 1", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-3.586634607240228, 33.}, 0.5112182581649675]},
            "\"Substitution Lemma 2\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 2", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-3.5866346072574515, 32.}, 0.5112182581649675]},
            "\"Substitution Lemma 3\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 3", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-7.999999999249098, 
              31.574046982093442`}, {-8.571363085487175, 
              30.584419942354277`}, {-7.428636913011022, 
              30.584419942354277`}, {-7.999999999249098, 
              31.574046982093442`}}]},
            "\"Critical Pair Lemma 14\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 14", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-1.9999999998370868`, 
              31.574046982093442`}, {-2.571363086075163, 
              30.584419942354277`}, {-1.428636913599011, 
              30.584419942354277`}, {-1.9999999998370868`, 
              31.574046982093442`}}]},
            "\"Critical Pair Lemma 15\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 15", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-0.9999999998195221, 
              23.574046982093442`}, {-1.571363086057598, 
              22.584419942354277`}, {-0.4286369135814463, 
              22.584419942354277`}, {-0.9999999998195221, 
              23.574046982093442`}}]},
            "\"Critical Pair Lemma 16\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 16", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-6.999999999814577, 
              30.574046982093442`}, {-7.571363086052653, 
              29.584419942354277`}, {-6.428636913576501, 
              29.584419942354277`}, {-6.999999999814577, 
              30.574046982093442`}}]},
            "\"Critical Pair Lemma 17\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 17", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-6.999999999407407, 29.}, 0.5112182581649675]},
            "\"Substitution Lemma 4\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 4", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-15.273491598680323`, 
              28.574046982093442`}, {-15.844854684918399`, 
              27.584419942354277`}, {-14.702128512442247`, 
              27.584419942354277`}, {-15.273491598680323`, 
              28.574046982093442`}}]},
            "\"Critical Pair Lemma 18\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 18", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-16.273491598620467, 27.}, 0.5112182581649675]},
            "\"Substitution Lemma 5\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 5", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-7.99999999958726, 
              30.574046982093442`}, {-8.571363085825336, 
              29.584419942354277`}, {-7.428636913349184, 
              29.584419942354277`}, {-7.99999999958726, 
              30.574046982093442`}}]},
            "\"Critical Pair Lemma 19\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 19", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-8.999999999747274, 29.}, 0.5112182581649675]},
            "\"Substitution Lemma 6\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 6", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-9.273491594656889, 28.}, 0.5112182581649675]},
            "\"Substitution Lemma 7\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 7", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-9.273491594554741, 27.}, 0.5112182581649675]},
            "\"Substitution Lemma 8\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 8", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-18.273491598542932`, 
              26.574046982093442`}, {-18.84485468478101, 
              25.584419942354277`}, {-17.702128512304856`, 
              25.584419942354277`}, {-18.273491598542932`, 
              26.574046982093442`}}]},
            "\"Critical Pair Lemma 20\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 20", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-18.27349159854191, 25.}, 0.5112182581649675]},
            "\"Substitution Lemma 9\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 9", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-20.273491599143483`, 
              26.574046982093442`}, {-20.84485468538156, 
              25.584419942354277`}, {-19.702128512905407`, 
              25.584419942354277`}, {-20.273491599143483`, 
              26.574046982093442`}}]},
            "\"Critical Pair Lemma 21\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 21", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-22.2734915986847, 25.}, 0.5112182581649675]},
            "\"Substitution Lemma 10\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 10", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-16.27349159863877, 
              26.574046982093442`}, {-16.844854684876847`, 
              25.584419942354277`}, {-15.702128512400694`, 
              25.584419942354277`}, {-16.27349159863877, 
              26.574046982093442`}}]},
            "\"Critical Pair Lemma 22\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 22", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-15.273491598725855, 25.}, 0.5112182581649675]},
            "\"Substitution Lemma 11\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 11", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-14.27349159867424, 
              24.574046982093442`}, {-14.844854684912317`, 
              23.584419942354277`}, {-13.702128512436165`, 
              23.584419942354277`}, {-14.27349159867424, 
              24.574046982093442`}}]},
            "\"Critical Pair Lemma 23\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 23", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-16.273491598688565`, 
              24.574046982093442`}, {-16.84485468492664, 
              23.584419942354277`}, {-15.70212851245049, 
              23.584419942354277`}, {-16.273491598688565`, 
              24.574046982093442`}}]},
            "\"Critical Pair Lemma 24\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 24", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-5.999999999835495, 
              24.574046982093442`}, {-6.571363086073571, 
              23.584419942354277`}, {-5.428636913597419, 
              23.584419942354277`}, {-5.999999999835495, 
              24.574046982093442`}}]},
            "\"Critical Pair Lemma 25\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 25", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-12.273491598698456`, 
              23.574046982093442`}, {-12.844854684936532`, 
              22.584419942354277`}, {-11.70212851246038, 
              22.584419942354277`}, {-12.273491598698456`, 
              23.574046982093442`}}]},
            "\"Critical Pair Lemma 26\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 26", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-5.4709497962842875, 23.}, 0.5112182581649675]},
            "\"Substitution Lemma 12\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 12", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-7.677028398000971, 
              22.574046982093442`}, {-8.248391484239047, 
              21.584419942354277`}, {-7.105665311762895, 
              21.584419942354277`}, {-7.677028398000971, 
              22.574046982093442`}}]},
            "\"Critical Pair Lemma 27\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 27", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-8.873648463526308, 21.}, 0.5112182581649675]},
            "\"Substitution Lemma 13\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 13", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-0.9999999998372573, 
              22.574046982093442`}, {-1.5713630860753331`, 
              21.584419942354277`}, {-0.42863691359918143`, 
              21.584419942354277`}, {-0.9999999998372573, 
              22.574046982093442`}}]},
            "\"Critical Pair Lemma 28\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 28", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-0.999999999848967, 21.}, 0.5112182581649675]},
            "\"Substitution Lemma 14\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 14", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-6.18089241920984, 
              22.574046982093442`}, {-6.752255505447916, 
              21.584419942354277`}, {-5.609529332971764, 
              21.584419942354277`}, {-6.18089241920984, 
              22.574046982093442`}}]},
            "\"Critical Pair Lemma 29\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 29", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-6.180892419202053, 21.}, 0.5112182581649675]},
            "\"Substitution Lemma 15\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 15", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{2.0551498352091926, 20.}, 0.5112182581649675]},
            "\"Substitution Lemma 16\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 16", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-18.273491598683506`, 
              24.574046982093442`}, {-18.844854684921582`, 
              23.584419942354277`}, {-17.70212851244543, 
              23.584419942354277`}, {-18.273491598683506`, 
              24.574046982093442`}}]},
            "\"Critical Pair Lemma 30\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 30", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-16.273491598693, 23.}, 0.5112182581649675]},
            "\"Substitution Lemma 17\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 17", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-16.273491598690896`, 
              22.574046982093442`}, {-16.844854684928972`, 
              21.584419942354277`}, {-15.70212851245282, 
              21.584419942354277`}, {-16.273491598690896`, 
              22.574046982093442`}}]},
            "\"Critical Pair Lemma 31\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 31", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-14.273491598696864`, 
              22.574046982093442`}, {-14.84485468493494, 
              21.584419942354277`}, {-13.702128512458788`, 
              21.584419942354277`}, {-14.273491598696864`, 
              22.574046982093442`}}]},
            "\"Critical Pair Lemma 32\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 32", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-11.561683140199762`, 
              21.574046982093442`}, {-12.133046226437838`, 
              20.584419942354277`}, {-10.990320053961685`, 
              20.584419942354277`}, {-11.561683140199762`, 
              21.574046982093442`}}]},
            "\"Critical Pair Lemma 33\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 33", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-15.440212040761821`, 
              21.574046982093442`}, {-16.011575126999897`, 
              20.584419942354277`}, {-14.868848954523745`, 
              20.584419942354277`}, {-15.440212040761821`, 
              21.574046982093442`}}]},
            "\"Critical Pair Lemma 34\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 34", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-11.561683140199762`, 
              20.574046982093442`}, {-12.133046226437838`, 
              19.584419942354277`}, {-10.990320053961685`, 
              19.584419942354277`}, {-11.561683140199762`, 
              20.574046982093442`}}]},
            "\"Critical Pair Lemma 35\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 35", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-2.925517276046321, 20.}, 0.5112182581649675]},
            "\"Substitution Lemma 18\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 18", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-15.440212040761423`, 
              20.574046982093442`}, {-16.0115751269995, 
              19.584419942354277`}, {-14.868848954523347`, 
              19.584419942354277`}, {-15.440212040761423`, 
              20.574046982093442`}}]},
            "\"Critical Pair Lemma 36\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 36", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-11.561683140201637, 19.}, 0.5112182581649675]},
            "\"Substitution Lemma 19\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 19", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-11.561683140200216`, 
              18.574046982093442`}, {-12.133046226438292`, 
              17.584419942354277`}, {-10.99032005396214, 
              17.584419942354277`}, {-11.561683140200216`, 
              18.574046982093442`}}]},
            "\"Critical Pair Lemma 37\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 37", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-8.873648463517327, 17.}, 0.5112182581649675]},
            "\"Substitution Lemma 20\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 20", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-3.9255172760555865`, 
              16.574046982093442`}, {-4.496880362293663, 
              15.584419942354277`}, {-3.3541541898175105`, 
              15.584419942354277`}, {-3.9255172760555865`, 
              16.574046982093442`}}]},
            "\"Critical Pair Lemma 38\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 38", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-3.9255172760595656, 15.}, 0.5112182581649675]},
            "\"Substitution Lemma 21\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 21", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-3.925517276057292, 
              14.574046982093442`}, {-4.496880362295368, 
              13.584419942354277`}, {-3.3541541898192158`, 
              13.584419942354277`}, {-3.925517276057292, 
              14.574046982093442`}}]},
            "\"Critical Pair Lemma 39\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 39", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{-2.925517276054336, 13.}, 0.5112182581649675]},
            "\"Substitution Lemma 22\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 22", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{-1.9255172760537675`, 
              12.574046982093442`}, {-2.4968803622918436`, 
              11.584419942354277`}, {-1.3541541898156917`, 
              11.584419942354277`}, {-1.9255172760537675`, 
              12.574046982093442`}}]},
            "\"Critical Pair Lemma 40\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 40", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{2.0551498352143085, 11.}, 0.5112182581649675]},
            "\"Substitution Lemma 23\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 23", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{5.000000002087916, 10.}, 0.5112182581649675]},
            "\"Substitution Lemma 24\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 24", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[47, 51], 
              Rational[98, 255], 
              Rational[53, 255]], EdgeForm[None], 
             PolygonBox[{{5.161988668923982, 9.574046982093442}, {
              4.590625582685906, 8.584419942354277}, {5.733351755162058, 
              8.584419942354277}, {5.161988668923982, 9.574046982093442}}]},
            "\"Critical Pair Lemma 41\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Critical Pair Lemma 41", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{11.99999999989933, 38.}, 0.5112182581649675]},
            "\"Substitution Lemma 25\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 25", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{9.000000001290914, 37.}, 0.5112182581649675]},
            "\"Substitution Lemma 26\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 26", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{6.737417042163997, 8.}, 0.5112182581649675]},
            "\"Substitution Lemma 27\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 27", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{6.737417042165646, 7.}, 0.5112182581649675]},
            "\"Substitution Lemma 28\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 28", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{8.000000002208594, 6.}, 0.5112182581649675]},
            "\"Substitution Lemma 29\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 29", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{10.000000002205411, 5.}, 0.5112182581649675]},
            "\"Substitution Lemma 30\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 30", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{10.353993307502208, 4.}, 0.5112182581649675]},
            "\"Substitution Lemma 31\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 31", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{10.353993307499138, 3.}, 0.5112182581649675]},
            "\"Substitution Lemma 32\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 32", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{11.25148824454385, 2.}, 0.5112182581649675]},
            "\"Substitution Lemma 33\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 33", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[15, 17], 
              Rational[52, 85], 
              Rational[12, 85]], EdgeForm[None], 
             DiskBox[{12.251488244544078, 1.}, 0.5112182581649675]},
            "\"Substitution Lemma 34\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Substitution Lemma 34", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {RGBColor[
              Rational[13, 15], 
              Rational[1, 15], 0], EdgeForm[None], 
             RectangleBox[{12.432240225026478, -0.4510749637466336}, \
{13.334390152519743, 0.4510749637466336}]},
            "\"Conclusion 1\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Conclusion 1", "Tooltip"]& ]}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None],
   Appearance->Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
     "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
         DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
           "Instant", "Gregorian", -4.]]]],
   BaseStyle->"Output"],
  Graph[{"Axiom 1", "Axiom 2", "Axiom 3", "Axiom 4", "Axiom 5", "Axiom 6", 
    "Hypothesis 1", "Critical Pair Lemma 1", "Critical Pair Lemma 2", 
    "Critical Pair Lemma 3", "Critical Pair Lemma 4", "Critical Pair Lemma 5",
     "Critical Pair Lemma 6", "Critical Pair Lemma 7", 
    "Critical Pair Lemma 8", "Critical Pair Lemma 9", 
    "Critical Pair Lemma 10", "Critical Pair Lemma 11", 
    "Critical Pair Lemma 12", "Critical Pair Lemma 13", 
    "Substitution Lemma 1", "Substitution Lemma 2", "Substitution Lemma 3", 
    "Critical Pair Lemma 14", "Critical Pair Lemma 15", 
    "Critical Pair Lemma 16", "Critical Pair Lemma 17", 
    "Substitution Lemma 4", "Critical Pair Lemma 18", "Substitution Lemma 5", 
    "Critical Pair Lemma 19", "Substitution Lemma 6", "Substitution Lemma 7", 
    "Substitution Lemma 8", "Critical Pair Lemma 20", "Substitution Lemma 9", 
    "Critical Pair Lemma 21", "Substitution Lemma 10", 
    "Critical Pair Lemma 22", "Substitution Lemma 11", 
    "Critical Pair Lemma 23", "Critical Pair Lemma 24", 
    "Critical Pair Lemma 25", "Critical Pair Lemma 26", 
    "Substitution Lemma 12", "Critical Pair Lemma 27", 
    "Substitution Lemma 13", "Critical Pair Lemma 28", 
    "Substitution Lemma 14", "Critical Pair Lemma 29", 
    "Substitution Lemma 15", "Substitution Lemma 16", 
    "Critical Pair Lemma 30", "Substitution Lemma 17", 
    "Critical Pair Lemma 31", "Critical Pair Lemma 32", 
    "Critical Pair Lemma 33", "Critical Pair Lemma 34", 
    "Critical Pair Lemma 35", "Substitution Lemma 18", 
    "Critical Pair Lemma 36", "Substitution Lemma 19", 
    "Critical Pair Lemma 37", "Substitution Lemma 20", 
    "Critical Pair Lemma 38", "Substitution Lemma 21", 
    "Critical Pair Lemma 39", "Substitution Lemma 22", 
    "Critical Pair Lemma 40", "Substitution Lemma 23", 
    "Substitution Lemma 24", "Critical Pair Lemma 41", 
    "Substitution Lemma 25", "Substitution Lemma 26", "Substitution Lemma 27",
     "Substitution Lemma 28", "Substitution Lemma 29", 
    "Substitution Lemma 30", "Substitution Lemma 31", "Substitution Lemma 32",
     "Substitution Lemma 33", "Substitution Lemma 34", 
    "Conclusion 1"}, {CompressedData["
1:eJwVxWd6gjAAAFBNQoqCEVxhuMCFCG4RBXErbsUbeIFep8dt++N9T/t8Rx8Q
i8V+/vwP2TiLEiCBkjDJcHEO84BnUjjFEoaANJvmBSQQEYhCRsyks3yWy2Vy
uTzI5wu4UKAiFSQqEZnKnEIVokqqWiRFplQslcpMWarIlUqVVquapGk61VFN
r9XqqI4aeqPRRM1yK9FqGcAw2nzbMKEpdYyOYJlWx4a23bW73V67p/Ttfn8A
BsrQGg5HYDQY43F9kpxMHNNxpnDquNidzvDMnZvzmWd4Ix/78wVcLAIvCJZw
2VstV2S9Wq83YNPcbrbbnb+T97v9/jA+HI7y8RjS8OuET6czPp8v4eVyTV2v
t+ztdsf3+wM/Hs/w+Xzh1yuiUfSOv38B2IAunA==
    "], Null}, {
   EdgeStyle -> {
     DirectedEdge["Critical Pair Lemma 29", "Substitution Lemma 15"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Axiom 3", "Critical Pair Lemma 37"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 2", "Substitution Lemma 3"] -> RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 16", "Critical Pair Lemma 29"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 22", "Critical Pair Lemma 40"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 10"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 15", "Substitution Lemma 18"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 25", "Substitution Lemma 12"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 13", "Substitution Lemma 1"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 34", "Conclusion 1"] -> RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 20"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 1", "Substitution Lemma 2"] -> RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 24", "Substitution Lemma 17"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 25", "Substitution Lemma 26"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], DirectedEdge["Axiom 5", "Critical Pair Lemma 4"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 26"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 21", "Critical Pair Lemma 39"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 2", "Critical Pair Lemma 22"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 5", "Critical Pair Lemma 22"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 3", "Substitution Lemma 8"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 4", "Substitution Lemma 10"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 3", "Critical Pair Lemma 31"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 14"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 5", "Critical Pair Lemma 18"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Critical Pair Lemma 6"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 40", "Substitution Lemma 23"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 14", "Critical Pair Lemma 25"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Substitution Lemma 14"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 30"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 3", "Substitution Lemma 34"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 16", "Substitution Lemma 23"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Hypothesis 1", "Substitution Lemma 25"] -> RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 24", "Critical Pair Lemma 26"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 28", "Substitution Lemma 29"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 39", "Substitution Lemma 22"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 12"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 23"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 10", "Substitution Lemma 3"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 34", "Critical Pair Lemma 36"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 13", "Substitution Lemma 20"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 38", "Substitution Lemma 21"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 25"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 3", "Substitution Lemma 6"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 37", "Substitution Lemma 20"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 31", "Substitution Lemma 32"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 12", "Critical Pair Lemma 27"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 23", "Substitution Lemma 13"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 16"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 4", "Critical Pair Lemma 21"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 29", "Substitution Lemma 30"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 33", "Substitution Lemma 34"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], DirectedEdge["Axiom 3", "Critical Pair Lemma 1"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 9"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 17"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 24"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Substitution Lemma 11"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 30", "Substitution Lemma 17"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 4", "Critical Pair Lemma 13"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 23"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 8", "Critical Pair Lemma 12"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 15", "Substitution Lemma 24"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 35"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 41", "Substitution Lemma 27"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Critical Pair Lemma 5"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 28", "Substitution Lemma 14"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 35", "Substitution Lemma 19"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 14", "Critical Pair Lemma 17"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 27", "Substitution Lemma 28"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], DirectedEdge["Axiom 3", "Substitution Lemma 12"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 20", "Substitution Lemma 9"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], DirectedEdge["Axiom 1", "Critical Pair Lemma 4"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 1", "Critical Pair Lemma 7"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Critical Pair Lemma 10"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 5", "Critical Pair Lemma 7"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 26", "Substitution Lemma 27"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 15"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 14"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 17", "Critical Pair Lemma 32"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Substitution Lemma 1"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 21"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 24", "Critical Pair Lemma 41"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 19", "Substitution Lemma 6"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 11"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 41"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Critical Pair Lemma 5"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 20", "Critical Pair Lemma 38"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 3", "Critical Pair Lemma 24"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 11", "Critical Pair Lemma 13"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 12", "Substitution Lemma 29"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 26", "Critical Pair Lemma 29"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 31"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 4", "Critical Pair Lemma 3"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 4", "Critical Pair Lemma 9"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 12", "Critical Pair Lemma 28"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 15", "Critical Pair Lemma 40"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 14", "Substitution Lemma 16"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Axiom 6", "Critical Pair Lemma 33"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Critical Pair Lemma 2"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 15"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 6", "Substitution Lemma 28"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], DirectedEdge["Axiom 1", "Conclusion 1"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 25"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Substitution Lemma 21"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 18"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 4", "Critical Pair Lemma 20"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 36", "Substitution Lemma 19"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 10", "Critical Pair Lemma 11"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 27", "Substitution Lemma 13"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], DirectedEdge["Axiom 3", "Critical Pair Lemma 3"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 5", "Substitution Lemma 5"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 14", "Substitution Lemma 7"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 2"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 5", "Critical Pair Lemma 6"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 4", "Substitution Lemma 9"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Substitution Lemma 15"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 38"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 4", "Critical Pair Lemma 2"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 6", "Substitution Lemma 7"] -> RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 7", "Substitution Lemma 8"] -> RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], DirectedEdge["Axiom 1", "Critical Pair Lemma 1"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 21", "Substitution Lemma 10"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 33", "Critical Pair Lemma 35"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 16"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 18", "Substitution Lemma 22"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 4", "Critical Pair Lemma 16"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 33"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 19", "Critical Pair Lemma 37"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 18", "Substitution Lemma 5"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 9", "Critical Pair Lemma 30"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 2", "Critical Pair Lemma 8"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 14", "Critical Pair Lemma 19"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 6", "Substitution Lemma 18"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 30", "Substitution Lemma 31"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 31", "Critical Pair Lemma 33"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 22", "Substitution Lemma 11"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Critical Pair Lemma 3", "Critical Pair Lemma 30"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 10", "Critical Pair Lemma 39"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Substitution Lemma 23", "Substitution Lemma 24"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 32", "Substitution Lemma 33"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Substitution Lemma 17", "Critical Pair Lemma 31"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 1", "Critical Pair Lemma 8"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 7", "Substitution Lemma 4"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Axiom 3", "Critical Pair Lemma 36"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 15", "Critical Pair Lemma 19"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 24", "Critical Pair Lemma 34"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 32", "Critical Pair Lemma 34"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 17", "Substitution Lemma 4"] -> 
      RGBColor[
        Rational[167, 255], 
        Rational[167, 255], 
        Rational[167, 255]], 
      DirectedEdge["Axiom 6", "Critical Pair Lemma 32"] -> Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 41", "Substitution Lemma 32"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 16", "Critical Pair Lemma 28"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]], 
      DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 26"] -> 
      Directive[
        Dashing[{Small, Small}], 
        RGBColor[
         Rational[167, 255], 
         Rational[167, 255], 
         Rational[167, 255]]]}, GraphLayout -> "LayeredDigraphEmbedding", 
    Properties -> {
     "Substitution Lemma 4" -> {Tooltip -> "Substitution Lemma 4"}, 
      "Substitution Lemma 24" -> {Tooltip -> "Substitution Lemma 24"}, 
      "Axiom 3" -> {Tooltip -> "Axiom 3"}, 
      "Critical Pair Lemma 11" -> {Tooltip -> "Critical Pair Lemma 11"}, 
      "Substitution Lemma 18" -> {Tooltip -> "Substitution Lemma 18"}, 
      "Critical Pair Lemma 29" -> {Tooltip -> "Critical Pair Lemma 29"}, 
      "Critical Pair Lemma 37" -> {Tooltip -> "Critical Pair Lemma 37"}, 
      "Substitution Lemma 17" -> {Tooltip -> "Substitution Lemma 17"}, 
      "Critical Pair Lemma 21" -> {Tooltip -> "Critical Pair Lemma 21"}, 
      "Substitution Lemma 6" -> {Tooltip -> "Substitution Lemma 6"}, 
      "Critical Pair Lemma 40" -> {Tooltip -> "Critical Pair Lemma 40"}, 
      "Critical Pair Lemma 30" -> {Tooltip -> "Critical Pair Lemma 30"}, 
      "Axiom 1" -> {Tooltip -> "Axiom 1"}, 
      "Substitution Lemma 27" -> {Tooltip -> "Substitution Lemma 27"}, 
      "Substitution Lemma 3" -> {Tooltip -> "Substitution Lemma 3"}, 
      "Substitution Lemma 9" -> {Tooltip -> "Substitution Lemma 9"}, 
      "Critical Pair Lemma 15" -> {Tooltip -> "Critical Pair Lemma 15"}, 
      "Critical Pair Lemma 7" -> {Tooltip -> "Critical Pair Lemma 7"}, 
      "Substitution Lemma 19" -> {Tooltip -> "Substitution Lemma 19"}, 
      "Critical Pair Lemma 14" -> {Tooltip -> "Critical Pair Lemma 14"}, 
      "Substitution Lemma 34" -> {Tooltip -> "Substitution Lemma 34"}, 
      "Critical Pair Lemma 22" -> {Tooltip -> "Critical Pair Lemma 22"}, 
      "Critical Pair Lemma 6" -> {Tooltip -> "Critical Pair Lemma 6"}, 
      "Critical Pair Lemma 3" -> {Tooltip -> "Critical Pair Lemma 3"}, 
      "Substitution Lemma 26" -> {Tooltip -> "Substitution Lemma 26"}, 
      "Substitution Lemma 33" -> {Tooltip -> "Substitution Lemma 33"}, 
      "Critical Pair Lemma 1" -> {Tooltip -> "Critical Pair Lemma 1"}, 
      "Critical Pair Lemma 16" -> {Tooltip -> "Critical Pair Lemma 16"}, 
      "Critical Pair Lemma 27" -> {Tooltip -> "Critical Pair Lemma 27"}, 
      "Critical Pair Lemma 26" -> {Tooltip -> "Critical Pair Lemma 26"}, 
      "Substitution Lemma 21" -> {Tooltip -> "Substitution Lemma 21"}, 
      "Substitution Lemma 7" -> {Tooltip -> "Substitution Lemma 7"}, 
      "Substitution Lemma 11" -> {Tooltip -> "Substitution Lemma 11"}, 
      "Critical Pair Lemma 5" -> {Tooltip -> "Critical Pair Lemma 5"}, 
      "Critical Pair Lemma 23" -> {Tooltip -> "Critical Pair Lemma 23"}, 
      "Substitution Lemma 2" -> {Tooltip -> "Substitution Lemma 2"}, 
      "Substitution Lemma 13" -> {Tooltip -> "Substitution Lemma 13"}, 
      "Substitution Lemma 31" -> {Tooltip -> "Substitution Lemma 31"}, 
      "Critical Pair Lemma 10" -> {Tooltip -> "Critical Pair Lemma 10"}, 
      "Axiom 2" -> {Tooltip -> "Axiom 2"}, 
      "Substitution Lemma 1" -> {Tooltip -> "Substitution Lemma 1"}, 
      "Critical Pair Lemma 28" -> {Tooltip -> "Critical Pair Lemma 28"}, 
      "Critical Pair Lemma 31" -> {Tooltip -> "Critical Pair Lemma 31"}, 
      "Critical Pair Lemma 17" -> {Tooltip -> "Critical Pair Lemma 17"}, 
      "Critical Pair Lemma 33" -> {Tooltip -> "Critical Pair Lemma 33"}, 
      "Substitution Lemma 20" -> {Tooltip -> "Substitution Lemma 20"}, 
      "Critical Pair Lemma 18" -> {Tooltip -> "Critical Pair Lemma 18"}, 
      "Critical Pair Lemma 32" -> {Tooltip -> "Critical Pair Lemma 32"}, 
      "Axiom 4" -> {Tooltip -> "Axiom 4"}, 
      "Substitution Lemma 22" -> {Tooltip -> "Substitution Lemma 22"}, 
      "Critical Pair Lemma 19" -> {Tooltip -> "Critical Pair Lemma 19"}, 
      "Substitution Lemma 5" -> {Tooltip -> "Substitution Lemma 5"}, 
      "Critical Pair Lemma 24" -> {Tooltip -> "Critical Pair Lemma 24"}, 
      "Critical Pair Lemma 36" -> {Tooltip -> "Critical Pair Lemma 36"}, 
      "Substitution Lemma 14" -> {Tooltip -> "Substitution Lemma 14"}, 
      "Critical Pair Lemma 38" -> {Tooltip -> "Critical Pair Lemma 38"}, 
      "Substitution Lemma 30" -> {Tooltip -> "Substitution Lemma 30"}, 
      "Conclusion 1" -> {Tooltip -> "Conclusion 1"}, 
      "Substitution Lemma 25" -> {Tooltip -> "Substitution Lemma 25"}, 
      "Critical Pair Lemma 8" -> {Tooltip -> "Critical Pair Lemma 8"}, 
      "Critical Pair Lemma 20" -> {Tooltip -> "Critical Pair Lemma 20"}, 
      "Substitution Lemma 29" -> {Tooltip -> "Substitution Lemma 29"}, 
      "Substitution Lemma 32" -> {Tooltip -> "Substitution Lemma 32"}, 
      "Axiom 5" -> {Tooltip -> "Axiom 5"}, 
      "Critical Pair Lemma 13" -> {Tooltip -> "Critical Pair Lemma 13"}, 
      "Critical Pair Lemma 35" -> {Tooltip -> "Critical Pair Lemma 35"}, 
      "Critical Pair Lemma 2" -> {Tooltip -> "Critical Pair Lemma 2"}, 
      "Axiom 6" -> {Tooltip -> "Axiom 6"}, 
      "Substitution Lemma 8" -> {Tooltip -> "Substitution Lemma 8"}, 
      "Critical Pair Lemma 39" -> {Tooltip -> "Critical Pair Lemma 39"}, 
      "Critical Pair Lemma 4" -> {Tooltip -> "Critical Pair Lemma 4"}, 
      "Substitution Lemma 28" -> {Tooltip -> "Substitution Lemma 28"}, 
      "Substitution Lemma 16" -> {Tooltip -> "Substitution Lemma 16"}, 
      "Critical Pair Lemma 34" -> {Tooltip -> "Critical Pair Lemma 34"}, 
      "Critical Pair Lemma 9" -> {Tooltip -> "Critical Pair Lemma 9"}, 
      "Critical Pair Lemma 25" -> {Tooltip -> "Critical Pair Lemma 25"}, 
      "Substitution Lemma 12" -> {Tooltip -> "Substitution Lemma 12"}, 
      "Hypothesis 1" -> {Tooltip -> "Hypothesis 1"}, 
      "Substitution Lemma 10" -> {Tooltip -> "Substitution Lemma 10"}, 
      "Critical Pair Lemma 41" -> {Tooltip -> "Critical Pair Lemma 41"}, 
      "Substitution Lemma 15" -> {Tooltip -> "Substitution Lemma 15"}, 
      "Substitution Lemma 23" -> {Tooltip -> "Substitution Lemma 23"}, 
      "Critical Pair Lemma 12" -> {Tooltip -> "Critical Pair Lemma 12"}}, 
    VertexShapeFunction -> {
     "Axiom 6" -> "FiveDown", "Critical Pair Lemma 8" -> "Triangle", 
      "Critical Pair Lemma 18" -> "Triangle", "Critical Pair Lemma 3" -> 
      "Triangle", "Critical Pair Lemma 17" -> "Triangle", 
      "Substitution Lemma 3" -> "Circle", "Substitution Lemma 26" -> "Circle",
       "Critical Pair Lemma 38" -> "Triangle", "Critical Pair Lemma 20" -> 
      "Triangle", "Critical Pair Lemma 19" -> "Triangle", 
      "Critical Pair Lemma 14" -> "Triangle", "Critical Pair Lemma 5" -> 
      "Triangle", "Substitution Lemma 23" -> "Circle", 
      "Critical Pair Lemma 7" -> "Triangle", "Critical Pair Lemma 34" -> 
      "Triangle", "Critical Pair Lemma 16" -> "Triangle", 
      "Substitution Lemma 1" -> "Circle", "Substitution Lemma 10" -> "Circle",
       "Critical Pair Lemma 22" -> "Triangle", "Substitution Lemma 9" -> 
      "Circle", "Axiom 4" -> "FiveDown", "Substitution Lemma 12" -> "Circle", 
      "Substitution Lemma 31" -> "Circle", "Critical Pair Lemma 36" -> 
      "Triangle", "Critical Pair Lemma 21" -> "Triangle", 
      "Critical Pair Lemma 41" -> "Triangle", "Substitution Lemma 6" -> 
      "Circle", "Substitution Lemma 34" -> "Circle", "Critical Pair Lemma 25" -> 
      "Triangle", "Critical Pair Lemma 35" -> "Triangle", 
      "Critical Pair Lemma 4" -> "Triangle", "Axiom 5" -> "FiveDown", 
      "Critical Pair Lemma 24" -> "Triangle", "Substitution Lemma 19" -> 
      "Circle", "Critical Pair Lemma 31" -> "Triangle", 
      "Substitution Lemma 27" -> "Circle", "Critical Pair Lemma 1" -> 
      "Triangle", "Critical Pair Lemma 6" -> "Triangle", "Axiom 2" -> 
      "FiveDown", "Critical Pair Lemma 23" -> "Triangle", 
      "Substitution Lemma 11" -> "Circle", "Substitution Lemma 21" -> 
      "Circle", "Substitution Lemma 22" -> "Circle", "Conclusion 1" -> 
      "Square", "Substitution Lemma 13" -> "Circle", "Axiom 1" -> "FiveDown", 
      "Substitution Lemma 20" -> "Circle", "Critical Pair Lemma 39" -> 
      "Triangle", "Critical Pair Lemma 32" -> "Triangle", 
      "Critical Pair Lemma 30" -> "Triangle", "Critical Pair Lemma 27" -> 
      "Triangle", "Critical Pair Lemma 37" -> "Triangle", 
      "Substitution Lemma 30" -> "Circle", "Critical Pair Lemma 29" -> 
      "Triangle", "Substitution Lemma 7" -> "Circle", "Substitution Lemma 33" -> 
      "Circle", "Substitution Lemma 32" -> "Circle", "Substitution Lemma 16" -> 
      "Circle", "Substitution Lemma 29" -> "Circle", "Hypothesis 1" -> 
      "Diamond", "Substitution Lemma 25" -> "Circle", "Critical Pair Lemma 9" -> 
      "Triangle", "Critical Pair Lemma 33" -> "Triangle", 
      "Critical Pair Lemma 26" -> "Triangle", "Critical Pair Lemma 28" -> 
      "Triangle", "Critical Pair Lemma 13" -> "Triangle", 
      "Substitution Lemma 18" -> "Circle", "Substitution Lemma 4" -> "Circle",
       "Substitution Lemma 17" -> "Circle", "Substitution Lemma 24" -> 
      "Circle", "Substitution Lemma 14" -> "Circle", "Axiom 3" -> "FiveDown", 
      "Critical Pair Lemma 11" -> "Triangle", "Critical Pair Lemma 10" -> 
      "Triangle", "Substitution Lemma 5" -> "Circle", "Critical Pair Lemma 2" -> 
      "Triangle", "Critical Pair Lemma 12" -> "Triangle", 
      "Substitution Lemma 15" -> "Circle", "Substitution Lemma 8" -> "Circle",
       "Substitution Lemma 2" -> "Circle", "Critical Pair Lemma 40" -> 
      "Triangle", "Substitution Lemma 28" -> "Circle", 
      "Critical Pair Lemma 15" -> "Triangle"}, 
    VertexSize -> {{"Scaled", 0.01740963855421687}}, 
    VertexStyle -> {"Critical Pair Lemma 8" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 20" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 15" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Axiom 1" -> Directive[
        RGBColor[
         Rational[71, 255], 
         Rational[182, 255], 
         Rational[109, 255]], 
        EdgeForm[]], "Substitution Lemma 22" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 34" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 7" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 39" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 29" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 11" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 23" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 3" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 9" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 36" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 30" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 40" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 38" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 20" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Axiom 5" -> Directive[
        RGBColor[
         Rational[71, 255], 
         Rational[182, 255], 
         Rational[109, 255]], 
        EdgeForm[]], "Substitution Lemma 19" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 7" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 18" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 10" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 30" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 10" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 1" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 35" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 33" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 32" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Hypothesis 1" -> Directive[
        RGBColor[
         Rational[146, 255], 
         Rational[10, 17], 0], 
        EdgeForm[]], "Axiom 6" -> Directive[
        RGBColor[
         Rational[71, 255], 
         Rational[182, 255], 
         Rational[109, 255]], 
        EdgeForm[]], "Critical Pair Lemma 16" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 31" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 17" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 41" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 14" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 13" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 26" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 13" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 37" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 18" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 28" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 14" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 12" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 3" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 9" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 2" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 16" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 24" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 25" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 11" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 26" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 24" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 12" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 27" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 31" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 1" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 6" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 33" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 23" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 15" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 5" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 21" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Axiom 2" -> Directive[
        RGBColor[
         Rational[71, 255], 
         Rational[182, 255], 
         Rational[109, 255]], 
        EdgeForm[]], "Substitution Lemma 4" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Substitution Lemma 21" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 25" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 8" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 27" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 6" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 28" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 2" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Conclusion 1" -> Directive[
        RGBColor[
         Rational[13, 15], 
         Rational[1, 15], 0], 
        EdgeForm[]], "Critical Pair Lemma 34" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 22" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Critical Pair Lemma 5" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Axiom 4" -> Directive[
        RGBColor[
         Rational[71, 255], 
         Rational[182, 255], 
         Rational[109, 255]], 
        EdgeForm[]], "Critical Pair Lemma 19" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Axiom 3" -> Directive[
        RGBColor[
         Rational[71, 255], 
         Rational[182, 255], 
         Rational[109, 255]], 
        EdgeForm[]], "Substitution Lemma 32" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 4" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]], "Substitution Lemma 17" -> Directive[
        RGBColor[
         Rational[15, 17], 
         Rational[52, 85], 
         Rational[12, 85]], 
        EdgeForm[]], "Critical Pair Lemma 29" -> Directive[
        RGBColor[
         Rational[47, 51], 
         Rational[98, 255], 
         Rational[53, 255]], 
        EdgeForm[]]}}]]], "Output",
 CellChangeTimes->{3.746383350103359*^9},
 CellLabel->"Out[71]=",
 CellID->56162496,ExpressionUUID->"574fccd4-c93d-4074-bc70-d3c9d18354d2"]
}, Open  ]],

Cell["Have you heard?", "Text",
 CellChangeTimes->{{3.7463905021329575`*^9, 3.746390504388892*^9}},
 CellID->787872977,ExpressionUUID->"8574b58a-c877-4618-82eb-f67913784bc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"BirdSay", "/@", 
   RowBox[{"TextWords", "[", "\"\<The bird is the word\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7463904784845777`*^9, 3.746390516741516*^9}, 
   3.746390550241528*^9},
 CellLabel->"In[26]:=",
 CellID->103037031,ExpressionUUID->"70a60a5f-1278-4372-b2e6-929d0b566b04"],

Cell[BoxData[
 TemplateBox[{InterpretationBox[
    PanelBox["\"The\"", Appearance -> Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
EACH17Ql8xAEL902fMPvPePSpUv6XxMFuAYBvJ0LQ6Hi3RAAet+0XZWhhitX
rvDsW2PPyIDgFaEN91zDEAcv5pOammrsGRkQPHPLlGJ3QxBbtmzRv9pr1qwx
9owMCF61v2nfR0YHbxOfaRcG8LQ/MDKNPSNTBq87h8kXy/F8FpTxMRx4pZjG
no7Bwcs7oCoIwwHrCGNPx+DgUQs5iYbDk2Z78OLDpm1bGhG8KCJQjsaekcHB
oxbwGft7hCdBtj8+rl69iqjVr/+OeNVHIGo9gtRC6CMQtYw9I5MF1hHGno7B
wQsRo04jhgMvhGjs6RgcvL1jKK5lOPBCpiYfneYVyZvMrqUhCF6HB9Mu621s
bNT/sk9CHM+I4O2YNu06E952V1Mt1R4i4NWZmMaO6e7A29eD9roaFE/UjcyL
PKCOWwZF51YPprdTrB08nwW5h4YGrxjAVO9lXh0guKGMPSPTB88CMdW2n7xe
W6b6NYcUeJlEU91FxaunRSmewQHvspueTuysDVGwdHCwZs0a0/YTeeE7pA0H
DZ27bZhS+aVpf7uhj9TUVP2LHx0dbewZDRh4BvyTUDs0pNC552d4eLixJzUA
AFYWT2SZdjJrCAJoDYIg9JdgwoQJxp7UAIAXtUNN2wYfPEOXJMldu3YZe1KP
C+Dq8kQxElmDjM6GrgksAfhSvEJH0/N8hz54eVvT0Bqdn0mNkoaDjM4GvAmI
rM7PrUMdJgcfvLAD8M2Hu8i6evUqr1DZNOTw8EJnkTXcw4mAV7ziGRP4UsMR
PJE13A3dLnmFWrQNPkxMZN2+fbvzI7MB00x+m9IQhCmJrO54ZcJFs0MWpiSy
gFxCvBo6MBmRBe4IXmgUY/cYIl4ZBaYhsoAS5AV723mFoqPGggmIrMuXL/OC
V4hXRsfAiqzGxsYtW7Z8x2IAJ9nzGXllse0ICgpCvDIiBlZkcRuCCIKwtbU1
tHkDjl9aWtrZsuIAlCOqeDci6urqBlBkXbp0SSQS6R8N8NYQD5AC0+bdEfoA
mtG0G6EMC/Cc9EcWWYBUvCo7fQDHH4iXx9dNQEzt3buXt+GIh8TERBQUNTo6
1wM8QuP0nknVmWNZWVlAafZdlIHjA+MNyKgurXR9AM2IthMOEfBEVn+Ta0AK
9Z1UXQKwBRwBkK2yI8A74H1ey76eSQUseSSshgg6i6y+KyzwyR5MHYzdoxEY
GPiIhOsPgHIEkgpVyAwpPJrI6pVUQNq0a1XwAsgfXi30QAEcGT33ZAjiEUTW
lStX+k4qfQCRcvjw4QHhGFCgYA7A9EJZmyGLfokssI5dJlB6JVVnAAIDFw8c
re92FJiqXC4HWs/kn6BnAui7yOqVVGDdHycOdvv2bcBJINP0bXjgP15qAzKi
hhf6IrIMTSoE00OvIgu48KWlpT3YRYhUCF2iB5HVK6m8vb3Ro0YQukR3Iqsv
pEKBboTuAExi3vYWILKAIQ0sZ0QqhMcBr/8tR63uKlIwNohkeq0mTQ8t/cSA
TwCIrF7Tu/qkAjxEjj9CX9BZZCFSmQCam5uvX79xvW+4xo5mnW4AJ9AXkQU0
IyLVMALHkA8/+jh6VExoWER4RET4Q0Tojfb3IkIjRoZHRl989z2GVaPth3oc
LdmzyAKkApY8qvUdsgBLD6ST/jtPb352xsxZqfPSRseM7aOR046oqNHgP6am
zp+TlEyrNL/8+it3THCK/nKsB5GFSDXEoWPBvf7HV1+p1CUqtUahVLm6ebQv
IkEKSAFF4iSJEwSGExiG6432Xwkc5z6pTwCpmUVObl5JadkXX3zZ+Yy9okuR
hUg1jPDRxx+/+NKe/IKC9uXDMRywBJAJkgbDBBhmQ1m6Sx38LVyj7H0nuYYn
eERNco2IdQwZax8QaesTZO3uLrWTEIJWNuKAiAJKQBFt7+Tm5u7Zs+fDjz5q
P2lfCMYTWWKxuLS0FBVkDgtc/q/fa+sbEqZPw9hNUiQgkwDH2O7FQEA5UNIg
K9d4x5A0rzhN2LzKmOztscVvJq7Uzn/m3cyt2nmbz8zZcCRx7YFpy16aqNwc
vagoYEaiS1S0ra+fuaOdQPKQZgIg8+BBJ02erNXWX778X+0T6FlFIlINU7z3
3vv+AUGkQCgUiaA6YyUUgRO2lEWg1DXBIVwZMuvlqeo/Ltx5Q3HkJ/WZX+gz
jYoz9xVn76vO31Odb6TPgXFfef4efe6O6swvqtM/0Ce+KHj9/NyNO8YXFgQk
TLD195TaW5FiCsMpoC1xQigUCgQiX7+A8zW1n39+5e5d6NP1wC5EquEFbikv
XLzo5x9AkBQrnyCpSIIwF4hCzdzlYXNOJK//36WvfFd46GfZsfvK0zpNDaNu
YFT1LexgVFq9Ad5vaFZrdRoto65jlDWN8rM3i098Kzv030v2vDKtNN0n3kds
a0UIKYJk5SFOUSInZ1dXN89XX3vd2BcDYYBx8eK7QcH+GAm1IEkIhDghxahw
C/fSyLknU9Z/nv/qz/QZyCVNPaPWtqjqdHqjhRt022B/1f8T5Ju6ntFcBC9u
yo7/OfvlN2avyg2eHiBxEsEm7jjBMhlwzMnFZc9Le5i+2V0IQxNQUrHCaveL
e9LSM7mQAkHgAgIXYViklefKUWnnkp76e+7rjarTLUBGAc4oHzKH6Tha9EbX
f6Lrmmmtjq4Doux+mfaW6uT/LNl7alY5HTLbV2hLAilJkQL2gRQeXp4v7N71
cJIIwwrtS7bv5Ve9vH3bQwoERjpgZineMS9PLb2a9wYUNfQFRqEFpGrWF1D9
HBzBdOpa+JrWtgCOAaUJ5VjtX/Je3RybP9o+iPUWMFIA/Ud3T48X9+zhTRVh
6KN9sd44cNDNzRNGEighhhMijAi2dNeEJH+YWXWHPgf5oKjR0bWMoqFF1aAD
So2uYToJpb6PFnVNiwqwS8so61toMLQt8hpdad01+bHXpy6f7RFjR0IXkqQg
u4BmfO31/bwJIwxlcMsEdOE7R484OjkR7ANrYCSTEsY5B1fFFlwtOnhPU6cD
uk9ZC/UXZz4p2wY9oEMJTlTbrDr/s/K4NuO5dO9J1qQUUh1qRtzOweGNgwfu
3r3L9FhrYewritABhw6/bedoD+x1EtjPJGmJm83zHFeXse06fZqB7t5Fhn53
EEcDo9TeUZ39eOHuLJ94c1yEsx4qmJ6tvd2HH31o7KuF0Du4e3z/gTccnZ1g
xJLAMQFYRDLBI+rt1LVfK966SZ+4qTj+PX38mur4dfDTAOM6OLLqhN44foM+
ektx5CZ99BvFoYPJq2Pdw2CeSADD/iKJ+NiJ4/fv37/1ww8//vhT53H79o93
7twx9nV90sG587/Z94qbhztrtMMEIA6IhRFuUvsJLsEzPMIT3cITXaOmu4+a
4R7VPqa7R053e9ThrjfcIme4tw79z8xwj5jhNpJ9PyrGJdTBzI7CcBiQIAkB
JQgND4ubGD8hNm5CbDxvxMVPihkzbtHibEAwBplkxkC7TbJv3z4vLy9ozICF
IwCxgNhqjSgNKbCzAqzv09S8vf3+85//MIhag472C75//35un4KAhGEkmG5m
FxHjVlFvITlLp33tYMbnkQBMOXYIwIC/ER0OixNs2L/DWWDslJ0axiXB8R5P
LWAjFUHBod99/z2DqDW4aL/aBw++6ebmhrX6g7ilyCbSwd+CkoIV5CLhYJns
HG2Cwn2Dw/3MrKSWthYjgt1DI319/N0oSoC3A+vb6EbgmFuIA8N9/MO8Le3M
MVJgZWfjF+wRHOXnG+gpFAs4LnE/8HbCd4O274IFBoV+9x2ilhFw927jm28e
cnB0xNicIFgSM0I6z2fSrhklXhJHdjXhokvNpGMnjlyzSbHuGZVXoHPomCB6
Tc6Gak1hyULwp4eiBufWv6c159ZdJBLZ2ds6Otk6OFnbO1pJpELwpn+wx7pn
6RUbC0JHjcAoLHx0GL0yp7JarViRbWFj1nZo7jw9kauVhOzM/UYE/IdNVSNq
DRo4u/39Dz60s3fESQooGyAXpDiV4B5Zm7r5k6V7pzmOdBfbWFMSyDdz4ejY
0OUbi1ZvVoRE+kRPDJetzV67TVFUlmnvYSO2FInEVKtl1hOlcK4EEKy4u7fb
wqKUgpLMXFV6jmJeUNgI8OaIYI/VTyuWPVUYFRsktRdHT4yUr8pdt1WpWLnY
2ctOYi6ixASroEkoTTuq687sMjc3t7axGz8h7vr1Gwyi1iCCo9bxEycpSgyN
HIoUYoJJTuFHEtf8pDjeqDj9t9yXP8rfnewfC5aJEuLe/q6pixIX5CXnyjOy
lemZRcnpebMWFMxeopqXo8qMGh8mNRd3L7Pa7Tbo3YGPBYf7r35GUb5VseY5
RcVWRcyEcPCmi4dD2pLZmXlzFhQk5yjTs5UZWcUpGXmzs/KT8uj0AjrDL9CD
PUUv1CLYbGNaWtonf/rz51f+19hX+skCV9leU1MXFh5JUSIKxymMHGsT+FrC
8h8UJ3SqWobWMuqLzPIGWdgc1m7BxVKhg7Ods5d9Lp0OxNfkWePsXC1DY/yW
bS7csF2TnDXN0dWhW2q1qrKH1AqNHAEYVVElK6+Sr6+Wj44LAW+KpSJ7Z1vP
Ec4FZVlAD5ZtWJqQPN7B1To40rtsQ37ldnXEKNiOGFjo3VKrzbYHH5PL5ca+
zE8cOF6dPXc+MiqaM5GEOB5l47Vnsur7oqM6jVanqmmByUHtnbLzeQEJkFqw
tBimV4DWTF+auPrZ4nFxUeB9R0/bkg0FFVvpjOyZ7p6O7dTqxLFWUwyApOC6
B4Z7rtsqW1ctWwOppeCoxRaDYWIzaqkmc8N25fKNeXHTxoB37F0tVGtz1lUp
w6IC+FKrKwpzvmFxcTGDym8GEZzJUVOrjY6KAddfKCBEGB5o5rw9rvDbwsNN
JRdgxrmt0OVeSd1biWtH2fm3hR0IUkIsLpq3crNyQkKUmRUVGOW7arNi485l
gG++gW5ic4qgSKytwOohrVrNsFZr39rZas7ChPJtyrXVinVVRZXVdNT4AI58
nJ9YWLbw6V0ryzYUxieONbeR+od7rdgk37SrNGZiKDiFxEyKPTz+Q3a1We+t
IYvc3DxjX+wnBe1WbMOFi2HhIzG2ikCAET5Sp/XRmV/JDrZo6ptpvVoXuo6R
1TetaHh7Tvlcj7FxrqESoDbFeOzMsUuU6ckLEybNjklMS8hYmpRZkJSRPydx
/qTY6TEjQnxhZTsbgtJbfZaZAtzD29UnxD1p4dTKHaXrqhVrq+TrqovXVykT
02N9QlxcvRwAZ8Qi0bTk+KzCFGDnpyyZMXn2mJlpk9JykxbkpyTOi50ya3xw
RAAbXOvSpIOiLzJq1MRJU3bseMGYl/vJwwcffjTCP4gL+wAp5CN0Wh6W/lXB
gWZYS1zHwLKWhzVUD9QNLbS2UXn2l+Xnahc+4y60AYtHCbDRE8MVaxet20YX
li2xsDMjJFhazpzyrSXlWzWZS1MpIWsL4foKCypToZjMzp+3fpt67XPF66qA
NiwGChG8qKhWrnkOvFCk5c4mhSRwVQViEhNiIycEy1dnr6uiZSsXWztZYCSW
mjVl087lczKnsYnzrqlFCcWHDh1u7s8WM4THx3vvXfIbEYAD8QH3NGC2lHmR
f+KVnNebgICiL8AaPFg09bD+U6eubVLXgcGUvXd5QbWzyJaLH0RPCFeuW1i5
my5cvlhqYQbemp+dtP6F0vU7VFkFKQIRoJaA25bRFnQAxg8JqJVbnLxxl2pt
VRFkFBRZgFHyciC+qmWVL9IZhbMJEcsZGIrHwscEK9dmb9ilUq7NsbS3AO+k
Zk3e8pvlyYsSOttZ7TEvASU6/M5RBllZgwLOvqrTNgQGBVHsihMEbiYQZQdM
/mTJ7gdcXV/Hmk99gjUD66v04u8W7PCnHIWYmMCJqNhIxarc9dtKCzSLzc3N
weHmL05aX6UC9vyCvGQKyByMbKUWp6TgT0JoTi6Rz63cqSrfBhmlP9ZuK67c
pcgsmENKWNazWZ6RMWHKFUs2VKkUK5ZY2ZmD4yRnTX3mhZWpmQmsPdVBWLU7
hiKx9B1ErUEBx6szZ85x9hXnQUkxQdaI+A8WPX9ffbqZqxzuqo69nWmMuv5G
4ZGzSRv2Jq2MsvcztzYbEewVMtLPx9+doiAVXL1cgyJ9gyP9PHxdoLZqTfe1
KSkKWFkuSRlTl2/Kq4Cmu7zzWL9DWbIhb0Fe0tz0qbasjLKxs/YL8gDH9A30
oEQwa+Ps4RQW5e/mYfdQHXZMHllZWT29+Rm0UXpw0NTUBH5u3VbFpgJhmleC
Ced7jL0479n7mtOM4pyuo7DqvoK9nim78NOKmrk+Hbqgs4ljsuM7rQnidmqJ
xILImOCVm2SVO5SdRVbbUFZUKTbvLluzudjFw7bdYdQ7C96esOZlottFlpOz
85df/oNpC7AgGA6cUvjDH/44e3YSFxMQEtQUl4iauZWN9Gm404FmR4/UYv+k
fQBeKGpv0qdnuEVjfUYrtSSiyLHBJevz1m9X9ECtdduKgQFW9lT+iCAPWNeD
Q1ezj1U9HLUsLS1Xrmp9NBLK7Bgan/3lfyZPmYKxLiFQXcGW7gdnrfxRdoJR
afu4B4djXRPcv1P7s+rk+qiFU5zDWosA3SNnuo0EYwb7c6ZbJBzukYnukQnu
Uc5SB07OiM1Eo+PCyirz12/vXmpVy8pZb3H504VR40KEEooTes5Su6luUVM9
Rs10i0rkjs8OrpJwBqwVjAqw9CQwknNKCZI6cvQYg2wtA+PK//49Nj4O56qw
MMxVZFMRlfmv/ANwIyrdwVbvlV2MUstAn/HcLfWJ7/WrjpWn2HGSHexr+tRN
+tTX8oNpvnGsQMEk5uKxkyKWPVVQ0RO1itupFT7aXyCC+o/CyQU+cV/L37ip
PHFNeeI6e/C2s7AFz2BoTm6KX2qOScCXBDwWCsXIQzQcOF1w/caNCbHx0Eph
ww3gssfbh/x5yUv3Ndomdf82CcLwqZJ9oQCv6ztsi2A32ncc4AMNN4qPZvhA
apE4JjETj5nIUqu6J2qtq5IBsVa2KT8o0kcAXVlMSgoLAmb8ojzBKC/yz8Wd
Xfkuo7l0NrEi2tpXQML8DiUUHz9xkkHUMgy4q/qvb77x9PLB2EJ3sEyuUuvy
6AU/FJ/QlbzbBHsv9HcXaq1OpW1RNDSpLuj0tnTpOo1mdp/XTcWxRb7x0Nwi
SLEUKMRQViHSQDT1oBDBB5ZtKvANdQeegQDDbYVm6vCUW6rjLWoYA9E/S+vZ
lbVAs3+WtWtp4FRLXAgjaJTo6NHjDKKWwfDPf/0rLSPdwsoSLi7bUGisQ0BN
yqY7ypNgLVqUsMXHI2121rKDt0FVv1uIltsEfUd9VhY8m4T+Ii4UUSFRI9QV
Oet2yrulFjDjq4qB1Cp9qtgzwJ1N5RBuYtvVozJ/pMGcG1rY5GbbWdpVOXzz
puzY1vg8S1hxBrxg4Zix42u19Qyy5A2AL//x5cLFi7iiO7C0QCcJMCLNe8LX
RQd0yrOsV9hvanXXw6GbD2sbNefXjFpgIzQHmpggcHc/R7o8G1KrBw+xlVoy
dz9XNtxKeEkcNsQs/Ik+1U6tLk4Hvk5p/Ynk9b4iezbcCgn2zJbnGCS4DICj
x49xworb8AUWyZ6wWBU+/xfVaUZZwxrw9f1SiP0dgFr31DVbYwu9pQ5cGYSt
i6Vs1eJ1O3oMPlQVV1QrVBX5Ll6O3E3hK3V6fnzuL/TpFnWDrntqMZqGTzJ3
p3qNF8MmOtBh2fUibAqBolsDjo2bNkElyDUMZVc21Mpr32T1XdV5YJBDk8nw
1Lqvrt2XUBJu7clFOS3tpEs16WvZfHS31ALm1jZZXukCB2cbNmCKh1h7vDhJ
/mv31GK4Nibqhm+Xvl0xNtuGMuO6pRYUFX/L7hFDGFhIzczwtnJ0nFWLszyi
Pkp7Hq6O+qGlZFBqNalrzsxaH+cUwsU8za0kGXlJa7Z0xys5dA+rZaueLUpd
kmhra8UFQuMcQ04kVd5VnQFuaQvsW8JX4m15KO0d2cm3pq9wEtlyETxwT6lK
NMZeBxMEppe7xWD3IKwgZNq3skMwhtBGLcPxihsP6JoP52+b7RnDUUtqIZ45
f+LyTfnd5RABtTZsl5c9lTdh+mgzcwn3v+Z5jfss5zdNMIFeDzsjdUMteMto
6i5mPucjccbatokVFBUaex1MEG3ldyy1CFyKkeWjFzSW1DL0wFOom6Ftpuv+
umjvYv/J3K4tsblw4qyYkg05gFrl3QQfKncq6fIcnzBPAQWTnUKMVAXNgu6h
sqZJXdes7iJg0laboWVKGz7J3j3aegRsKs4mfYrYAmaEgQWnDMnWpg24M2Xx
fGxBc2nDIFKrTqes/77oMB2exJVtiaRUdHwwXb4I5nq6MrfKq4o3bFcWLltg
7WqFselmJ6H182Nzm+EdUdOshlEsRo9OfGppGv6W85tZ7qPFsGU9S62iImOv
gwkCrIyQEJiLpAIC9prxENnujJfrSusZmr80hhicaQ2oBcytp8YsMWOze6SQ
9AhwLSxbVLlTBSsAudFBainWPle4IG+2mRVs0UZhRLRtwDtTV7ORq97sQyWg
1oWvCvYXhyRaC6Vc1CW/ECnEgQeGk+ak2MXcVkjCALU7S62WQaQWu9z1TGn9
3qkab7EDJ0akVqIF+SkV1XT5NjmPWkBFAkVZuiFnSmIMkG8ctVK9Y3+btr2l
L5IWnEvd8J/iQ09PyHGVWnPFODIF2iw28JCSEn9zZ38LZzEpaqfWoEmt1kFr
W0q07857NtE9WsjmAwRCImF2bOlT+euqaLY2vkiPWsCGp+XLF4ZH+wuFMOYJ
9PiyiPnfFxxuV+LdTZthz8WoGn6QHXttaukIM3vOu5ybPPfrq/809lKYGvyt
3NKD48MtPESkBGiHwacWqxPrdeq6f+e/sTo6DUyChO3fieAI37zSzPXbNeU8
am2TVW5X5SrTnD3sBGxETowJt40rgDGrPsxZB1NL9XcVp2tTN4dZuGCtm0rw
lNT5d9iOlAgDhXiX0G1TFFFW3hQJ28i4i2x2TCzWlWkHVSHSDYyi/p7m/KtT
y5wwCxwXAK/C2lo6f0ni+uqStVUdYqeAWhVVyvTc2RILinVqqSAz1wPTlwMl
3qLs0+nAV3ugPPNB5tYIK9h6juumGz9x8k8//cygZOLAIT9w6rlFz4+z9acI
2C3LXWy7fVKxrlTL9LZMAzlowIp6wI0L6c9PdAoTEtDqA6Jk3MSRqvI8Nq3T
wUNctrFgalIsUJqAEkJcOMd99MX5W4BK7dXWekgt+syHC7ZFWLPUYjdQJ0yd
/vPPvzCIWgOHlyYU/T7npUl2wULYOBK3Jc02js+9X1LLtk3upVx5wAQXTIJr
GbX2q7w3KkZn2eESGIQgCEcn65SF0yuqNeXbHsZON+yg8zSZARG+bPkPfJTG
8ojUr3JeY9R1/aYWK7UEFPQFxk+IQ9QaWFxO2/p59sspnmOksOU79LaUYcnX
ZUcBtQZHZLHUqmHru+oa6TO1KZVR5m7swxGBgsZGxYUt21S8FlJLxmnDtVvl
s9ImSyyFsD0gLnAWWr06vfQefYaha/pyLl0btd7PeJ6jFoCfn9/2HS+g4oeB
xa3iY9/kHwT2s6PIgq0gxpI8R/8hvbpZcb7z/W7YQdcxJQ3/WLpfEZxoK+Qe
S0c4eTql5M5cta1o3fbiimpgZSkUqxdFjgli/0hKSGqaa9THmTuZkouMsrZz
mLTz0LFZy7vyU+eSK4MtXLj4f3ExCj4MPO5r6u4UnzicuMrL3Im7hSNsPPdP
1txVnYcZXrqujxvEBkB2sYv+s+LkkZSKMHN3mHsiBBiJ+UV4Fq3MKt8KeCWr
2KpMypri6GINo18E6UhZPhub938Fh7garb6cgqPWbdmx/dOXjzB35PZ6FBXK
jL0OJohmWJ2u/duS34yxCYL930ncSiApC0u5pTkLM3GDRa2HgktVfzX/TVXA
HCfKks1BERILUUx8ROmGwvXb6GUb8iPHhbAbrDEKF4y3HPF+5ladBgZCW1Q1
PU/yIbXU9d/LjjwXV+whteOa1RQjahkALXL4DLjvCw4V+M6wI81hHhHD5nmO
/SL/4D26ZtCk1kPBRV9oktd8vHDHdOdwCuZ94BMF7B2tk7OmrdxYmJE709nT
gd21iDkKLVeEz/tnwRsMbMfUZ2oB9moavi58UxMBbAArjK0GLC5C1Bp46OgG
4JrdUhzbFaf0N3eGXj+GRduNOJlc8avypE6t1dH923bxuOyC9dJ1v9AnX51c
Fm4Dd4LAXjYU7unvml04P3p8sEDC9ojAsGArD23qM/flZ/t1fJ2yHhhmV/Je
y/SZJKXEXF2rrBhRa+DRDLej1t1Tnv54wc4JDsHs5mLcTmgtC0m8KjvA0LU6
5WCEIPQEC9DCtc30ua9lb62KzHAR2nBtJwUiMiDEl2sVAvSkJSla5Dvx64KD
QLv1SyrqlFDLX06virHyA26ogJVaObk5xl4HE0STur4ZqqHaa8VHsr0TpBgF
uz1gRICV26uzl/0qO86oOdN30KQWa3Epau9pav6Q+UKuz2QJzCjirc+vhvEu
yLRIK89DU5f9Ij/B1Sv2dbCBr1tFR/ZNVDgKLbhN+mHhYW8eesvY62CCAGZ8
Eyyc096lz+2bUhZp7U2yuzCkAmqma9TvM3Y00ed0vTlfAySvWrfHsqEnbZOq
/oGm7viMNaNsvUVsB0u2pw20uykMy/AefzVvv64PsSz947coaxlN/SfZLy32
myihKK6iZlt1FYMipQZA+8UHiu+a7PiKyHQb2LgKCglXgWX5qIX/zDnIBrph
3ekghCD0TwGM828KDj03LtdVaEFyHdhYMnhbOj4/ofCu8jz7MPT+zAp8i5L6
0ymVARausGEcu1msqno7gzaLGQJt1xwoiwca7aWMrfN8xpPQNcMEhCBI4nF4
xto79Bm4KEotTPYNXowLFsA8KKn9ZPGugsBpFpSUfcIANOCTfMb8dvELzUr2
GcH9O7L2+8LDT4/NtsLFONzzKCAFwhde2M0gahkA+ldep6pvVJ59PaEs2MJT
BNvDA8+fmuU66lTqxh9KT+no84MZ42rf73yPPls39+lYq0AJLgQqzEFg+dSY
RXCbpKKBofuzkQ2GHbQfZ1Sn+E4QwZJa2POhYn3ljRs3jL0Ipgl9QQEdf/rC
l/kHVo3OtCHNYGshEreipIkeMe8kr/2JPtqsPqdfdm7gTWTsM6Zh69SGa8XH
9sYrvWHwHEtwCT+X+hSs+VFegNU4fT+mEmrDVxJK3MT2JNtCTiiSnDx1mkEi
yzDoQC0gJZQ190trP8rYOdd1lAjazhhQjmaEcKpL6IGpmmvFh4FHCVPJ0LCv
MagEe3hk1q37uuCN/PBEZ8JqVVTGN0WHm6CC5hpB9036AdWpqPm/orc0I+fi
sM+TgCtdPnDgTQZRyzDouI41cDO+uvam7Pg7s9fGuoRTbH9jCicAzcZY+O6M
l39RcBA+PEUBN1Z3DkoMuChr9xzvKs9os7bSAUnHZ1Q0lTVwBQx8EvZ4hCZN
zdmkp6Y4hxM4ReCEuUQ8M3H2p5/9N4PcQ8OATy0asotR1/6gOPZO0vpZzqOs
CQkFGwYBDUIEiF02jc3+86Jdd+SndOqG9nCl4ZQjo8eNO+pzn2Xt/SbnTXDe
9oRgz9Rq/xOjrL2lOVU+eqG9wELAOoYONja///0fGCSyDIYuqAWDRTWM6vwv
spPvpT0/3zfOSiDhnqIkwAhnoUWGX9w7c9Z/VfD23eLTbETiYTtK+GtHY+zx
KdfGohpGUfNAWfNAP1fYW5X1wz8paj7L3pvsPYHNHOGkgAwJDf7rX//GIJFl
MPDkw0MysKnDn9WnPl6wfWngFDvSXICTJPtcXiuBWajUK8d3+uHE8m9kb99T
nIV5RmUD7LSgrG9RcgGB2rbxuOzSJxJvy2pfDC2W9toHirOvT18WYufFFQ75
Bwb89ne/M/a1N3F0q4YgW2qBrLijOvVZ9kuroxf4Ug7wUdME+wwBjLCmzCNs
vXOCph2ZueZm8RGdWtusYgdM09QDpunohmZVF209Hkct9p1UHf67WntDfkQW
MNOSEHORscjoKLTJwtDonlqs/wUcdli92fBF7v6dE4qnukWb4WLu4agCtkbC
khCNsQ8oDk6sjpOdTKr8fMm+u6rTzPKGllJgiV1oAQRja+zbBxebbaE7kKSP
PHk06QdbwynPfpC5NZ5NvpMUyUkt9CxgQ6O3RYQR+GbYc7L+x+Lj5+c+szIy
c4pTpDVpzuV2BWwTdrgVSOIQ7xK+NHDGpnG5B2auuJj+3Bc5r/6qOMWUXmDK
LjKlF+GLEjAaGE09a4drdfTj0qb3Afvt1N+SHds+Lt/XzJErV3b39Ni0+enG
xkZjX3sTR1/lA5tD1KnrriuPnUvaSIelxDgEWwu4Ehe2Yg8DfhdBYYQZJvSX
usxyH708PHXPROXxOetqUje9N/+532VU/ylr91+X7Psyd/83eW/dLjrepKlt
BkNtwPgYW/hX/13hobzAGTZCM4pNQc5Nmdf63ZHIMiR60D6dDPtartzlPn3u
O/rI+bmbCgNmRFt4O4ktJFxfQY5mOCbECSFGinGhGS6xJSWeYtsIa8945+AU
j3FArJVFplWMWbwnoeRPC3ffA2Ktz9ULj0Qt2GHyasHBmc6jBDBjCA2tlNT5
xr7qTwT6uEZ6blo998SBRsXpb4veqpv/zPKoedPdIwOkzi4CS2tSIsJJ6EYS
rU9aggYZgQkIXESQYoHQTCC2EZg5CK3sBZaL3GM/zX7pvrqXwuNHG23lypBa
fy/YP9aGfbCjgGSpNc/YV/2JQH8Xi3tCAWyaralrUdfdUZ75d8Fbn+e8Aoyr
vVNU8uBZsZYBboS1DSYxx0QSXAgfA4xTGBhQW3LdQzGuUCrY3O21hGW/yk73
r5yvv1JLXf/X3FdGWvqx3bxJJLUGDY+1cBzHgE1e0tCkOXdDcfQvua+8m7bt
0MzVT8dkZ/tPTXCNHGXr52/u6kBZizDYVoaCNj9bsoNh4y19zydtvCs/+6h9
6ftGLU3D5/mvRVix1GIjD+22FoJB0V8t8zDzoqcl4QoqzzGqGqa0jllW/0Bz
/ruCQ3/O2n0h5ZlTSRVvzlixb2rJ9njZpnFL1ozKVEek5AfNVIUm7k9Q/7vo
UDNtEIWoT62rhW/O9RgvJoFOhpROnpuKDPhBwMCtI1sLAWxyZQ37dB6gMbVM
CezJxpTVA761lGmB/f9j8Ylv897+++LX/pW3/676dAs0tAxZHc0GH64VvVMe
lekkteUU8fy0DGNf9ScDnZzBRxvc0xLbRBnLlrYH5cDeRAr2aVAKLaOsB46A
DhYew5070D1kzXgDjRY2FP+T7MT+hJIR1m5clmd0zNj3P/iwuRllpQ0LHXxU
0+CMOm40t74epPMCdt1Tnns/Y9t4+wDoJLK7w0aNGnWdLS5FmtGAgJWlJj2U
MFrytfzQXI+xsN8g+7i6iIiIa9evM4hahsQD1XnTHvdV5+9p6v5dclQWNsee
sBDgUGqNHDny2rVrDKKWIfHiREXPY3ePvz7+5w085HAC8ertE2VzfMfawE1n
BEet27dvM4hahkSwpXtQ2wi0dOtyBPXhM4/zeUOPEAuXAAsnJ6mVmKS4R1zZ
29uvWrXq5s1bDGKXwQCf8d028G5GXz7zOJ838GAjDjiXBYA/2WINzMrKGhUw
GxTGXvfBGHoPuII/OGo5OTn/8ZM/MYhaBgOXRW7NJXcDrOPoFf39vGGBtT3g
qm0qHLUcHR3/+MdPGEQthCcV4C4w9hQeBf8PGlDSYw==
       "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> 
         Association[
          "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
           DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
             "Instant", "Gregorian", -4.]]]], BaseStyle -> "Output"], "The"],
   InterpretationBox[
    PanelBox["\"bird\"", Appearance -> Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
       "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> 
         Association[
          "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
           DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
             "Instant", "Gregorian", -4.]]]], BaseStyle -> "Output"], "bird"],
   InterpretationBox[
    PanelBox["\"is\"", Appearance -> Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
       "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> 
         Association[
          "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
           DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
             "Instant", "Gregorian", -4.]]]], BaseStyle -> "Output"], "is"],
   InterpretationBox[
    PanelBox["\"the\"", Appearance -> Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
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
       "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> 
         Association[
          "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
           DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
             "Instant", "Gregorian", -4.]]]], BaseStyle -> "Output"], "the"],
   InterpretationBox[
    PanelBox["\"word\"", Appearance -> Image[CompressedData["
1:eJztXQdcVFe+vmXuNHrvXXoRUGyABRsqCEoRCyB1yp0ZwC6iRGNioqBGY1zT
jCbG2CswoIlpu77dzW7y3u7Gt8km7uZtNrHFNEWF4b5z7gUcLl0ZBsbz/Y78
hmG898w93/33878++SXziwkMw5aLwY/5eaunLFuWtzbNGvySoVmukGmKCmdp
VhTJipaNyyfBm79v/QdfMwhDHmiZEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEJ5wXLlyZf/+/UuXLp08ebKzszPWFby9vcFf5XJ5
ZWVlXV3d7du3jT1rhKGIxsbGS5cuAZIkJiZaW1t3yaVeAciWlZUFOIlohgDw
6aefAukkFosfjU7dITU1FXHsicXhw4fHjRs3sIziAQjANWvWfPfdd8b+rgiD
AbDQW7Zs6c6CMhCAYLx69aqxvzqCoQAMKiBD+qL7APGARgMMBAZYd0cDFAV/
BaIPWGjAnu/1sOAD4ICD+HURBgnA6YuMjOxh6YERXlpaCqjyyOIFmG2AZkFB
QT2cBfz18uXLA/rNEIwJIC56kCpA5gBGDeDpAI0Bx3rQuYDDyMIf7gBqqztb
HZANmECABgY6NdC/wEnsTogB4p06dcpAp0YwNMDKdhmkAm8COTZocqMHmQm4
PThzQBhAAJXU5WoCIWY4SdUdwBmB2kXsMgF0ySuj+2jdSVHEruGCLnk1RFwz
YPtlZWV1nl5qaiqwzYw9O4SeACRD54UDHtmQWrguJ5mYmDikJomgjy6XDAgx
Y8+rCyB2DSMMI15xABPu7Dkiu2uo4dNPP+1SDxp7Xr2grq6uM7sGNn6L8Jjo
nMQZLrd/Z3Y5OzujYokhgh07dgxTXnE4depUZ6PL2JNCYK5evcq768eNG2fs
SfUb4F7gsWvv3r3GntSTDnCD668IoBmwu4w9qX4DOIbe3t68LzL4WQOEdgCL
l3ezD2WXsGdcvnyZ912Go/g1Ddy+fZtXuBIUFDSs40Kd8wioOsIoKC0t5S1E
D0WhwwLgvuCVACHBNfgAq8Cz3uVyubEnNQDoHKAbjqbjsAYv4AA0o8nUbfLK
b4ZXIGW4A4gsnpUFmGbsSQ0YeGEuIJxRBHXQwHMMwcUf1tZ7Z/BuHLQVaNDA
UxlDP1fYX3RW9yZ27wxNAJuKZ8Cb3u5RoAF537Gurs7YkzJ98LRhZGSksWdk
EACH17Ql8xAEL902fMPvPePSpUv6XxMFuAYBvJ0LQ6Hi3RAAet+0XZWhhitX
rvDsW2PPyIDgFaEN91zDEAcv5pOammrsGRkQPHPLlGJ3QxBbtmzRv9pr1qwx
9owMCF61v2nfR0YHbxOfaRcG8LQ/MDKNPSNTBq87h8kXy/F8FpTxMRx4pZjG
no7Bwcs7oCoIwwHrCGNPx+DgUQs5iYbDk2Z78OLDpm1bGhG8KCJQjsaekcHB
oxbwGft7hCdBtj8+rl69iqjVr/+OeNVHIGo9gtRC6CMQtYw9I5MF1hHGno7B
wQsRo04jhgMvhGjs6RgcvL1jKK5lOPBCpiYfneYVyZvMrqUhCF6HB9Mu621s
bNT/sk9CHM+I4O2YNu06E952V1Mt1R4i4NWZmMaO6e7A29eD9roaFE/UjcyL
PKCOWwZF51YPprdTrB08nwW5h4YGrxjAVO9lXh0guKGMPSPTB88CMdW2n7xe
W6b6NYcUeJlEU91FxaunRSmewQHvspueTuysDVGwdHCwZs0a0/YTeeE7pA0H
DZ27bZhS+aVpf7uhj9TUVP2LHx0dbewZDRh4BvyTUDs0pNC552d4eLixJzUA
AFYWT2SZdjJrCAJoDYIg9JdgwoQJxp7UAIAXtUNN2wYfPEOXJMldu3YZe1KP
C+Dq8kQxElmDjM6GrgksAfhSvEJH0/N8hz54eVvT0Bqdn0mNkoaDjM4GvAmI
rM7PrUMdJgcfvLAD8M2Hu8i6evUqr1DZNOTw8EJnkTXcw4mAV7ziGRP4UsMR
PJE13A3dLnmFWrQNPkxMZN2+fbvzI7MB00x+m9IQhCmJrO54ZcJFs0MWpiSy
gFxCvBo6MBmRBe4IXmgUY/cYIl4ZBaYhsoAS5AV723mFoqPGggmIrMuXL/OC
V4hXRsfAiqzGxsYtW7Z8x2IAJ9nzGXllse0ICgpCvDIiBlZkcRuCCIKwtbU1
tHkDjl9aWtrZsuIAlCOqeDci6urqBlBkXbp0SSQS6R8N8NYQD5AC0+bdEfoA
mtG0G6EMC/Cc9EcWWYBUvCo7fQDHH4iXx9dNQEzt3buXt+GIh8TERBQUNTo6
1wM8QuP0nknVmWNZWVlAafZdlIHjA+MNyKgurXR9AM2IthMOEfBEVn+Ta0AK
9Z1UXQKwBRwBkK2yI8A74H1ey76eSQUseSSshgg6i6y+KyzwyR5MHYzdoxEY
GPiIhOsPgHIEkgpVyAwpPJrI6pVUQNq0a1XwAsgfXi30QAEcGT33ZAjiEUTW
lStX+k4qfQCRcvjw4QHhGFCgYA7A9EJZmyGLfokssI5dJlB6JVVnAAIDFw8c
re92FJiqXC4HWs/kn6BnAui7yOqVVGDdHycOdvv2bcBJINP0bXjgP15qAzKi
hhf6IrIMTSoE00OvIgu48KWlpT3YRYhUCF2iB5HVK6m8vb3Ro0YQukR3Iqsv
pEKBboTuAExi3vYWILKAIQ0sZ0QqhMcBr/8tR63uKlIwNohkeq0mTQ8t/cSA
TwCIrF7Tu/qkAjxEjj9CX9BZZCFSmQCam5uvX79xvW+4xo5mnW4AJ9AXkQU0
IyLVMALHkA8/+jh6VExoWER4RET4Q0Tojfb3IkIjRoZHRl989z2GVaPth3oc
LdmzyAKkApY8qvUdsgBLD6ST/jtPb352xsxZqfPSRseM7aOR046oqNHgP6am
zp+TlEyrNL/8+it3THCK/nKsB5GFSDXEoWPBvf7HV1+p1CUqtUahVLm6ebQv
IkEKSAFF4iSJEwSGExiG6432Xwkc5z6pTwCpmUVObl5JadkXX3zZ+Yy9okuR
hUg1jPDRxx+/+NKe/IKC9uXDMRywBJAJkgbDBBhmQ1m6Sx38LVyj7H0nuYYn
eERNco2IdQwZax8QaesTZO3uLrWTEIJWNuKAiAJKQBFt7+Tm5u7Zs+fDjz5q
P2lfCMYTWWKxuLS0FBVkDgtc/q/fa+sbEqZPw9hNUiQgkwDH2O7FQEA5UNIg
K9d4x5A0rzhN2LzKmOztscVvJq7Uzn/m3cyt2nmbz8zZcCRx7YFpy16aqNwc
vagoYEaiS1S0ra+fuaOdQPKQZgIg8+BBJ02erNXWX778X+0T6FlFIlINU7z3
3vv+AUGkQCgUiaA6YyUUgRO2lEWg1DXBIVwZMuvlqeo/Ltx5Q3HkJ/WZX+gz
jYoz9xVn76vO31Odb6TPgXFfef4efe6O6swvqtM/0Ce+KHj9/NyNO8YXFgQk
TLD195TaW5FiCsMpoC1xQigUCgQiX7+A8zW1n39+5e5d6NP1wC5EquEFbikv
XLzo5x9AkBQrnyCpSIIwF4hCzdzlYXNOJK//36WvfFd46GfZsfvK0zpNDaNu
YFT1LexgVFq9Ad5vaFZrdRoto65jlDWN8rM3i098Kzv030v2vDKtNN0n3kds
a0UIKYJk5SFOUSInZ1dXN89XX3vd2BcDYYBx8eK7QcH+GAm1IEkIhDghxahw
C/fSyLknU9Z/nv/qz/QZyCVNPaPWtqjqdHqjhRt022B/1f8T5Ju6ntFcBC9u
yo7/OfvlN2avyg2eHiBxEsEm7jjBMhlwzMnFZc9Le5i+2V0IQxNQUrHCaveL
e9LSM7mQAkHgAgIXYViklefKUWnnkp76e+7rjarTLUBGAc4oHzKH6Tha9EbX
f6Lrmmmtjq4Doux+mfaW6uT/LNl7alY5HTLbV2hLAilJkQL2gRQeXp4v7N71
cJIIwwrtS7bv5Ve9vH3bQwoERjpgZineMS9PLb2a9wYUNfQFRqEFpGrWF1D9
HBzBdOpa+JrWtgCOAaUJ5VjtX/Je3RybP9o+iPUWMFIA/Ud3T48X9+zhTRVh
6KN9sd44cNDNzRNGEighhhMijAi2dNeEJH+YWXWHPgf5oKjR0bWMoqFF1aAD
So2uYToJpb6PFnVNiwqwS8so61toMLQt8hpdad01+bHXpy6f7RFjR0IXkqQg
u4BmfO31/bwJIwxlcMsEdOE7R484OjkR7ANrYCSTEsY5B1fFFlwtOnhPU6cD
uk9ZC/UXZz4p2wY9oEMJTlTbrDr/s/K4NuO5dO9J1qQUUh1qRtzOweGNgwfu
3r3L9FhrYewritABhw6/bedoD+x1EtjPJGmJm83zHFeXse06fZqB7t5Fhn53
EEcDo9TeUZ39eOHuLJ94c1yEsx4qmJ6tvd2HH31o7KuF0Du4e3z/gTccnZ1g
xJLAMQFYRDLBI+rt1LVfK966SZ+4qTj+PX38mur4dfDTAOM6OLLqhN44foM+
ektx5CZ99BvFoYPJq2Pdw2CeSADD/iKJ+NiJ4/fv37/1ww8//vhT53H79o93
7twx9nV90sG587/Z94qbhztrtMMEIA6IhRFuUvsJLsEzPMIT3cITXaOmu4+a
4R7VPqa7R053e9ThrjfcIme4tw79z8xwj5jhNpJ9PyrGJdTBzI7CcBiQIAkB
JQgND4ubGD8hNm5CbDxvxMVPihkzbtHibEAwBplkxkC7TbJv3z4vLy9ozICF
IwCxgNhqjSgNKbCzAqzv09S8vf3+85//MIhag472C75//35un4KAhGEkmG5m
FxHjVlFvITlLp33tYMbnkQBMOXYIwIC/ER0OixNs2L/DWWDslJ0axiXB8R5P
LWAjFUHBod99/z2DqDW4aL/aBw++6ebmhrX6g7ilyCbSwd+CkoIV5CLhYJns
HG2Cwn2Dw/3MrKSWthYjgt1DI319/N0oSoC3A+vb6EbgmFuIA8N9/MO8Le3M
MVJgZWfjF+wRHOXnG+gpFAs4LnE/8HbCd4O274IFBoV+9x2ilhFw927jm28e
cnB0xNicIFgSM0I6z2fSrhklXhJHdjXhokvNpGMnjlyzSbHuGZVXoHPomCB6
Tc6Gak1hyULwp4eiBufWv6c159ZdJBLZ2ds6Otk6OFnbO1pJpELwpn+wx7pn
6RUbC0JHjcAoLHx0GL0yp7JarViRbWFj1nZo7jw9kauVhOzM/UYE/IdNVSNq
DRo4u/39Dz60s3fESQooGyAXpDiV4B5Zm7r5k6V7pzmOdBfbWFMSyDdz4ejY
0OUbi1ZvVoRE+kRPDJetzV67TVFUlmnvYSO2FInEVKtl1hOlcK4EEKy4u7fb
wqKUgpLMXFV6jmJeUNgI8OaIYI/VTyuWPVUYFRsktRdHT4yUr8pdt1WpWLnY
2ctOYi6ixASroEkoTTuq687sMjc3t7axGz8h7vr1Gwyi1iCCo9bxEycpSgyN
HIoUYoJJTuFHEtf8pDjeqDj9t9yXP8rfnewfC5aJEuLe/q6pixIX5CXnyjOy
lemZRcnpebMWFMxeopqXo8qMGh8mNRd3L7Pa7Tbo3YGPBYf7r35GUb5VseY5
RcVWRcyEcPCmi4dD2pLZmXlzFhQk5yjTs5UZWcUpGXmzs/KT8uj0AjrDL9CD
PUUv1CLYbGNaWtonf/rz51f+19hX+skCV9leU1MXFh5JUSIKxymMHGsT+FrC
8h8UJ3SqWobWMuqLzPIGWdgc1m7BxVKhg7Ods5d9Lp0OxNfkWePsXC1DY/yW
bS7csF2TnDXN0dWhW2q1qrKH1AqNHAEYVVElK6+Sr6+Wj44LAW+KpSJ7Z1vP
Ec4FZVlAD5ZtWJqQPN7B1To40rtsQ37ldnXEKNiOGFjo3VKrzbYHH5PL5ca+
zE8cOF6dPXc+MiqaM5GEOB5l47Vnsur7oqM6jVanqmmByUHtnbLzeQEJkFqw
tBimV4DWTF+auPrZ4nFxUeB9R0/bkg0FFVvpjOyZ7p6O7dTqxLFWUwyApOC6
B4Z7rtsqW1ctWwOppeCoxRaDYWIzaqkmc8N25fKNeXHTxoB37F0tVGtz1lUp
w6IC+FKrKwpzvmFxcTGDym8GEZzJUVOrjY6KAddfKCBEGB5o5rw9rvDbwsNN
JRdgxrmt0OVeSd1biWtH2fm3hR0IUkIsLpq3crNyQkKUmRUVGOW7arNi485l
gG++gW5ic4qgSKytwOohrVrNsFZr39rZas7ChPJtyrXVinVVRZXVdNT4AI58
nJ9YWLbw6V0ryzYUxieONbeR+od7rdgk37SrNGZiKDiFxEyKPTz+Q3a1We+t
IYvc3DxjX+wnBe1WbMOFi2HhIzG2ikCAET5Sp/XRmV/JDrZo6ptpvVoXuo6R
1TetaHh7Tvlcj7FxrqESoDbFeOzMsUuU6ckLEybNjklMS8hYmpRZkJSRPydx
/qTY6TEjQnxhZTsbgtJbfZaZAtzD29UnxD1p4dTKHaXrqhVrq+TrqovXVykT
02N9QlxcvRwAZ8Qi0bTk+KzCFGDnpyyZMXn2mJlpk9JykxbkpyTOi50ya3xw
RAAbXOvSpIOiLzJq1MRJU3bseMGYl/vJwwcffjTCP4gL+wAp5CN0Wh6W/lXB
gWZYS1zHwLKWhzVUD9QNLbS2UXn2l+Xnahc+4y60AYtHCbDRE8MVaxet20YX
li2xsDMjJFhazpzyrSXlWzWZS1MpIWsL4foKCypToZjMzp+3fpt67XPF66qA
NiwGChG8qKhWrnkOvFCk5c4mhSRwVQViEhNiIycEy1dnr6uiZSsXWztZYCSW
mjVl087lczKnsYnzrqlFCcWHDh1u7s8WM4THx3vvXfIbEYAD8QH3NGC2lHmR
f+KVnNebgICiL8AaPFg09bD+U6eubVLXgcGUvXd5QbWzyJaLH0RPCFeuW1i5
my5cvlhqYQbemp+dtP6F0vU7VFkFKQIRoJaA25bRFnQAxg8JqJVbnLxxl2pt
VRFkFBRZgFHyciC+qmWVL9IZhbMJEcsZGIrHwscEK9dmb9ilUq7NsbS3AO+k
Zk3e8pvlyYsSOttZ7TEvASU6/M5RBllZgwLOvqrTNgQGBVHsihMEbiYQZQdM
/mTJ7gdcXV/Hmk99gjUD66v04u8W7PCnHIWYmMCJqNhIxarc9dtKCzSLzc3N
weHmL05aX6UC9vyCvGQKyByMbKUWp6TgT0JoTi6Rz63cqSrfBhmlP9ZuK67c
pcgsmENKWNazWZ6RMWHKFUs2VKkUK5ZY2ZmD4yRnTX3mhZWpmQmsPdVBWLU7
hiKx9B1ErUEBx6szZ85x9hXnQUkxQdaI+A8WPX9ffbqZqxzuqo69nWmMuv5G
4ZGzSRv2Jq2MsvcztzYbEewVMtLPx9+doiAVXL1cgyJ9gyP9PHxdoLZqTfe1
KSkKWFkuSRlTl2/Kq4Cmu7zzWL9DWbIhb0Fe0tz0qbasjLKxs/YL8gDH9A30
oEQwa+Ps4RQW5e/mYfdQHXZMHllZWT29+Rm0UXpw0NTUBH5u3VbFpgJhmleC
Ced7jL0479n7mtOM4pyuo7DqvoK9nim78NOKmrk+Hbqgs4ljsuM7rQnidmqJ
xILImOCVm2SVO5SdRVbbUFZUKTbvLluzudjFw7bdYdQ7C96esOZlottFlpOz
85df/oNpC7AgGA6cUvjDH/44e3YSFxMQEtQUl4iauZWN9Gm404FmR4/UYv+k
fQBeKGpv0qdnuEVjfUYrtSSiyLHBJevz1m9X9ECtdduKgQFW9lT+iCAPWNeD
Q1ezj1U9HLUsLS1Xrmp9NBLK7Bgan/3lfyZPmYKxLiFQXcGW7gdnrfxRdoJR
afu4B4djXRPcv1P7s+rk+qiFU5zDWosA3SNnuo0EYwb7c6ZbJBzukYnukQnu
Uc5SB07OiM1Eo+PCyirz12/vXmpVy8pZb3H504VR40KEEooTes5Su6luUVM9
Rs10i0rkjs8OrpJwBqwVjAqw9CQwknNKCZI6cvQYg2wtA+PK//49Nj4O56qw
MMxVZFMRlfmv/ANwIyrdwVbvlV2MUstAn/HcLfWJ7/WrjpWn2HGSHexr+tRN
+tTX8oNpvnGsQMEk5uKxkyKWPVVQ0RO1itupFT7aXyCC+o/CyQU+cV/L37ip
PHFNeeI6e/C2s7AFz2BoTm6KX2qOScCXBDwWCsXIQzQcOF1w/caNCbHx0Eph
ww3gssfbh/x5yUv3Ndomdf82CcLwqZJ9oQCv6ztsi2A32ncc4AMNN4qPZvhA
apE4JjETj5nIUqu6J2qtq5IBsVa2KT8o0kcAXVlMSgoLAmb8ojzBKC/yz8Wd
Xfkuo7l0NrEi2tpXQML8DiUUHz9xkkHUMgy4q/qvb77x9PLB2EJ3sEyuUuvy
6AU/FJ/QlbzbBHsv9HcXaq1OpW1RNDSpLuj0tnTpOo1mdp/XTcWxRb7x0Nwi
SLEUKMRQViHSQDT1oBDBB5ZtKvANdQeegQDDbYVm6vCUW6rjLWoYA9E/S+vZ
lbVAs3+WtWtp4FRLXAgjaJTo6NHjDKKWwfDPf/0rLSPdwsoSLi7bUGisQ0BN
yqY7ypNgLVqUsMXHI2121rKDt0FVv1uIltsEfUd9VhY8m4T+Ii4UUSFRI9QV
Oet2yrulFjDjq4qB1Cp9qtgzwJ1N5RBuYtvVozJ/pMGcG1rY5GbbWdpVOXzz
puzY1vg8S1hxBrxg4Zix42u19Qyy5A2AL//x5cLFi7iiO7C0QCcJMCLNe8LX
RQd0yrOsV9hvanXXw6GbD2sbNefXjFpgIzQHmpggcHc/R7o8G1KrBw+xlVoy
dz9XNtxKeEkcNsQs/Ik+1U6tLk4Hvk5p/Ynk9b4iezbcCgn2zJbnGCS4DICj
x49xworb8AUWyZ6wWBU+/xfVaUZZwxrw9f1SiP0dgFr31DVbYwu9pQ5cGYSt
i6Vs1eJ1O3oMPlQVV1QrVBX5Ll6O3E3hK3V6fnzuL/TpFnWDrntqMZqGTzJ3
p3qNF8MmOtBh2fUibAqBolsDjo2bNkElyDUMZVc21Mpr32T1XdV5YJBDk8nw
1Lqvrt2XUBJu7clFOS3tpEs16WvZfHS31ALm1jZZXukCB2cbNmCKh1h7vDhJ
/mv31GK4Nibqhm+Xvl0xNtuGMuO6pRYUFX/L7hFDGFhIzczwtnJ0nFWLszyi
Pkp7Hq6O+qGlZFBqNalrzsxaH+cUwsU8za0kGXlJa7Z0xys5dA+rZaueLUpd
kmhra8UFQuMcQ04kVd5VnQFuaQvsW8JX4m15KO0d2cm3pq9wEtlyETxwT6lK
NMZeBxMEppe7xWD3IKwgZNq3skMwhtBGLcPxihsP6JoP52+b7RnDUUtqIZ45
f+LyTfnd5RABtTZsl5c9lTdh+mgzcwn3v+Z5jfss5zdNMIFeDzsjdUMteMto
6i5mPucjccbatokVFBUaex1MEG3ldyy1CFyKkeWjFzSW1DL0wFOom6Ftpuv+
umjvYv/J3K4tsblw4qyYkg05gFrl3QQfKncq6fIcnzBPAQWTnUKMVAXNgu6h
sqZJXdes7iJg0laboWVKGz7J3j3aegRsKs4mfYrYAmaEgQWnDMnWpg24M2Xx
fGxBc2nDIFKrTqes/77oMB2exJVtiaRUdHwwXb4I5nq6MrfKq4o3bFcWLltg
7WqFselmJ6H182Nzm+EdUdOshlEsRo9OfGppGv6W85tZ7qPFsGU9S62iImOv
gwkCrIyQEJiLpAIC9prxENnujJfrSusZmr80hhicaQ2oBcytp8YsMWOze6SQ
9AhwLSxbVLlTBSsAudFBainWPle4IG+2mRVs0UZhRLRtwDtTV7ORq97sQyWg
1oWvCvYXhyRaC6Vc1CW/ECnEgQeGk+ak2MXcVkjCALU7S62WQaQWu9z1TGn9
3qkab7EDJ0akVqIF+SkV1XT5NjmPWkBFAkVZuiFnSmIMkG8ctVK9Y3+btr2l
L5IWnEvd8J/iQ09PyHGVWnPFODIF2iw28JCSEn9zZ38LZzEpaqfWoEmt1kFr
W0q07857NtE9WsjmAwRCImF2bOlT+euqaLY2vkiPWsCGp+XLF4ZH+wuFMOYJ
9PiyiPnfFxxuV+LdTZthz8WoGn6QHXttaukIM3vOu5ybPPfrq/809lKYGvyt
3NKD48MtPESkBGiHwacWqxPrdeq6f+e/sTo6DUyChO3fieAI37zSzPXbNeU8
am2TVW5X5SrTnD3sBGxETowJt40rgDGrPsxZB1NL9XcVp2tTN4dZuGCtm0rw
lNT5d9iOlAgDhXiX0G1TFFFW3hQJ28i4i2x2TCzWlWkHVSHSDYyi/p7m/KtT
y5wwCxwXAK/C2lo6f0ni+uqStVUdYqeAWhVVyvTc2RILinVqqSAz1wPTlwMl
3qLs0+nAV3ugPPNB5tYIK9h6juumGz9x8k8//cygZOLAIT9w6rlFz4+z9acI
2C3LXWy7fVKxrlTL9LZMAzlowIp6wI0L6c9PdAoTEtDqA6Jk3MSRqvI8Nq3T
wUNctrFgalIsUJqAEkJcOMd99MX5W4BK7dXWekgt+syHC7ZFWLPUYjdQJ0yd
/vPPvzCIWgOHlyYU/T7npUl2wULYOBK3Jc02js+9X1LLtk3upVx5wAQXTIJr
GbX2q7w3KkZn2eESGIQgCEcn65SF0yuqNeXbHsZON+yg8zSZARG+bPkPfJTG
8ojUr3JeY9R1/aYWK7UEFPQFxk+IQ9QaWFxO2/p59sspnmOksOU79LaUYcnX
ZUcBtQZHZLHUqmHru+oa6TO1KZVR5m7swxGBgsZGxYUt21S8FlJLxmnDtVvl
s9ImSyyFsD0gLnAWWr06vfQefYaha/pyLl0btd7PeJ6jFoCfn9/2HS+g4oeB
xa3iY9/kHwT2s6PIgq0gxpI8R/8hvbpZcb7z/W7YQdcxJQ3/WLpfEZxoK+Qe
S0c4eTql5M5cta1o3fbiimpgZSkUqxdFjgli/0hKSGqaa9THmTuZkouMsrZz
mLTz0LFZy7vyU+eSK4MtXLj4f3ExCj4MPO5r6u4UnzicuMrL3Im7hSNsPPdP
1txVnYcZXrqujxvEBkB2sYv+s+LkkZSKMHN3mHsiBBiJ+UV4Fq3MKt8KeCWr
2KpMypri6GINo18E6UhZPhub938Fh7garb6cgqPWbdmx/dOXjzB35PZ6FBXK
jL0OJohmWJ2u/duS34yxCYL930ncSiApC0u5pTkLM3GDRa2HgktVfzX/TVXA
HCfKks1BERILUUx8ROmGwvXb6GUb8iPHhbAbrDEKF4y3HPF+5ladBgZCW1Q1
PU/yIbXU9d/LjjwXV+whteOa1RQjahkALXL4DLjvCw4V+M6wI81hHhHD5nmO
/SL/4D26ZtCk1kPBRV9oktd8vHDHdOdwCuZ94BMF7B2tk7OmrdxYmJE709nT
gd21iDkKLVeEz/tnwRsMbMfUZ2oB9moavi58UxMBbAArjK0GLC5C1Bp46OgG
4JrdUhzbFaf0N3eGXj+GRduNOJlc8avypE6t1dH923bxuOyC9dJ1v9AnX51c
Fm4Dd4LAXjYU7unvml04P3p8sEDC9ojAsGArD23qM/flZ/t1fJ2yHhhmV/Je
y/SZJKXEXF2rrBhRa+DRDLej1t1Tnv54wc4JDsHs5mLcTmgtC0m8KjvA0LU6
5WCEIPQEC9DCtc30ua9lb62KzHAR2nBtJwUiMiDEl2sVAvSkJSla5Dvx64KD
QLv1SyrqlFDLX06virHyA26ogJVaObk5xl4HE0STur4ZqqHaa8VHsr0TpBgF
uz1gRICV26uzl/0qO86oOdN30KQWa3Epau9pav6Q+UKuz2QJzCjirc+vhvEu
yLRIK89DU5f9Ij/B1Sv2dbCBr1tFR/ZNVDgKLbhN+mHhYW8eesvY62CCAGZ8
Eyyc096lz+2bUhZp7U2yuzCkAmqma9TvM3Y00ed0vTlfAySvWrfHsqEnbZOq
/oGm7viMNaNsvUVsB0u2pw20uykMy/AefzVvv64PsSz947coaxlN/SfZLy32
myihKK6iZlt1FYMipQZA+8UHiu+a7PiKyHQb2LgKCglXgWX5qIX/zDnIBrph
3ekghCD0TwGM828KDj03LtdVaEFyHdhYMnhbOj4/ofCu8jz7MPT+zAp8i5L6
0ymVARausGEcu1msqno7gzaLGQJt1xwoiwca7aWMrfN8xpPQNcMEhCBI4nF4
xto79Bm4KEotTPYNXowLFsA8KKn9ZPGugsBpFpSUfcIANOCTfMb8dvELzUr2
GcH9O7L2+8LDT4/NtsLFONzzKCAFwhde2M0gahkA+ldep6pvVJ59PaEs2MJT
BNvDA8+fmuU66lTqxh9KT+no84MZ42rf73yPPls39+lYq0AJLgQqzEFg+dSY
RXCbpKKBofuzkQ2GHbQfZ1Sn+E4QwZJa2POhYn3ljRs3jL0Ipgl9QQEdf/rC
l/kHVo3OtCHNYGshEreipIkeMe8kr/2JPtqsPqdfdm7gTWTsM6Zh69SGa8XH
9sYrvWHwHEtwCT+X+hSs+VFegNU4fT+mEmrDVxJK3MT2JNtCTiiSnDx1mkEi
yzDoQC0gJZQ190trP8rYOdd1lAjazhhQjmaEcKpL6IGpmmvFh4FHCVPJ0LCv
MagEe3hk1q37uuCN/PBEZ8JqVVTGN0WHm6CC5hpB9036AdWpqPm/orc0I+fi
sM+TgCtdPnDgTQZRyzDouI41cDO+uvam7Pg7s9fGuoRTbH9jCicAzcZY+O6M
l39RcBA+PEUBN1Z3DkoMuChr9xzvKs9os7bSAUnHZ1Q0lTVwBQx8EvZ4hCZN
zdmkp6Y4hxM4ReCEuUQ8M3H2p5/9N4PcQ8OATy0asotR1/6gOPZO0vpZzqOs
CQkFGwYBDUIEiF02jc3+86Jdd+SndOqG9nCl4ZQjo8eNO+pzn2Xt/SbnTXDe
9oRgz9Rq/xOjrL2lOVU+eqG9wELAOoYONja///0fGCSyDIYuqAWDRTWM6vwv
spPvpT0/3zfOSiDhnqIkwAhnoUWGX9w7c9Z/VfD23eLTbETiYTtK+GtHY+zx
KdfGohpGUfNAWfNAP1fYW5X1wz8paj7L3pvsPYHNHOGkgAwJDf7rX//GIJFl
MPDkw0MysKnDn9WnPl6wfWngFDvSXICTJPtcXiuBWajUK8d3+uHE8m9kb99T
nIV5RmUD7LSgrG9RcgGB2rbxuOzSJxJvy2pfDC2W9toHirOvT18WYufFFQ75
Bwb89ne/M/a1N3F0q4YgW2qBrLijOvVZ9kuroxf4Ug7wUdME+wwBjLCmzCNs
vXOCph2ZueZm8RGdWtusYgdM09QDpunohmZVF209Hkct9p1UHf67WntDfkQW
MNOSEHORscjoKLTJwtDonlqs/wUcdli92fBF7v6dE4qnukWb4WLu4agCtkbC
khCNsQ8oDk6sjpOdTKr8fMm+u6rTzPKGllJgiV1oAQRja+zbBxebbaE7kKSP
PHk06QdbwynPfpC5NZ5NvpMUyUkt9CxgQ6O3RYQR+GbYc7L+x+Lj5+c+szIy
c4pTpDVpzuV2BWwTdrgVSOIQ7xK+NHDGpnG5B2auuJj+3Bc5r/6qOMWUXmDK
LjKlF+GLEjAaGE09a4drdfTj0qb3Afvt1N+SHds+Lt/XzJErV3b39Ni0+enG
xkZjX3sTR1/lA5tD1KnrriuPnUvaSIelxDgEWwu4Ehe2Yg8DfhdBYYQZJvSX
usxyH708PHXPROXxOetqUje9N/+532VU/ylr91+X7Psyd/83eW/dLjrepKlt
BkNtwPgYW/hX/13hobzAGTZCM4pNQc5Nmdf63ZHIMiR60D6dDPtartzlPn3u
O/rI+bmbCgNmRFt4O4ktJFxfQY5mOCbECSFGinGhGS6xJSWeYtsIa8945+AU
j3FArJVFplWMWbwnoeRPC3ffA2Ktz9ULj0Qt2GHyasHBmc6jBDBjCA2tlNT5
xr7qTwT6uEZ6blo998SBRsXpb4veqpv/zPKoedPdIwOkzi4CS2tSIsJJ6EYS
rU9aggYZgQkIXESQYoHQTCC2EZg5CK3sBZaL3GM/zX7pvrqXwuNHG23lypBa
fy/YP9aGfbCjgGSpNc/YV/2JQH8Xi3tCAWyaralrUdfdUZ75d8Fbn+e8Aoyr
vVNU8uBZsZYBboS1DSYxx0QSXAgfA4xTGBhQW3LdQzGuUCrY3O21hGW/yk73
r5yvv1JLXf/X3FdGWvqx3bxJJLUGDY+1cBzHgE1e0tCkOXdDcfQvua+8m7bt
0MzVT8dkZ/tPTXCNHGXr52/u6kBZizDYVoaCNj9bsoNh4y19zydtvCs/+6h9
6ftGLU3D5/mvRVix1GIjD+22FoJB0V8t8zDzoqcl4QoqzzGqGqa0jllW/0Bz
/ruCQ3/O2n0h5ZlTSRVvzlixb2rJ9njZpnFL1ozKVEek5AfNVIUm7k9Q/7vo
UDNtEIWoT62rhW/O9RgvJoFOhpROnpuKDPhBwMCtI1sLAWxyZQ37dB6gMbVM
CezJxpTVA761lGmB/f9j8Ylv897+++LX/pW3/676dAs0tAxZHc0GH64VvVMe
lekkteUU8fy0DGNf9ScDnZzBRxvc0xLbRBnLlrYH5cDeRAr2aVAKLaOsB46A
DhYew5070D1kzXgDjRY2FP+T7MT+hJIR1m5clmd0zNj3P/iwuRllpQ0LHXxU
0+CMOm40t74epPMCdt1Tnns/Y9t4+wDoJLK7w0aNGnWdLS5FmtGAgJWlJj2U
MFrytfzQXI+xsN8g+7i6iIiIa9evM4hahsQD1XnTHvdV5+9p6v5dclQWNsee
sBDgUGqNHDny2rVrDKKWIfHiREXPY3ePvz7+5w085HAC8ertE2VzfMfawE1n
BEet27dvM4hahkSwpXtQ2wi0dOtyBPXhM4/zeUOPEAuXAAsnJ6mVmKS4R1zZ
29uvWrXq5s1bDGKXwQCf8d028G5GXz7zOJ838GAjDjiXBYA/2WINzMrKGhUw
GxTGXvfBGHoPuII/OGo5OTn/8ZM/MYhaBgOXRW7NJXcDrOPoFf39vGGBtT3g
qm0qHLUcHR3/+MdPGEQthCcV4C4w9hQeBf8PGlDSYw==
       "], "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> 
         Association[
          "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
           DateObject[{2018, 9, 13, 13, 53, 6.8032932`8.585294160850474}, 
             "Instant", "Gregorian", -4.]]]], BaseStyle -> "Output"], "word"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.7463904926954813`*^9, 3.746390517239477*^9}, 
   3.7463905528524475`*^9},
 CellLabel->"Out[26]=",
 CellID->37960555,ExpressionUUID->"0c700566-3000-4a9e-a998-768b804966bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Deletable->False,
 CellTags->"Source & Additional Information",
 CellID->318391102,ExpressionUUID->"267208d6-9abd-491e-b57f-505d613eb382"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  TemplateBox[{"Contributed By",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Name of the person, people or organization that should be publicly \
credited with contributing the function.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoContributedBy"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "45aa8030-3eda-4505-ac47-377aabe92fa3"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Contributed By",
 CellID->757508554,ExpressionUUID->"31c04db3-bcb1-4ab4-83f2-b79898041982"],

Cell["Rick Hennigan", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.746383366122007*^9},
 CellTags->"TabNext",
 CellID->91771009,ExpressionUUID->"419cd336-9eb2-4365-a52a-49e7845068a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  TemplateBox[{"Keywords",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List relevant terms that should be used to include this resource in \
search results.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoKeywords"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "93ccabc8-c411-4b95-847d-e521983a9b9e"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Keywords",
 CellID->246422893,ExpressionUUID->"c70c0415-2ff2-44d3-9538-6037b499274c"],

Cell[CellGroupData[{

Cell["birds", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7463833746152287`*^9, 3.7463833766142144`*^9}},
 CellTags->"TabNext",
 CellID->14386224,ExpressionUUID->"bbe974ee-0936-41d7-981d-b26af756cde9"],

Cell["party bird", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7463833746152287`*^9, 3.7463833783031607`*^9}},
 CellID->370221383,ExpressionUUID->"eb97da38-2447-402d-abdb-96e10d1f70de"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  TemplateBox[{"Related Symbols",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List related Wolfram Language symbols. Include up to twenty \
documented, system-level symbols.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "0d897dcd-44f8-4ed2-8f86-dc0a43ebb563"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Symbols",
 CellID->911170439,ExpressionUUID->"3066a172-9441-4d33-aa09-175a783b6b93"],

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  TemplateBox[{"Related Resource Objects",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Names of published resource objects from any Wolfram repository that \
are related to this resource.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "6781239b-dd18-438b-9262-de001cf6f378"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Resource Objects",
 CellID->217060377,ExpressionUUID->"37ab175d-0b39-428d-9bf8-09a2e7a5413c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  TemplateBox[{"Source/Reference Citation",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Citation for original source of the function or its components. For \
example, original publication of an algorithm or public code repository.", 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, 
     CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "743c3513-b07d-4937-a12b-7772c5d8c8bf"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Source/Reference Citation",
 CellID->967310595,ExpressionUUID->"c9f6b352-fea5-4a86-9c1d-b83a7adb63ec"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->15357238,ExpressionUUID->"fb6f69f0-9e4e-4f76-86c9-c1ce7742a4e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  TemplateBox[{"Links",Cell[
     BoxData[
      FrameBox[
       Cell[
       "URLs or hyperlinks for external information related to the function.",
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoLinks"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "f4622946-8be5-47f8-b0e7-e595a5209979"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Links",
 CellID->593846556,ExpressionUUID->"627355a6-504d-4b89-a0cf-9880527975be"],

Cell[TextData[ButtonBox["Bird",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://en.wikipedia.org/wiki/Bird"], None},
 ButtonNote->"https://en.wikipedia.org/wiki/Bird"]], "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.746391115725008*^9, 3.74639112305079*^9}},
 CellTags->"TabNext",
 CellID->279316401,ExpressionUUID->"2130d5f7-dc04-44e0-a239-918be203615c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  TemplateBox[{"Tests",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Optional list of tests that can be used to verify that the function \
is working properly in any environment.\nTests can be specified as \
Input/Output cell pairs or as literal VerificationTest expressions if you \
need to specify options.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoTests"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "cc3e60b7-ee52-49cd-a511-489a10b6d986"]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Tests",
 CellID->16051757,ExpressionUUID->"8f70b857-c5b7-4080-be57-4168dd702d56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"1", "+", "1"}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->30698557,ExpressionUUID->"7bb5fadc-4d77-4da1-a427-eef8faf86070"],

Cell[BoxData[
 RowBox[{"MyFunction", "[", "2", "]"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->623803874,ExpressionUUID->"610c0ecc-63d8-4187-92dd-7fc26c6a82ae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Author Notes", "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Author Notes",
 CellID->795110225,ExpressionUUID->"80b9fc61-ae03-41fe-8e0f-009cf5850cd2"],

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  TemplateBox[{"Submission Notes",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "f2f59c92-277d-4fb7-b581-0fdc45152867"]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Submission Notes",
 CellID->843283583,ExpressionUUID->"e954cab1-c576-4727-8660-eaec1da22342"]
}, Open  ]]
},
WindowSize->{775, 872},
WindowMargins->{{Automatic, 532}, {Automatic, 54}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.022222222222222223`], {
               FaceForm[{
                 RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {0.,
                 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 
                45.}, {45., 34.926}, {45., 22.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                 "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                 27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                 26.308999999999997`}, {21.375, 26.258000000000003`}, {21.375,
                  24.219}, {21.375, 17.535000000000004`}, {21.375, 15.602}, {
                 21.426, 15.547}, {23.828, 15.315999999999999`}, {23.828, 
                 14.242}}, {{24.578, 18.75}, {24.578, 23.078000000000003`}, {
                 24.578, 23.539}, {24.953, 23.914}, {25.418, 23.91}, {29.746, 
                 23.91}, {30.203, 23.91}, {30.578, 23.539}, {30.578, 
                 23.078000000000003`}, {30.578, 18.75}, {30.581999999999997`, 
                 18.288999999999998`}, {30.207, 17.91}, {29.746, 17.91}, {
                 25.418, 17.91}, {24.953, 17.906}, {24.574, 18.285}, {24.578, 
                 18.75}}, {{31.328, 14.242}, {31.328, 15.315999999999999`}, {
                 33.684, 15.539000000000001`}, {33.789, 15.602}, {33.789, 
                 17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                 26.281}, {31.328, 26.512000000000004`}, {31.328, 27.586}, {
                 36.113, 27.586}, {36.113, 14.234000000000002`}}}]}}, {
             Background -> RGBColor[0.988235, 0.419608, 0.203922], 
              AspectRatio -> Automatic, ImageSize -> {45., 45.}, 
              PlotRange -> {{0., 45.}, {0., 45.}}}], 
            StyleBox[
            "\"Function Resource Definition Notebook\"", FontFamily -> 
             "Source Sans Pro", FontWeight -> Bold, FontSize -> 22, FontColor -> 
             GrayLevel[1], StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
        "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
        "\[SpanFromLeft]", "\[SpanFromLeft]", 
        ItemBox[
         TemplateBox[{
           StyleBox[
           "\"Function Repository \[RightGuillemet]\"", "Text", FontColor -> 
            GrayLevel[1], StripOnInput -> False], 
           "https://resources.wolframcloud.com/FunctionRepository/"}, 
          "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
         False]}, {
        ButtonBox[
         TemplateBox[{
           StyleBox[
           "\"Open Sample Notebook\"", "Text", FontFamily -> 
            "Source Sans Pro SemiBold", FontWeight -> "SemiBold", FontSize -> 
            13, FontColor -> GrayLevel[1], StripOnInput -> False], 
           "\"View a completed sample definition notebook\""}, 
          "PrettyTooltipTemplate"], 
         ButtonFunction :> (Symbol["System`ResourceFunction"]; 
          FunctionResource`DefinitionNotebook`Private`showProgress[
            
            FunctionResource`DefinitionNotebook`Private`viewExampleNotebook[]]\
), FrameMargins -> {{1, 1}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
           "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
         Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
         "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], 
        ButtonBox[
         TemplateBox[{
           StyleBox[
           "\"Style Guidelines\"", "Text", FontFamily -> 
            "Source Sans Pro SemiBold", FontWeight -> "SemiBold", FontSize -> 
            13, FontColor -> GrayLevel[1], StripOnInput -> False], 
           "\"Coming soon\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (Symbol["System`ResourceFunction"]; 
          FunctionResource`DefinitionNotebook`Private`showProgress[
            MessageDialog["Coming soon."]]), FrameMargins -> {{1, 1}, {0, 0}},
          Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
           "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
         Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
         "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], 
        TagBox[
         GridBox[{{"\"\"", "\"\""}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxDividers -> {
           "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
          FrameStyle -> RGBColor[0.994118, 0.709804, 0.601961]], "Grid"], 
        ActionMenuBox[
         ButtonBox[
          StyleBox[
          "\"Preview \[DownPointer]\"", "Text", FontFamily -> 
           "Source Sans Pro SemiBold", FontWeight -> "SemiBold", FontSize -> 
           13, FontColor -> GrayLevel[1], StripOnInput -> False], 
          ButtonFunction :> (Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`showProgress[Null]), 
          FrameMargins -> {{1, 1}, {0, 0}}, 
          Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
            "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
          Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
          "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], {
         "\"In a notebook\"" :> (Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`getResource[
             ButtonNotebook[], "Preview"]), 
          "\"On the cloud\"" :> (Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`getResource[
             ButtonNotebook[], "Cloud"])}, Appearance -> None, Method -> 
         "Queued"], 
        ActionMenuBox[
         ButtonBox[
          StyleBox[
          "\"Deploy \[DownPointer]\"", "Text", FontFamily -> 
           "Source Sans Pro SemiBold", FontWeight -> "SemiBold", FontSize -> 
           13, FontColor -> GrayLevel[1], StripOnInput -> False], 
          ButtonFunction :> (Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`showProgress[Null]), 
          FrameMargins -> {{1, 1}, {0, 0}}, 
          Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
            "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
          Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
          "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], {
         "\"Locally on this computer\"" :> (Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`getResource[
             ButtonNotebook[], "Local"]), 
          "\"For my cloud account\"" :> (Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`getResource[
             ButtonNotebook[], "Cloud"]), 
          "\"Publicly in the cloud\"" :> (Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`getResource[
             ButtonNotebook[], "CloudPublic"]), 
          "\"In this session only (without documentation)\"" :> (
           Symbol["System`ResourceFunction"]; 
           FunctionResource`DefinitionNotebook`Private`getResource[
             ButtonNotebook[], "KernelSession"])}, Appearance -> None, Method -> 
         "Queued"], 
        ItemBox[
         StyleBox[
          DynamicBox[
           ToBoxes[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
            StandardForm]], "Text", 
          GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
         False], 
        ButtonBox[
         TemplateBox[{
           StyleBox[
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.06349206349206349], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                   FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                   FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                 ImageSize -> 18, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                 AspectRatio -> Automatic], "\"Submit to Repository\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.25}, 
                "Rows" -> {{0}}}], "Grid"], "Text", FontFamily -> 
            "Source Sans Pro SemiBold", FontWeight -> "SemiBold", FontSize -> 
            13, FontColor -> GrayLevel[1], StripOnInput -> False], 
           "\"Submit your function to the Wolfram Function Repository\""}, 
          "PrettyTooltipTemplate"], 
         ButtonFunction :> (Symbol["System`ResourceFunction"]; 
          FunctionResource`DefinitionNotebook`Private`showProgress[
            FunctionResource`DefinitionNotebook`Private`submitRepository[
             ButtonNotebook[]]]), FrameMargins -> {{1, 1}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
           "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
         Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
         "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
          RGBColor[0.988235, 0.419608, 0.203922], 
          RGBColor[0.921569, 0.341176, 0.105882]}}, 
      GridBoxFrame -> {
       "Columns" -> False, 
        "RowsIndexed" -> {
         1 -> RGBColor[0.988235, 0.419608, 0.203922], 2 -> 
          RGBColor[0.921569, 0.341176, 0.105882]}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "RowsIndexed" -> {1 -> 6, 2 -> 4}}, 
      GridBoxSpacings -> {"Columns" -> {5, {}, 5}, "Rows" -> {{Automatic}}}, 
      FrameStyle -> RGBColor[0.988235, 0.419608, 0.203922]], "Grid"]], 
   "DockedCell", CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False -> GridBox[{{
               OpenerBox[
                Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                Automatic, AutoAction -> False, ContinuousAction -> False], 
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   TagBox[
                    GridBox[{{"\"ResourceFunction:\"", 
                    TemplateBox[{
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "761cdf8c-4d6d-4080-9d07-eca16d6e8898", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "Version" -> None, "Keywords" -> {"birds", "party bird"}, 
                    "ContributorInformation" -> 
                    Association["ContributedBy" -> "Rick Hennigan"], 
                    "Documentation" -> Association["Usage" -> {
                    Association["Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"BirdSay\"", "ResourceFunctionName"], "]"}], 
                    "ResourceFunctionHandle"], "[", 
                    StyleBox["thing", "TI"], "]"}]], "Description" -> 
                    TextData[{"ask a bird to say ", 
                    Cell[
                    BoxData[
                    StyleBox["thing", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], "."}]]}, "Notes" -> {
                    Cell[
                    "Some birds can say words.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.746383232110336*^9}}, CellTags -> "TabNext", CellID -> 
                    533233984], 
                    Cell[
                    "This bird can say anything.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.746390791274925*^9, 
                    3.7463907912759266`*^9}}, CellID -> 181442125], 
                    Cell[
                    TextData[{"Look at this bird: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Wi4ppaJcJJIKeSGXY7IOwDI2bKzTtgE/s461vBSAn8G5kPOknUnDHFXUflXp
aUkzeg2jB9L1bqyWBSf3ZTIDudxQPj9cLALpeLVKVKtNkE1lrFIdAXAIwAuF
kWx22EkP2RZQQ+OGNanjbjqzWsajpefU9LzsLEhOQHBCWBXbK9gLvOXljQVO
n2O1WVZbgARtHuJ0L6v6IF7xMYqXlhdYCStRSgpAlBxOSaGk6I+zCzHGG6Hm
IHjbRT0M1MnEYCoxkkiNJ6kJmp1mCGcPJ8zz4gJoYxWVkKRHZIuSbU52SG4o
WV0vWEgJsLUrGaKyQ/ZYKwW9WtKrFbVchqWRHkKhBM5cxmHTuuBojKMzWRsl
ks9mVhYDjbqvUlpAKcw6M2lr3DQGdK3PVY9p9BGZvZbVZ5s9mXR/NjuYzw4V
8yNQpTReq0w26kT1+iRQ19+oVh0nJi+M5vOjucwIUKftYTs9gWrrZMn3E6zc
vJn1GFmflvNr2bCSiciZIPmQzg5Itl+0fIS26ReMoGiGJCsMyXZEtCOCEeL1
4NWqBjgtwGoRWgnRcpRSYyklgk1KCCZ5XytJ4pQH6U1QIz3iqIlDqeRkip6m
uFlAZoUFCIRdP/sIZy0mmSklLSoZFVJzBjgb5Yxdy6er2RZqwrmUtSolo1bV
6lW1VCXRUcxzuUKLM+cYrS97cHkH18VicXUp2Gz4kc8tzhl7Im2OWPqABbxa
v2X2g3A6PZBJDwJyPjdQyA2DXrk0AgEmkDYbU4vNaajprhAhX53ALaiWxkuF
8UJuLOdAE/nsTC7vyRXms/i7iv50wW8VfFY+aOSjQK1mIir5bC3e2ihOmMwL
5GFKzdBaltKzlJqmSGebTsh2HEEqWTHBjDM6lIBYI4k9aMPYcHWKm0/QkDdK
e2LUFHqPSGw4lhhN0FMpbo7h5znRK4gBiJe9ogzIAQkjhZ6UDAqcZUdBaLh+
TpuVLDg7tdynfjbLeaNa0Go1rdbQKhXi50JZKhSkXB7uFbKW2wqSKolUEcsl
5PNSw1ev+Mr5BcIhOwkgWXvEsQfT1gBWEM46Q3lnuJAdKuWHysUxhAMIQ+AJ
qkuLM9Dy0uzS0uzyomdl0bPUmF6sTzWqU7XyWLU4WSpMFHOTpfxMpThfLnrR
rpfLgUolmCsFMqVwphhJF+JWLm5mEmo27h6URbE30YcWWLPAG0XJKMpmyVVB
1HO8lmU0hybM0wnJTvJWijNpzqb4NM0YFGGuxEiACAtJ1oMMIeJm0ZaANryd
Yjw0t8CIPl4KiUqEeFgNSjLWqKQlAFk0OdGWxLQiObqSNfVCBlTT1aJdyRHB
yeWsUS2Z1arhclarVa1cU4oV+FbK5cBZzNlS3pIKWaS3Vikr1fLaSmC5GWxU
vdWSp1yYBZBidqzkjOadEeDNZYbz2ZFCZqQIG+eHqqVRoINXm7XJFmTghVaX
5taWPWvLC6tL8xtLC2tNz0p9eqk6Xa9M1svTjeJ0tThTK883qn6iWgBDaLUa
KlVC+XI0V4xmijEnn7TzCSOXMnJJM59yCnS6xDsVOV3VXZmQVTHMkmIVJZ3Q
ZvXMFW0JhC2qdYzGmixQc1qK0sKU7E+J3qQYBHPX4cEE56fZAMUFaD7ICCFO
ikhKHBL0mKwm4GRRT0kWL1iSaMtiWpMyaTWf1Yt5o1Kxq1UEBTKZxHKlCMh2
vWHVF40GtKzVFpVKTSxX3FLoSPm0XMrIFZLeyHClWtxYC60u+xfr3nrFUytN
VwqT5fxEJTdWzI62VMqPQLXCWL04vliZWKpOgiG03JxZWbwivLG6sLWysLns
XV/xbi4urC/Or9RnV2pTzdp0szq7WIY8zZpvqRFaaYSXm+HFRqRej9Rq0XIl
mi/F8iXypUuwdQpMJs9kS0K2Kjl11WmYmUbGqWedupOupdMV2ykbVlk1yjA2
b+Y40NYcVrYZwaaFNIcOgRxd2jyww9W0lqS1OKvGGY2FKDVBSbGUGKXFGC1G
GCkqKHFZTRLpKUVnVJOWTVYyRdFSCWTHlLNZOZ/XSmX41qzWXANXgQ5xodfr
dmMp3Vw2mysQOKvVJlAjJYAakwv6PXCG1XVSJfNrS/61peBK07tY8zQqM43S
RLM8CaS1wgTWltyL40uVMaBbbcysNWeh9cU5gAXe7VX/zppvbyOwsxbYWfFv
rfhwfaM5v97wrDbmoeXK3ErVs9bwrzYjq0vR1cX4SjO21IwBdbUaq5QTxUqi
UKELFT5b5RFy2YqSb5iFhp1fzOQWC7lGPtd0Mo20U7PSUFW3S7KVg6slIy9o
GVHOcOS7cI6IdpcMwhlFdGTe4TiLc4/lRc6WeEviDJ5WKcDnNJpTKE6J82pC
0pKKQckmLVk0egwSy5Yk2QSyknHkfAFC/Jq1plWrw8AQ2NqNFWtpzV5aSy+v
p5c27cUNo76q1Ze0BkGNrCDNXrWMxIDzjVJBLeVXF30rTf9awwsgK3W832eX
q5OLpcml8lRrhXCFEK5PrjVm1pdmNpY8EGCC8O56cG8jtL8ZhMh+Lbi7GsD1
rSUY27e+6F1v+vDLr7QYXl+Jry8nVxcTK834ciPWrCWaVapWYyo1oVyTS3W5
WLuCXFp0SovZ4lIhv5TPLebyzVy2nsk20pm6ka5qxNVFGVILopYX1LyqugcR
cimNYBTyJsoQSpiMFTmZNZC0SAPBYDmVBXBW53idgXBFNnnFEkiDYctQC7Ls
pJG0cr6klppqZQkYrfoyCFuLy+nlVeDNrGxn1nYyG7vO+o69umUvb1pLG+bi
ul5f0qtVNy5IYuiVvFHKuZy9S/X5tSUfcnVjyYdoXWtMgepKbYKwrc2u1qdx
Zb05uwEDL81ur3i2Vj2ujQE2vL8ZPdx+o83IwUb0YDUM2vsroZ2V0PZycHMp
tNkMbi76iZYi28uJzZXUxlJqbSlBXN1INBt0o8HVGlIF/6CmDpWW0uWlTHWl
UFrJg3NhuZBfKcDbhUVi7Cy0aKdBu27YFc2sqGZZx4CmVdJqyUEDplWKYiWv
lLNypUCGtXIW0zFQw+ScJYAwBNqCygkag5In2wLwqmlFdlQIdwSxLGdh5rxS
KGvlRaW6pDfWzMWN9Mo25KztZtf3oNzmUWbzJLN55mycOmuH9squtbxlNtZa
HQjMrJXhZPK3ywVnczUI1CB89a5fngdMFyzBu9Wc2V6c3V70bC55QHh3bX53
bYFo3b+3ETnYih1tJ493kyc7yZO91PFu/GgrfrgZO3aBH65F99YiREuRveUQ
0WpsdyW+u5LcWaE2lpNrzcRqk15a5JaaUmNRayxZCLzGcq62nKuv5Otrhcpa
sbRaKq1WiJaLxZUiIb+Sd/MEymWb2cyik14sQFa9ZDZKeqOiN+tqvQZJtTJS
1KzXpXKeVP+0LFgib3LwMK/SEDhLBuGMp0BYyWhyxpAzFmIZZlYKRTTGWrmh
VZeNxQ1reQcwnY3j3OZJfvM8u3We277Ibl/mdm5jxcP0+pG5ums115HVhHOp
pBRzIAyh/TjYCOOdDsKAc7geOFjz7q8u7C57oO2lmd2l2b0lz97Swv7y/OGq
92jNd7juIy/bDB5tRU924md71Pk+DWFD9jups+3k2WbiZDN+vHGlo7UEmB+s
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
//ITf/Rb3/zj3/y5P/uDf/Dnf/p7/+pPfuN/+91f+fbv/jIy5Ee+cIHK+EMX
pX92L/+r9blviD2/zLb/xfL07xltvxj823+Ymfrhuig55P/4aJWyWWu2OGe3
LvK790p7D6qHT+vHz6Hq8bP68dPaydP66Yvm+avF89dLFx8tIh/OPwHeyun/
x8RbR8d1YNnef3zzeqa7A8aYbZnZltmWLZbFzIzFzMzMTCoxM1tsyZKMkpll
ijGJw5zunpk3/Z2S0nmz1l533arIWfavdu2zT9W9cpUK7AiR03cudgN2AA6c
sbJanLKepG0hGTtJ5l6IDt/1KtQEMR0UJ6L5LsqS+vT7NXKL+v26REq4iBIu
pIZCPvCpIYBXSIsQUCP4lHAuKZSND/VBxgVwcIHI3ICoiGOQBrCLbd+yBt7+
8Gb3fRR/eBekKwQvmPbM0Z35aREB/tuO7/M7dmDjnm2f7N666sCOdbs3fwIL
8o5NK4NPHyYiU10a0oPZgaleN8y7GjPLribX2PnDHdb2cuF4m/WzF3Nvn8+9
nb/07vnsu5c3Pnt1c7BZO91fce18PQuVZJRi64WlLeTEAVxMRfiGttD1DzJ3
PMjdeyH04/uZe65gEkt8N7pmZ5aW+q7Px1DySbxiuqyUo0LwNBi+DivQYwU6
nECHh3PewolQTxBb8BInQeb20Ra7UAJ7Kd/q87zYBfJBlngxsgqsvBo4EzXN
REMH2dhDs5zjUeJ5lAQBLVHISBBSY0Q0n70BuNinyEWJqGeFlAgBORz6MPh2
UfBw4ZkwLjEcIDPwIUwMFAyfirJCIiNOwBSDWIYKsW/XemjOx/23QamDEIYY
OQx4D2w+dXAr5PD+7Wt3+S3fs2315g3Ltm5aAZaGF+Lwro05qSHj3RU/fPn4
x69f3p5qeHx98PHV4ae3x+9c7L06WjPZ64JYhriAdjF/a/CzT2+8eDz9xas7
w22mVo/4wrlqPjmLR8wt55e5EOETwhxn4mHXmTV9YavGI9ZMRm24lXfwOiaa
h8pLL87PKSvNRaFysZRCMruEKUFx1Ri+FoQTaHACFUAm8NQgEk9HFhiIYiNR
YiVIXXiZA4BjhDaIlxKexZcqQidG5EKLwe0+zlhFDUHdSNK3UczdNEs/lxzP
JSUCap+xaXFCYE6JFVCiQSJq1L8In128sJZDDIH4ZROCfRczEyGQw7mEMA4+
lIkNBvkgo06RECHQxE4e23Fkv+9Dtp07fV/xwzng3b75EzjCagY148Cu9UAY
3Lvw+c8nWzYu91u/fN+OtccObg47viPu1PZGB/+f//zbP3796qevXjy9NfLb
L+9/+eHdz1+9/vz1zQfXepvs/GaP6NZM6+3Lndcmm948m3356PKbZ9fuzY7U
mJndNRqHhkYpSjCyEDZc8jAztTnrZHnwhqaglX2BfxkOXzabuWcOHcVA5aUV
FeQgS/LR+AI8qYTCRjDFGJ4KKwTCYGANQagmCLREng81ka8iCdQkkZEsNpMl
NjzQFlswQosvW3hmMDZa6FjkjJF4ADVOWUtQQ3Q0kw3tVEsPm5TAJvhQ86mJ
XGo8l5rAJcfxyTF8cpSAFCUkR8ORT4wE03IIEWx8OAsXxsD7BCfwkI3zXa7P
wATRUGcoiAAozNkpx2DjCzyx+6j/tm1+K/fv3gBrBQAHux7cvcF3VUbgYbDx
qSNbg0/s2bV5FQTy3q2rgfmJ/ZuDD20LPbQlOfwItyTqs6eX/vnP//r737/7
5cc3f/v5qx++ev7d+/nv389//e7u7elGswTLIWZdHq+HdjEzUvPp/ekv3t1/
cHPg3txAnYXWYOdVmNkCfJaJhjBT8sfY8e15AZ7w9bVBq9pO/Xnw7IahnJMX
sKnCkozMovwCFDIXgykkkEvJTARTCJx9+SAy+AiLNCSRnizUkARKEl9BhqNY
SxYbKFIrWWIhia0EoRkrMC4mOVpgxfos7cQuWBqnqCKoakiaBoq+lWRsZxET
2YREDjEJUHPIiWxyHIcUyyPGcolRHEIklxCzeAJi48+ycBFMbDgdF07DhoHg
nIEByCF0dDAVGUhCnSSXnQ45tQNKBfQHiFnYNU4c3Q6Qt29d5bdxGaSH7xuN
netBpUkhmZEngo7uPQV74sFNQYc2Bx3ecvrw1tTIkzmRxzjouP/69cvv3s2/
fzb31dvZ797e/fn9o+8+v/9qfvraWO1Iq5lLzmThM66ONz2+MTLaZpkern79
6NLju8NjnbZqCx2Og21WkwBhZ+ZUSbEtqJDewlPesI2uoNUNAR92xWyvy42w
47IVuIIiREEeqrQAiy0iksooLCSDj+HKgTD4lijUUURaskRDFWtoYjVDqKAL
VXBOkeopMgsVUIvNBKERx9eDsDwDTmDBC61YkR1Q4yQegsxLUFQDaqKmgahv
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
BjbOjDpamBLCI+co2AiDgNBSqau1iqQshFJAFNLRAhoKJGZiJRwipEedS2GQ
kjH58Tnxp9u8SrMYpeXlDTaqOh20+5eaHlyo7fSymkwkIDzZotayspWUNDO3
1MLNMrDOGpjBZlaQiRVgYQWaOMFGlo8zhLOGFwN4tYIkje9G3UQYhXJapIIW
q2enejWl8L+aG616dWvkty8f/eP7R75B9s2jX9/N/fhq5tcvbv769vqPL85/
86jr52ejX95rezlpfztX/8WtpndXq356d/Xz2ap3VyuejBmuNPHeXvQ+n3aM
e9F3OgVPx42Ph+TPxowQzoAah/D5mVSWBOnh8zYSjA19L52CzfqDM4OYxyTl
g5lZ5CIWucBnZmrh2TP79+3fuXrtqqN7NuZH+8cF7EgM3pcZeRCm3pkDm8HD
4ORTu9emhe8jFUaxsJkydomMWQrhU2uX1NmEcj6KRy0Vc/FcKkLEROlEJJ2M
qZaw9HKORc2yKOkwl3OTArPjAqilCQ0m8mij8tHV1tsXqtudrCYb7UKHrkaH
d8nQGk6RSYCyS4qs3EAr+4yNGWhiBhs4gUZWiM/Y/HAD33cHjUYQr+TF+/oG
E2IkqUpX2lsjnR1yvbzT88vnN/7767v/+c29376+/dtn1797NvH988nvno7+
9GIK+sN3D/p+e3P1l+cj39zv+PJWw/f32r+arf7yRuODfuWTc5LHY6abrfzZ
Fm6bOrdBmt5nzOlX5054EBP2ksfDqifn1K+n7GDdxdBY5PzHOYQ2Cfk7ZzoB
NpS8RTEXRiGHXCxnofLTwo4c3r9m3drdfqtKk4LiT+9MC92fH38s/vTegN2b
Tu3fcHLfeugVqNwwCSNfxUWp+WVKbpmCjXZq2C4lFV4sGq4AJiCLUsohlZpk
jHKTwKBgq6VMo5JnkNMMEpyAnF+aESGmF/TUyy72e57eGro8VH6uTt5bI682
Uvn41Jz4MzRUolOJd0oyTJwgC+cMcLZwAsDPPsj8cAs/Qsc9q2SEgMDMFZrC
Li/t2jnry7kO8Orfv7gJwfv3r+5AGvwIdfezO4D3zdW2b+dHf3w99cvzsV9e
Xf7xyeCvL8f+9u7Kj/Ojzy84H49ob3aL54dNn067X132Pr5gbdXmDrvwPZbS
6XrWxUbWhRrKnV4xmPl6E+fNBefLGRfMR0iJxcSAI4QzOBmPSFkUCZ3xh5//
QO2bhpQCIbMUlRNz7NCuDZvW7tuzgZgfnRy0JyVoP/g29vSO0KPbgvy3nty1
Ji5ov4xXBrZ0mgReM1/KKpZw0TYtT85BoQuT8MgcJrmESSzmEotEHJxBybSr
hDopzahgOnUc6BsNNpFVhheTM9q8/JEu64U+d4ub1WQnNtsxlfoiEzcRn30i
Nsg/7OQBREaIgRnq5gWZOGcsvBALLwiOGnawihpg5EZ4VekjTcKb486nVxq+
fNgPPeGHJ70/Pp/49c2lb5+Offt85rtn4z+8mPju2di38xPfPhn59dX0T76f
Gf72weBns42vr5Tf7tc8GtbfHTVe65A+GLE+GrM9veB4PlU+26fsdhPPuYk9
LmKfgzBezRorp9zqFFxsoN3vV765XPXFneZnk7ZXl5z4snhfaCCT/lc+p+Cg
3aHSyL58zvoD9WI+w97NoRbCJh5+2n/9ulWwJrPQqYTskLzIQ8mhe6BpxJ7a
HXxoG3S2gzvX8mh5DgPbbRFWu6RGOQ4eqsQEERtJxBbk5yYW5yZyaAgeDcml
lcp4RJ2CZVJxDXIGyK5iNntlQ63GwTZ7U7m8pVJSa8K4BDEVkpgaWbSTH+Ji
B7m4gdXiYAUxPDroaNgp35ePGlqoWxxsZp/SMU4bWIE1ioyJZt7bWz3fzA//
9nrmb29nvnsw8P5RP/SEX15OAc8fXpz/6c30d/MD7+91gb6fH/rx6divn138
6l73/Ij5m4eDXz0aeHGp8tWNtheX697d6353q2mwHHdrQPFgTPv4vHKkjqwj
RQ070aPVdHL2qTYN0sNKmW0WvL9W8/Xt1hfT1vlx+8NR7WwzacSDBLy40oQ/
5iBEBxmRCuFMQqcDZzLGNwcBNR3n68+/74PkwrT4M/u2b0iJO63jo3LC/DPC
99KLImHXSw73P7Vv/e5NK9et+gBZGOdQknQSpElFN6oIRgXSqsRblFijAq1V
ULHo3Ky0aAELJ2AilVy8RkI3q3lWvRDiwqZmVlqFTdX6oQ5nb6OpwU6r1uTU
qmIa1XG18pgaSYxXEl4pCC0XhHh5gU5hYGlaUHp0QGZsUFZcMLMkyCOO6a2g
PJ6u/OrR4D8+u/Ht09HPbzZ986AXFmHI2++fQ2F48MtnV75+0PHjm4vfPjn3
w8uL//kVxMX466v190ddN3qU94YNr683vrnX+/CC9/55+8Mp64PzlgejhulG
zqALN1pD6jZmXahAW9iJQlSEnZeiwEUJkeEzFYxXM9Wf32h5dsFzvo4218lq
1hfqabEi9FluSfAiZ58Qv/t5oT+nQWiQURlwBPkiGpez+PkG9DFMQdzB3Rsy
EoPkQrSIkVMce5hcGIbJDo48vmPH+iXrV/515ZK/xEeetKvJBhnaKMcYlNDQ
sHYVyqnBlOsxXh3Ka8RphOi8rHixgCiT0NVyjkHLs2j4JiXLrGNXu7Qem6K9
TtFZQW6z5beYMloNCa2ahDp1fL0iulYWUS2JqBSfrRCHVEqCq2TBUlKkgV8C
NV6ITztfr35xueHnN9e+fHju6aTv/f7qSh30hJ9ejf32euibJ32wmv34YuSn
V+d/hux9Pf3zy/N/f33hxbWOPgv6dr/qfAXl/pjt5WzjiynHbJdo2I0adCPb
zcW18qx2U9H5SuLtPqFHmOgVJXqgDTLiMFmnaNmBgvzwSl7h/Hn3Z9cqIbrN
tGglNkJDjUKknSpOPpUZfrg4/hA4GVsSv4j6jwoNnImodOAMfl7MjX/15xw2
Lis6YH9mUjB0MzGjODc1GPbr6FM79m9bvvyDf1vy4Z+Wffyno/47VRKUWYkz
AWEVwabG2zU4p45QrsNW63FVRmytCVVhQGYlh6hEWIeJY9Fy7QauyyJzWlUe
p6LKKWt0ULoced22tC5rarslrc2Q3KKPb9bE1quiamSRNfKIGml4pTzcIw4u
5wdWSSJHa3jVKsSlXuM/3l3+7sWFd9cbnky43t9u+eFB5//95fFnc1WvZxxP
R/QP+wU3O/hXm+n3hzVQce/2Cue6pJNVtMlqzrPLtXdHzE8mnG9vNj+7aH96
wTJSjuvSZnWbix2MhApJxlg1ecBZVi9P11KiOMVBhQmHMPFHTZR0BzvrQoPo
waAaCPfbEUZ6amrInsK4gOL4o/mxx2FNy40OyEuJBsi/qyxhMah9obHA2Wfp
hQpNw2czcZlsXI6YVlSSHlqYFgoTTcoqLc6Nh1176Qd/WvvJh2uW/WXlkg9W
LvvrpnXLaLg0m5ZgkmGsKpzPyRpcuQ7v1eMqzYQaK6nGgq23otrdhJzkUDE1
s9uLbnagau3YGhvs2rhOF6LLVdxXntftye9x5nbZczttGa2WVLB0szahUZ3Q
oI6uUUZXS8+Wi8PqtcmjVaS5btWD8646ParTzYH59e2jc98+6vzqduOjMd3z
Yd2Li7X3+g2fzda/nPHe61O1a/OHvPjhcvStAc2nN1qfXm2D4fjubvOra547
I5q3c3WvZ+x3zinOOZBOeniFOMnBjKnXlth46QZWCjHzRH70fkJWQNyp7UUR
B19NOFts6MwzW9t1ZVPNdEr+qayzh7IjD+dEHSqMPlKUFJKXHFtSXIglMPFM
KaY45g/UUJ59FRqZSvxfnKkL+6DvV0eSCkglicXpEWJGKTRnNqVwx9aNH/31
39au/mDT6iVLP/y3VSs+/GTZn7MSA+0aglGKBT/blXgws0dHLjcQKo2EGjOp
1kKqt2AabOgeL5FUGospiDpXhe9wlHa5QIhed2F3eW6fp7jPXdjjzut15XS7
srscqV3mlHZDYqsutlkXV6eNq1ZENanj+uwFd4askLc/v7/xy7up++NOESr2
06vVn1+vnWvlDFnRTaKsMTf1Wof8yweDsFM8GlI+HDPf6FM9u1JxqUP+09sr
//yfb377/v6X99vf3aqBHfnhqPrxsGa2T94kz6wWJXXqi92CFDE2Ap8RiEk/
kxx8MPTYpsTA/cXR/rK8MxdqOA5JUfKZbSJMsltQiEw/CYtwWpg/bGe5qVHo
MgSOyCAzpWSujMiWo5gCbGE0oMaUxoMgOhbmoC83fv/8H5dFxS9+zp/FIeZA
qnBo+VAbpFxEZPCxjz/4P58s/4vf+uUrlvz7mk8+Xrb0g+P+W3yDT4Yxq7AW
Fd6pJti0OK9+ITFMxHrgbMU1ObCNVnRXBVGAT8pKDuquxLUCZ3sxqNtd0ucp
7fUW93mKAHWvJ7/LmdXtyIIAabWkt5qTGnSxtYqzQPjZpQpoDj+/mvr+5cTX
j4e+nh/++/tLg5XCsVr+/XHzbI/h/oDh+UzNk0nzXBtjflj3csr2csZzd0gL
nK+fk90eVr+62fBkxnNvRH2liXZ/yPBwSH2xnjxVQ+gy5pYLkttMRVxkRF7U
vvjTu5OC9qWHH4wL3h11ejsp/dSAtqxamJsd6R98YH1+7JncuJOxQbvOHvU7
e3J7RmwEqgRJ4cpIfDkQ9tmYxsfRBRgqB1cUgy+OJZTELZqZjEikIJPI6FQ6
ZuG7P2wam5DJJWfCssyn5App+QJqnpKDxBQlrl3+4YqP/wwpAaGxdOmfV69c
snblUvgjYGazHOtQYQGyS4N363AePdZrxFeZiGDmRhuh0YZrsGI7vAS7tCAh
4kirHdHpQnY6fHHR6y7yES4vWOCc2+XMGXDldlnSO6zpHab4Os3ZDms2+O3Z
dPWXTwa/ftz/5ZORL+50v7/b9+ZO+/yEBYx6pUvx7Gb7/EXPg3NKmIDvb7V9
Pdfy1c2md7Pel1crHo7qXt9q/PRa+Ww3+0avaNRZMuQsutLCudzEutzGHnIh
u0xFRkqEQ1koZGTEBG5NCt2ZGnoo8vTus/4bimOPAG0JOhqC98iOT04f2BAT
uDMhxD/l7Knk6EBEQRYWjWEKVAyBmsxWENlSgIxnCElsCZ4pItD5BIBcHEss
jQe8VFQyiI5JBVxsfBqXmCYkZ/DJGQJqhoSWLWPkwlonZxdJWAX+uzeBmcHD
m9cuW7n0P9YA6o/+T2zUcbuOaJaiHAoccIZkdmmxwBn8DKFRbcED5wYLGVC3
WDEdDkyjFRUdcswszustR3Y7SiA6ut1lA54ygHyuGuEVxFbSwvrtBUO16Ika
4sUO/tyg6tn1ts/u9b+50fTptZpn16pf3Ox497D99Y2qW/2yB6O6q1286TYu
ROVct+hqG/PxuPbBpPH941FY2eZH1M+nLNe7uLMd7GstvMlKwrC9pEGW0Wko
O+fBeiVJ5aI0IeIMszCIVhiuEpRkJZ1MCtkbdXJ76KHNp/asgu6aF3bg7JFN
u9ctObR9VdrZkwVpUQRkHotJF0p8V9/xJAaORE8WKEh8BY2nJHN9fqYLlECe
xldQ2EJCaQwJEUdB+DjT0UkMTDIXm8whpgBeESVTRsuW0rOlrFwFK0fFLlax
ioxiREpswEcf/QkSY+Paj1ct+wAEqLdvXKHkF9sUaKscAxXOoUYvmhmSucJA
Xghnoi+fbUQwc5MNA+ouJ0FuMMpiBiox7Y4y4NzjQfR7inpchX0VRZ3GktFy
ytUe+f1JK7zfL7cLr3Qpbw4ZppupN/uFV7sEd0dhQdPfG9PdOSe72sm+e05w
q4s9VU+61EyZa2ffH5B9/rj7zpAcfAt9bNSNHbCWtOny+5zIFmV2kyTdzkqU
4SIlqHAlMYpeFFCcdCwj8mBZdkReWlBs2N6gQxuDD/oF79sQfWxHccyJgN2r
Tu3dmBx5BlucxaCT1FqN2mCRG80SvZmrMnBkeqZYQxeqaSIdQ2Jgi3Vsie+C
XuAMGcIUKVlCObkshoGIoyLjWKgEJjaJT0wTENJEpAxoAjJGloKZqWTlaNh5
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
PYgd+hR+uen/Aslgbkw=
                    "], {{0, 150}, {120, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                    "], "RGB", "XYZ"], ImageResolution -> {434, 434}, 
                    Interleaving -> True, MetaInformation -> 
                    Association["Source" -> 
                    "http://en.wikipedia.org/wiki/File:Petroica_boodang_\
Meehan_Range_1_crop.jpg", "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset050/86e/\
86e5ac36df28e1906bb4d8332bd62260_v001s.jpg"]], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {57.99999999999938, Automatic}, 
                    ImageSizeRaw -> {120, 150}, 
                    PlotRange -> {{0, 120}, {0, 150}}]], ImageCache -> 
                    GraphicsData["CompressedBitmap", 
                    "eJw12nd0XNeBJvgCPe0zdttuW7LETIJEIgKRM6qAyjnnnAMq55xzRFWhk\
CMB\n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\n\
N2lY5nGOXc/zWcVCBoJJHvXpGCraILyvfs+bfy/moGYL1nLaMJXWzOd1XqvQ\n\
apRl4u6JTLCcC63NRbfXvWcq4vUEejUMXwpCV8LDcSPYKqMcy5u+eLj0x4+3\n\
/ss3t/7y7Y1/++LSn7+69n9+fvFPLy9+/e7ai8u5rx/MfXm3cn/DdeuY7elp\n\
z4VJcdmF88pgJRv95Xb2yenIXJDlV8JANSY+rGp2mngmNc2gpOiVNKOGadEC\n\
Zr7LJPTZJOixXuhwh4o2AhwK8J66rsY9PotgZSaSj+mTQf24gm1Q8/02ZSHh\n\
KsSd8xOB00uZYxXP1pJjY0K8HCfnLKNUZLeEOpg29xXdI+t5/v2zkV89Of7H\n\
z6785bcP//qHp//jj+//1988+Ldf3fznTy/866vtP3669dv31z67NflsK/zy\n\
ndT2nH45xjuRkH52Nfe7R9PfPQTO7ueXEt+bBSY11aD4vh5Mq45rNwgcRoHP\n\
JvWYRB1HGzuOHOQg2lnIDvDRg4Nt+5QceMQuzgR00yl7xK1xm+WpgGki4ZnM\n\
+uNupUaAXZv0fnj72M1TmXJI7jdwSgHBlB9edg1lbIMp23DWg6zE2RvTugcX\n\
cr96/9yfv333r//y6f/4w4f/7fdP/vLr+//+q+t//vzKd+/O/u7Rwq8fzrx3\n\
2n9rwXhtSvVwWf/1NaDPf/po8/tuCKtmAKyimseZNsCs57lMArdFGHYp9FLK\n\
wQM7Oxr3MuFtEmIvHtzS2/Q2eqBRQB6Ju5QnpiPpgB6I2m1WRDy6gEVsVVDW\n\
ys7t5cBHtxYfXiidKptmI6qSm1ewY4pucNE9mncjkm5MzImJ2lEpJ2E6Lj6/\n\
6H90benrDy//l9++9//9+eV//NOT/+c39//15dYfP9r4l49Pffdw9tPLqU8v\n\
xb68FgfVfPFO+vucRWY1zQSA1TSrlmnXc50GngfI2SLyWSUptwR4qv/J3/+w\n\
6eAv1bQhAaYH0dfY27hruGU3tPuQhk9I+nR+m9pllPossoxXsVayf3T3+KXV\n\
2Dvrkc8en7pzKrE975zxS8N8+LQVPeWDFb2ItBeb9hAyPmLGR0v72EkvN+Hh\n\
pf3SuYLz6pmZbz+9+x///OL//dOz//bdLaD5//bl9r+8PPenF5v/+vE6qOa3\n\
jxeqZrdVbNEyzCqaVUWzaZjA1ucy8t0mgccs9JhFUYe46GTW7v3Fz372o46m\n\
vWJct02M0nHhhJEjuMFGWM8h/FinjEeJ+/SrU6G72wv3L8/fvTD98PLi2YXA\n\
nXP5b19sf3J3eTmpdrPBKVL3tB5a8iMybnTChUt5iWk/OxUQpoLSZFAWC6mD\n\
AaPdbfH6PbMzpbvXz//us3v//Q/P/tc/P/3r7+799Z+e/sc/PQbV/Ps/3qia\n\
vVaJTccENmRgf6uatSyHgec0CgC5xyIEGu5U4NDg1h//+If7dv1CywKvxMQP\n\
1txJM40K68CDj0CO7uts3CPjoB/fWPv1F4+2N/IrE45n9za2j6feu7ny8f0T\n\
Xz49c3U1shCSp1iD07SOnBGSdCLiDmzMQ4v6BVG/NOqXRwPqSMgYiriD0Ygv\n\
mrCHk5Zg1pedKS8c37pw7sXT63/65r2//ftnoJr/9cfq50j/yW+XOw1sm45h\n\
1zJ22McZoB6HnuXQcRx6ttPAcho4JEQPAdq5862fv/mLn2LGOh8dd92ZVles\n\
eD6ms7Npb/eRvYNth/raan1m8cdPLn38+Pz51fj2ifzNs5NffrD9xbOLV9Yi\n\
l1dDpybdKz7JBKWzTGwKAW/HFlzYzYoEpGG/LOSVRwLj0bA9HA0EE8lgKhfM\n\
FHypsi05aYiUNf4JlTvlCKWnFpZBNZcvna/mHHDK3SauU89w6miOcYpNQ3Jo\n\
Kc5xsk1LsWvJHhOdRRgcaD/YUr9n986f//SnP570C56sW08m+REFlDRS396w\n\
iwztpMC60SPtZ1fTv/rk1mrZ49TQ372+8fDKwrPba7fPFh5cqGyvJU7NBKO8\n\
0ZmRXXHOgM1AcFnYPrfE55H63Qq/HwjZG4rHAtXX81QomfIk8s5E2ZaYNEfL\n\
Wn9O6YhJbTFQjcZffG12yVxGjtPAcOqpgNY+TnRqCE4NzqbGWtRYp45oHae0\n\
NOw6vP+Xh2vffuONv6cgu89OjOfsnHPzwYKdQ4fUowaPpB1Cu4q6NBlcLPs1\n\
QnzMKXp84/j7d4CGJJ5cm//i6Zkn1xZPLcbtzNHU0FtZRL1VhTfp2CaT0GYR\n\
u10ar9/hj4UDsUQgDpiTwXjSG8s44iVrvAI8Oev9Wa0vbQhOgGpsr98Hj/pc\n\
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"]]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.746391022179982*^9, 
                    3.7463910221810017`*^9}}, CellID -> 43597922], 
                    Cell[
                    TextData[{"Fact: this bird is way cooler: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
gvn/rq6u+Oe/Pp7+8y9X2Xx1S+fXeU1t+YWLkkPFh1cOHJT4G9mLajYmVOQz
xLmE4eCQBfhNv1esozHNcTatvuMQtyNGbREq6Dr93KOanf9mssJjCI0KEZ2D
kT8vlca+tlF8zFku2papC9N4LlPGfRQF739pM/L+NfJhbWVdVVAw/eQnn34+
1CQfzdZXLH48W1YuKXn37YXxffqY4jeKE+i5g6zdsWnAY/g5e5dYe9Dsehuy
I7yOpAhXcndjXtQ44jkU/T2i0Nc0P9SfIxz93UyoPRaBBDqHzTO6mDuRrhZq
Y+3o7iGYuiCd+NDfmw/yuWYzW7+SYsAnMhHZJRhKjcIUy8jgrLFHvFsk4j06
0P0j6Z637t/fTZyz6ltnTivA2pPiKbkosxJplVKpxoaNm4tZjq8F9oPN8Zm9
+94HBbE9ejB9wfxaXsfsprLF3KgknErbxGv9qhuIMRoNVtOhK+a1VdW5B1CR
uwvn9Dvqz6Pq9nCU6XZzlOv3cJQRLhCO52zGSJ/uooyQ7GoszNC5ZxgKFqZj
bpP5yEBoR3/y3QQuF0rSk2Po2sdzNqJCt4vuv6v2/jXtqtfW/F1YHDsZljIN
JAoWv0uq1GoN+VebS4gPaU3M0FT7XVZ2QfLZ50e7sjlGhVxRyWpo5bymX4JY
x/b4dOLzuEnxHoszWlRvo6+JU+hTK9bb1K8lYLWDh/8AJfz8C1nbMdrEB8v/
akg+OtXwsbIR9sMUkzC7PnVxGoIifaBQsmdlcwVKpPv3wxXiAbojYptub4fe
dJx9n/8O9g+YiygbX8jFHEwViz82v7pl96XLvzAb0mT5YPnzsvLz0v/758fj
23r78DUvbO6bceGmscXsqDG4lLUT1flvodJQ3PL6J5KNKnYdXQl+Z3VWt9Xi
sBi/IVSa6nQqdDsw3jdWlA/Sp2bER0eur9K4vuLxXyPkg51bsDid4nl3ivsk
UJDdtlNaIDdsKCoMO0h+D/Hcz+3tqKkXquLjqhifj12LyQHxsJIp2VxjFasR
f2XDpoMVFy8rmiMf5RfOSz7+9BPDqKSkm5bWVmJ9syDays5O/igcuhi/kt4w
8rpkUx1zCzm5xU3jryXWxx3Ctdx9yA4aCDnL7cmYf6VA+6h2yJs7CXPW5PC+
/mM+tKI9X5ElysfCbHj6u0MiSLjtcFfbY2bHJPys3y3WbDfCX6nI3o5lsWmw
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
D0s+yJ59lfIiIqx8RVtenw/b1sBHfXm5tf8Sf+cM2eXKvAP8vWhf0nMcGbkc
W8gPfiI6Gcl+8ejtGoEO9u3gb+FKcmBDeoz44esxpNxPE0xzFl2tfHCAbNS1
nP0Plw96HjZPHm7drh4fpK+Ij1Lig+2X37J9+R5Y+w1FpvfdHCBdRnpmCnFU
UEK2uRDn0rfgM7Lbbw5dgj2D5+LV/tOxvk8+VvXIJh8sma8vZ/skpAclwBCS
gFd656I0awvFLw/ZfuSLdSRDPbvCTK5m+9dyPhIGDLp0/MRpR+JD2lr5uIWD
vK6pWk+c6AoBrZiPY3MHyCcZmsL2wyrhXLF6+pvkG1zO2oXS1Nfx7YSXcSpt
A67liu/4+tPi+T8YX8x+sLVycyLHoI3GjtlAzkfikGEXz5VdkJ49d6FV6asG
wX3jmn68lScR9yqp844ilvvWMrB8QAn3E6pMaz14Po1x+hD9XQYWm/+SvQsb
yOfzs3Wv2TfW2KFjp9/37N2/5sTJUkfmY5W2YC/Rmnf0PSxU1cGt/x+qd6w1
gb3/853Ry9HV0b92jzBWOx3dqROOfflln7Lylr3LU9zz6BEaA5bfYXUDx3O2
YAjFSWyPF4VcfPdaWFhY5RfHjsa1dM985tM/QuPA35Wbfwil+duRHToYjoIl
f4cR4yM8PByfH+XvMGhR/uq5nlrUosetv5/t0TDqnX+X8x7U7x/0fe71u+di
c7kfOMinC2xVlnwOm/ERERGBr7/5pl9z5wVrEGTljkBCkAmB1u4IYLC6DaZj
9c697bsA6z9AS3/fWNRpb6B1w383eJ/G/M5abG+wpQv8rdrA2dwGarmidi9L
R0fH6oKCgrNHj33V61zZ+WbnFNn6AhlfoyqC7c0o5RAaRP1zGz7nbmjp7xsP
+W24T7+TSkW/Siaizv67lfb29jj85ltPVYh1cM2aHxTfgdYQ5H+Axp73oH7/
oO9z99/xOsfb9gCu4cPFxdX45pG3F7D3cjSXD7HeWIS0kWjq+ff79w8Tt7/3
ri4fzs4uID4WtoSP/wfjUt02
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJylkL1Lw0AYxh9bpaIVBR0cHCKIg1QUXQQXq0NRRCSt4NeSpEkqpGm4pEhx
dHDt4KLi4gf+B7qJ/4AgCOrkoM4OCiKIxOcaoSA6ecfd+8tz7/vm7unVS6oV
A+A3c1O19bQQWiXbwY8F11+zXTM/7QambYoxvYFiVeYiVnWMot84DBTdQKiZ
SWVxaVlJPCCBJsQxjiHN8L30/Pws/hxvN5ANcT0oe/2d9+tozZu+ATTIS48Z
ngjIE+S59cCTXCV3GQUtTz4ipwQvSL6Suh7xk2Q74nfJIqdO8W1JsmJHnJKs
RyzfohgFUSQ75L6iUza+7yNfkjTdhSxjT235UJHBJBToKGMNDgIMMrr07Pe6
kVrdHEqsMbh7qECwwkaBtSmqZXY1GS3qJqfDDA7p/U9PfWt0JPpDcgZoegzD
1wEgsQd8boXhx0EYfh4C8TvgYrteX9qmnc/Uq3Wtbx9o3wROz+uafgyc0ePu
e08TWk2Kc8UsC3g5AdqWgE563bLy3/PI7+9zHN4CuQ1g9hLY2QX6md+++gXJ
74G4
                    "], "RGB", "XYZ"], Interleaving -> False], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {73.33333333333329, Automatic}, 
                    ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}]], 
                    CellChangeTimes -> {{3.7463910039639883`*^9, 
                    3.7463910175865955`*^9}}]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.7463910228045287`*^9, 
                    3.74639103391722*^9}}, CellID -> 277434961]}], 
                    "ExampleNotebook" -> NotebookObject[
                    FrontEndObject[
                    LinkObject["5ufyx_shm", 3, 1]], 147], "ExternalLinks" -> {
                    Hyperlink["Bird", "https://en.wikipedia.org/wiki/Bird"]}, 
                    "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
761/761cdf8c-4d6d-4080-9d07-eca16d6e8898/download/DefinitionData"], 
                    "ShortName" -> "BirdSay", "SymbolName" -> 
                    "FunctionRepository`$761cdf8c4d6d40809d07eca16d6e8898`\
BirdSay", "Usage" -> 
                    "\!\(\*StyleBox[RowBox[{StyleBox[RowBox[{StyleBox[\"\
ResourceFunction\", \"ResourceFunctionSymbol\"], \"[\", \
StyleBox[\"\\\"BirdSay\\\"\", \"ResourceFunctionName\"], \"]\"}], \
\"ResourceFunctionHandle\"], \"[\", StyleBox[\"thing\", \"TI\"], \"]\"}], \
Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\) ask a bird to \
say \!\(\*Cell[BoxData[StyleBox[\"thing\", \"TI\"]], \"InlineFormula\", \
Rule[FontFamily, \"Source Sans Pro\"]]\).", "VerificationTests" -> 
                    HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
761/761cdf8c-4d6d-4080-9d07-eca16d6e8898"]}]]], Selectable -> False], 
                    RawBoxes[
                    RowBox[{"ResourceFunction", "[", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/b85ad128-91ec-\
4046-a27c-33ef7d019c5e\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"], SelectWithContents -> True], "]"}]]}, 
                    "ClickToCopyTemplate"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "\"\"", 
                   StyleBox[
                   "\"Wed 5 Dec 2018 14:37:10\"", FontSlant -> Italic, 
                    FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
                    StripOnInput -> False], 
                   TagBox[
                    ButtonBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                    ButtonFunction :> (Symbol["System`ResourceFunction"]; 
                    FunctionResource`DefinitionNotebook`Private`deleteMe[
                    "4501c0d9-cc12-4451-b5f6-8806b4313d4a"]), Appearance -> 
                    None, BoxID -> "4501c0d9-cc12-4451-b5f6-8806b4313d4a", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Center, Right, Right}, 
                   "Rows" -> {{Center}}}, AutoDelete -> False, 
                 GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.35], 
                    Scaled[0.35], Fit, Automatic^2}, 
                   "Rows" -> {{Automatic}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               OpenerBox[
                Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                Automatic, AutoAction -> False, ContinuousAction -> False], 
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   TagBox[
                    GridBox[{{"\"ResourceFunction:\"", 
                    TemplateBox[{
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "761cdf8c-4d6d-4080-9d07-eca16d6e8898", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "Version" -> None, "Keywords" -> {"birds", "party bird"}, 
                    "ContributorInformation" -> 
                    Association["ContributedBy" -> "Rick Hennigan"], 
                    "Documentation" -> Association["Usage" -> {
                    Association["Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"BirdSay\"", "ResourceFunctionName"], "]"}], 
                    "ResourceFunctionHandle"], "[", 
                    StyleBox["thing", "TI"], "]"}]], "Description" -> 
                    TextData[{"ask a bird to say ", 
                    Cell[
                    BoxData[
                    StyleBox["thing", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], "."}]]}, "Notes" -> {
                    Cell[
                    "Some birds can say words.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.746383232110336*^9}}, CellTags -> "TabNext", CellID -> 
                    533233984], 
                    Cell[
                    "This bird can say anything.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.746390791274925*^9, 
                    3.7463907912759266`*^9}}, CellID -> 181442125], 
                    Cell[
                    TextData[{"Look at this bird: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Wi4ppaJcJJIKeSGXY7IOwDI2bKzTtgE/s461vBSAn8G5kPOknUnDHFXUflXp
aUkzeg2jB9L1bqyWBSf3ZTIDudxQPj9cLALpeLVKVKtNkE1lrFIdAXAIwAuF
kWx22EkP2RZQQ+OGNanjbjqzWsajpefU9LzsLEhOQHBCWBXbK9gLvOXljQVO
n2O1WVZbgARtHuJ0L6v6IF7xMYqXlhdYCStRSgpAlBxOSaGk6I+zCzHGG6Hm
IHjbRT0M1MnEYCoxkkiNJ6kJmp1mCGcPJ8zz4gJoYxWVkKRHZIuSbU52SG4o
WV0vWEgJsLUrGaKyQ/ZYKwW9WtKrFbVchqWRHkKhBM5cxmHTuuBojKMzWRsl
ks9mVhYDjbqvUlpAKcw6M2lr3DQGdK3PVY9p9BGZvZbVZ5s9mXR/NjuYzw4V
8yNQpTReq0w26kT1+iRQ19+oVh0nJi+M5vOjucwIUKftYTs9gWrrZMn3E6zc
vJn1GFmflvNr2bCSiciZIPmQzg5Itl+0fIS26ReMoGiGJCsMyXZEtCOCEeL1
4NWqBjgtwGoRWgnRcpRSYyklgk1KCCZ5XytJ4pQH6U1QIz3iqIlDqeRkip6m
uFlAZoUFCIRdP/sIZy0mmSklLSoZFVJzBjgb5Yxdy6er2RZqwrmUtSolo1bV
6lW1VCXRUcxzuUKLM+cYrS97cHkH18VicXUp2Gz4kc8tzhl7Im2OWPqABbxa
v2X2g3A6PZBJDwJyPjdQyA2DXrk0AgEmkDYbU4vNaajprhAhX53ALaiWxkuF
8UJuLOdAE/nsTC7vyRXms/i7iv50wW8VfFY+aOSjQK1mIir5bC3e2ihOmMwL
5GFKzdBaltKzlJqmSGebTsh2HEEqWTHBjDM6lIBYI4k9aMPYcHWKm0/QkDdK
e2LUFHqPSGw4lhhN0FMpbo7h5znRK4gBiJe9ogzIAQkjhZ6UDAqcZUdBaLh+
TpuVLDg7tdynfjbLeaNa0Go1rdbQKhXi50JZKhSkXB7uFbKW2wqSKolUEcsl
5PNSw1ev+Mr5BcIhOwkgWXvEsQfT1gBWEM46Q3lnuJAdKuWHysUxhAMIQ+AJ
qkuLM9Dy0uzS0uzyomdl0bPUmF6sTzWqU7XyWLU4WSpMFHOTpfxMpThfLnrR
rpfLgUolmCsFMqVwphhJF+JWLm5mEmo27h6URbE30YcWWLPAG0XJKMpmyVVB
1HO8lmU0hybM0wnJTvJWijNpzqb4NM0YFGGuxEiACAtJ1oMMIeJm0ZaANryd
Yjw0t8CIPl4KiUqEeFgNSjLWqKQlAFk0OdGWxLQiObqSNfVCBlTT1aJdyRHB
yeWsUS2Z1arhclarVa1cU4oV+FbK5cBZzNlS3pIKWaS3Vikr1fLaSmC5GWxU
vdWSp1yYBZBidqzkjOadEeDNZYbz2ZFCZqQIG+eHqqVRoINXm7XJFmTghVaX
5taWPWvLC6tL8xtLC2tNz0p9eqk6Xa9M1svTjeJ0tThTK883qn6iWgBDaLUa
KlVC+XI0V4xmijEnn7TzCSOXMnJJM59yCnS6xDsVOV3VXZmQVTHMkmIVJZ3Q
ZvXMFW0JhC2qdYzGmixQc1qK0sKU7E+J3qQYBHPX4cEE56fZAMUFaD7ICCFO
ikhKHBL0mKwm4GRRT0kWL1iSaMtiWpMyaTWf1Yt5o1Kxq1UEBTKZxHKlCMh2
vWHVF40GtKzVFpVKTSxX3FLoSPm0XMrIFZLeyHClWtxYC60u+xfr3nrFUytN
VwqT5fxEJTdWzI62VMqPQLXCWL04vliZWKpOgiG03JxZWbwivLG6sLWysLns
XV/xbi4urC/Or9RnV2pTzdp0szq7WIY8zZpvqRFaaYSXm+HFRqRej9Rq0XIl
mi/F8iXypUuwdQpMJs9kS0K2Kjl11WmYmUbGqWedupOupdMV2ykbVlk1yjA2
b+Y40NYcVrYZwaaFNIcOgRxd2jyww9W0lqS1OKvGGY2FKDVBSbGUGKXFGC1G
GCkqKHFZTRLpKUVnVJOWTVYyRdFSCWTHlLNZOZ/XSmX41qzWXANXgQ5xodfr
dmMp3Vw2mysQOKvVJlAjJYAakwv6PXCG1XVSJfNrS/61peBK07tY8zQqM43S
RLM8CaS1wgTWltyL40uVMaBbbcysNWeh9cU5gAXe7VX/zppvbyOwsxbYWfFv
rfhwfaM5v97wrDbmoeXK3ErVs9bwrzYjq0vR1cX4SjO21IwBdbUaq5QTxUqi
UKELFT5b5RFy2YqSb5iFhp1fzOQWC7lGPtd0Mo20U7PSUFW3S7KVg6slIy9o
GVHOcOS7cI6IdpcMwhlFdGTe4TiLc4/lRc6WeEviDJ5WKcDnNJpTKE6J82pC
0pKKQckmLVk0egwSy5Yk2QSyknHkfAFC/Jq1plWrw8AQ2NqNFWtpzV5aSy+v
p5c27cUNo76q1Ze0BkGNrCDNXrWMxIDzjVJBLeVXF30rTf9awwsgK3W832eX
q5OLpcml8lRrhXCFEK5PrjVm1pdmNpY8EGCC8O56cG8jtL8ZhMh+Lbi7GsD1
rSUY27e+6F1v+vDLr7QYXl+Jry8nVxcTK834ciPWrCWaVapWYyo1oVyTS3W5
WLuCXFp0SovZ4lIhv5TPLebyzVy2nsk20pm6ka5qxNVFGVILopYX1LyqugcR
cimNYBTyJsoQSpiMFTmZNZC0SAPBYDmVBXBW53idgXBFNnnFEkiDYctQC7Ls
pJG0cr6klppqZQkYrfoyCFuLy+nlVeDNrGxn1nYyG7vO+o69umUvb1pLG+bi
ul5f0qtVNy5IYuiVvFHKuZy9S/X5tSUfcnVjyYdoXWtMgepKbYKwrc2u1qdx
Zb05uwEDL81ur3i2Vj2ujQE2vL8ZPdx+o83IwUb0YDUM2vsroZ2V0PZycHMp
tNkMbi76iZYi28uJzZXUxlJqbSlBXN1INBt0o8HVGlIF/6CmDpWW0uWlTHWl
UFrJg3NhuZBfKcDbhUVi7Cy0aKdBu27YFc2sqGZZx4CmVdJqyUEDplWKYiWv
lLNypUCGtXIW0zFQw+ScJYAwBNqCygkag5In2wLwqmlFdlQIdwSxLGdh5rxS
KGvlRaW6pDfWzMWN9Mo25KztZtf3oNzmUWbzJLN55mycOmuH9squtbxlNtZa
HQjMrJXhZPK3ywVnczUI1CB89a5fngdMFyzBu9Wc2V6c3V70bC55QHh3bX53
bYFo3b+3ETnYih1tJ493kyc7yZO91PFu/GgrfrgZO3aBH65F99YiREuRveUQ
0WpsdyW+u5LcWaE2lpNrzcRqk15a5JaaUmNRayxZCLzGcq62nKuv5Otrhcpa
sbRaKq1WiJaLxZUiIb+Sd/MEymWb2cyik14sQFa9ZDZKeqOiN+tqvQZJtTJS
1KzXpXKeVP+0LFgib3LwMK/SEDhLBuGMp0BYyWhyxpAzFmIZZlYKRTTGWrmh
VZeNxQ1reQcwnY3j3OZJfvM8u3We277Ibl/mdm5jxcP0+pG5ums115HVhHOp
pBRzIAyh/TjYCOOdDsKAc7geOFjz7q8u7C57oO2lmd2l2b0lz97Swv7y/OGq
92jNd7juIy/bDB5tRU924md71Pk+DWFD9jups+3k2WbiZDN+vHGlo7UEmB+s
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
//ITf/Rb3/zj3/y5P/uDf/Dnf/p7/+pPfuN/+91f+fbv/jIy5Ee+cIHK+EMX
pX92L/+r9blviD2/zLb/xfL07xltvxj823+Ymfrhuig55P/4aJWyWWu2OGe3
LvK790p7D6qHT+vHz6Hq8bP68dPaydP66Yvm+avF89dLFx8tIh/OPwHeyun/
x8RbR8d1YNnef3zzeqa7A8aYbZnZltmWLZbFzIzFzMzMTCoxM1tsyZKMkpll
ijGJw5zunpk3/Z2S0nmz1l533arIWfavdu2zT9W9cpUK7AiR03cudgN2AA6c
sbJanLKepG0hGTtJ5l6IDt/1KtQEMR0UJ6L5LsqS+vT7NXKL+v26REq4iBIu
pIZCPvCpIYBXSIsQUCP4lHAuKZSND/VBxgVwcIHI3ICoiGOQBrCLbd+yBt7+
8Gb3fRR/eBekKwQvmPbM0Z35aREB/tuO7/M7dmDjnm2f7N666sCOdbs3fwIL
8o5NK4NPHyYiU10a0oPZgaleN8y7GjPLribX2PnDHdb2cuF4m/WzF3Nvn8+9
nb/07vnsu5c3Pnt1c7BZO91fce18PQuVZJRi64WlLeTEAVxMRfiGttD1DzJ3
PMjdeyH04/uZe65gEkt8N7pmZ5aW+q7Px1DySbxiuqyUo0LwNBi+DivQYwU6
nECHh3PewolQTxBb8BInQeb20Ra7UAJ7Kd/q87zYBfJBlngxsgqsvBo4EzXN
REMH2dhDs5zjUeJ5lAQBLVHISBBSY0Q0n70BuNinyEWJqGeFlAgBORz6MPh2
UfBw4ZkwLjEcIDPwIUwMFAyfirJCIiNOwBSDWIYKsW/XemjOx/23QamDEIYY
OQx4D2w+dXAr5PD+7Wt3+S3fs2315g3Ltm5aAZaGF+Lwro05qSHj3RU/fPn4
x69f3p5qeHx98PHV4ae3x+9c7L06WjPZ64JYhriAdjF/a/CzT2+8eDz9xas7
w22mVo/4wrlqPjmLR8wt55e5EOETwhxn4mHXmTV9YavGI9ZMRm24lXfwOiaa
h8pLL87PKSvNRaFysZRCMruEKUFx1Ri+FoQTaHACFUAm8NQgEk9HFhiIYiNR
YiVIXXiZA4BjhDaIlxKexZcqQidG5EKLwe0+zlhFDUHdSNK3UczdNEs/lxzP
JSUCap+xaXFCYE6JFVCiQSJq1L8In128sJZDDIH4ZROCfRczEyGQw7mEMA4+
lIkNBvkgo06RECHQxE4e23Fkv+9Dtp07fV/xwzng3b75EzjCagY148Cu9UAY
3Lvw+c8nWzYu91u/fN+OtccObg47viPu1PZGB/+f//zbP3796qevXjy9NfLb
L+9/+eHdz1+9/vz1zQfXepvs/GaP6NZM6+3Lndcmm948m3356PKbZ9fuzY7U
mJndNRqHhkYpSjCyEDZc8jAztTnrZHnwhqaglX2BfxkOXzabuWcOHcVA5aUV
FeQgS/LR+AI8qYTCRjDFGJ4KKwTCYGANQagmCLREng81ka8iCdQkkZEsNpMl
NjzQFlswQosvW3hmMDZa6FjkjJF4ADVOWUtQQ3Q0kw3tVEsPm5TAJvhQ86mJ
XGo8l5rAJcfxyTF8cpSAFCUkR8ORT4wE03IIEWx8OAsXxsD7BCfwkI3zXa7P
wATRUGcoiAAozNkpx2DjCzyx+6j/tm1+K/fv3gBrBQAHux7cvcF3VUbgYbDx
qSNbg0/s2bV5FQTy3q2rgfmJ/ZuDD20LPbQlOfwItyTqs6eX/vnP//r737/7
5cc3f/v5qx++ev7d+/nv389//e7u7elGswTLIWZdHq+HdjEzUvPp/ekv3t1/
cHPg3txAnYXWYOdVmNkCfJaJhjBT8sfY8e15AZ7w9bVBq9pO/Xnw7IahnJMX
sKnCkozMovwCFDIXgykkkEvJTARTCJx9+SAy+AiLNCSRnizUkARKEl9BhqNY
SxYbKFIrWWIhia0EoRkrMC4mOVpgxfos7cQuWBqnqCKoakiaBoq+lWRsZxET
2YREDjEJUHPIiWxyHIcUyyPGcolRHEIklxCzeAJi48+ycBFMbDgdF07DhoHg
nIEByCF0dDAVGUhCnSSXnQ45tQNKBfQHiFnYNU4c3Q6Qt29d5bdxGaSH7xuN
netBpUkhmZEngo7uPQV74sFNQYc2Bx3ecvrw1tTIkzmRxzjouP/69cvv3s2/
fzb31dvZ797e/fn9o+8+v/9qfvraWO1Iq5lLzmThM66ONz2+MTLaZpkern79
6NLju8NjnbZqCx2Og21WkwBhZ+ZUSbEtqJDewlPesI2uoNUNAR92xWyvy42w
47IVuIIiREEeqrQAiy0iksooLCSDj+HKgTD4lijUUURaskRDFWtoYjVDqKAL
VXBOkeopMgsVUIvNBKERx9eDsDwDTmDBC61YkR1Q4yQegsxLUFQDaqKmgahv
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
BjbOjDpamBLCI+co2AiDgNBSqau1iqQshFJAFNLRAhoKJGZiJRwipEedS2GQ
kjH58Tnxp9u8SrMYpeXlDTaqOh20+5eaHlyo7fSymkwkIDzZotayspWUNDO3
1MLNMrDOGpjBZlaQiRVgYQWaOMFGlo8zhLOGFwN4tYIkje9G3UQYhXJapIIW
q2enejWl8L+aG616dWvkty8f/eP7R75B9s2jX9/N/fhq5tcvbv769vqPL85/
86jr52ejX95rezlpfztX/8WtpndXq356d/Xz2ap3VyuejBmuNPHeXvQ+n3aM
e9F3OgVPx42Ph+TPxowQzoAah/D5mVSWBOnh8zYSjA19L52CzfqDM4OYxyTl
g5lZ5CIWucBnZmrh2TP79+3fuXrtqqN7NuZH+8cF7EgM3pcZeRCm3pkDm8HD
4ORTu9emhe8jFUaxsJkydomMWQrhU2uX1NmEcj6KRy0Vc/FcKkLEROlEJJ2M
qZaw9HKORc2yKOkwl3OTArPjAqilCQ0m8mij8tHV1tsXqtudrCYb7UKHrkaH
d8nQGk6RSYCyS4qs3EAr+4yNGWhiBhs4gUZWiM/Y/HAD33cHjUYQr+TF+/oG
E2IkqUpX2lsjnR1yvbzT88vnN/7767v/+c29376+/dtn1797NvH988nvno7+
9GIK+sN3D/p+e3P1l+cj39zv+PJWw/f32r+arf7yRuODfuWTc5LHY6abrfzZ
Fm6bOrdBmt5nzOlX5054EBP2ksfDqifn1K+n7GDdxdBY5PzHOYQ2Cfk7ZzoB
NpS8RTEXRiGHXCxnofLTwo4c3r9m3drdfqtKk4LiT+9MC92fH38s/vTegN2b
Tu3fcHLfeugVqNwwCSNfxUWp+WVKbpmCjXZq2C4lFV4sGq4AJiCLUsohlZpk
jHKTwKBgq6VMo5JnkNMMEpyAnF+aESGmF/TUyy72e57eGro8VH6uTt5bI682
Uvn41Jz4MzRUolOJd0oyTJwgC+cMcLZwAsDPPsj8cAs/Qsc9q2SEgMDMFZrC
Li/t2jnry7kO8Orfv7gJwfv3r+5AGvwIdfezO4D3zdW2b+dHf3w99cvzsV9e
Xf7xyeCvL8f+9u7Kj/Ojzy84H49ob3aL54dNn067X132Pr5gbdXmDrvwPZbS
6XrWxUbWhRrKnV4xmPl6E+fNBefLGRfMR0iJxcSAI4QzOBmPSFkUCZ3xh5//
QO2bhpQCIbMUlRNz7NCuDZvW7tuzgZgfnRy0JyVoP/g29vSO0KPbgvy3nty1
Ji5ov4xXBrZ0mgReM1/KKpZw0TYtT85BoQuT8MgcJrmESSzmEotEHJxBybSr
hDopzahgOnUc6BsNNpFVhheTM9q8/JEu64U+d4ub1WQnNtsxlfoiEzcRn30i
Nsg/7OQBREaIgRnq5gWZOGcsvBALLwiOGnawihpg5EZ4VekjTcKb486nVxq+
fNgPPeGHJ70/Pp/49c2lb5+Offt85rtn4z+8mPju2di38xPfPhn59dX0T76f
Gf72weBns42vr5Tf7tc8GtbfHTVe65A+GLE+GrM9veB4PlU+26fsdhPPuYk9
LmKfgzBezRorp9zqFFxsoN3vV765XPXFneZnk7ZXl5z4snhfaCCT/lc+p+Cg
3aHSyL58zvoD9WI+w97NoRbCJh5+2n/9ulWwJrPQqYTskLzIQ8mhe6BpxJ7a
HXxoG3S2gzvX8mh5DgPbbRFWu6RGOQ4eqsQEERtJxBbk5yYW5yZyaAgeDcml
lcp4RJ2CZVJxDXIGyK5iNntlQ63GwTZ7U7m8pVJSa8K4BDEVkpgaWbSTH+Ji
B7m4gdXiYAUxPDroaNgp35ePGlqoWxxsZp/SMU4bWIE1ioyJZt7bWz3fzA//
9nrmb29nvnsw8P5RP/SEX15OAc8fXpz/6c30d/MD7+91gb6fH/rx6divn138
6l73/Ij5m4eDXz0aeHGp8tWNtheX697d6353q2mwHHdrQPFgTPv4vHKkjqwj
RQ070aPVdHL2qTYN0sNKmW0WvL9W8/Xt1hfT1vlx+8NR7WwzacSDBLy40oQ/
5iBEBxmRCuFMQqcDZzLGNwcBNR3n68+/74PkwrT4M/u2b0iJO63jo3LC/DPC
99KLImHXSw73P7Vv/e5NK9et+gBZGOdQknQSpElFN6oIRgXSqsRblFijAq1V
ULHo3Ky0aAELJ2AilVy8RkI3q3lWvRDiwqZmVlqFTdX6oQ5nb6OpwU6r1uTU
qmIa1XG18pgaSYxXEl4pCC0XhHh5gU5hYGlaUHp0QGZsUFZcMLMkyCOO6a2g
PJ6u/OrR4D8+u/Ht09HPbzZ986AXFmHI2++fQ2F48MtnV75+0PHjm4vfPjn3
w8uL//kVxMX466v190ddN3qU94YNr683vrnX+/CC9/55+8Mp64PzlgejhulG
zqALN1pD6jZmXahAW9iJQlSEnZeiwEUJkeEzFYxXM9Wf32h5dsFzvo4218lq
1hfqabEi9FluSfAiZ58Qv/t5oT+nQWiQURlwBPkiGpez+PkG9DFMQdzB3Rsy
EoPkQrSIkVMce5hcGIbJDo48vmPH+iXrV/515ZK/xEeetKvJBhnaKMcYlNDQ
sHYVyqnBlOsxXh3Ka8RphOi8rHixgCiT0NVyjkHLs2j4JiXLrGNXu7Qem6K9
TtFZQW6z5beYMloNCa2ahDp1fL0iulYWUS2JqBSfrRCHVEqCq2TBUlKkgV8C
NV6ITztfr35xueHnN9e+fHju6aTv/f7qSh30hJ9ejf32euibJ32wmv34YuSn
V+d/hux9Pf3zy/N/f33hxbWOPgv6dr/qfAXl/pjt5WzjiynHbJdo2I0adCPb
zcW18qx2U9H5SuLtPqFHmOgVJXqgDTLiMFmnaNmBgvzwSl7h/Hn3Z9cqIbrN
tGglNkJDjUKknSpOPpUZfrg4/hA4GVsSv4j6jwoNnImodOAMfl7MjX/15xw2
Lis6YH9mUjB0MzGjODc1GPbr6FM79m9bvvyDf1vy4Z+Wffyno/47VRKUWYkz
AWEVwabG2zU4p45QrsNW63FVRmytCVVhQGYlh6hEWIeJY9Fy7QauyyJzWlUe
p6LKKWt0ULoced22tC5rarslrc2Q3KKPb9bE1quiamSRNfKIGml4pTzcIw4u
5wdWSSJHa3jVKsSlXuM/3l3+7sWFd9cbnky43t9u+eFB5//95fFnc1WvZxxP
R/QP+wU3O/hXm+n3hzVQce/2Cue6pJNVtMlqzrPLtXdHzE8mnG9vNj+7aH96
wTJSjuvSZnWbix2MhApJxlg1ecBZVi9P11KiOMVBhQmHMPFHTZR0BzvrQoPo
waAaCPfbEUZ6amrInsK4gOL4o/mxx2FNy40OyEuJBsi/qyxhMah9obHA2Wfp
hQpNw2czcZlsXI6YVlSSHlqYFgoTTcoqLc6Nh1176Qd/WvvJh2uW/WXlkg9W
LvvrpnXLaLg0m5ZgkmGsKpzPyRpcuQ7v1eMqzYQaK6nGgq23otrdhJzkUDE1
s9uLbnagau3YGhvs2rhOF6LLVdxXntftye9x5nbZczttGa2WVLB0szahUZ3Q
oI6uUUZXS8+Wi8PqtcmjVaS5btWD8646ParTzYH59e2jc98+6vzqduOjMd3z
Yd2Li7X3+g2fzda/nPHe61O1a/OHvPjhcvStAc2nN1qfXm2D4fjubvOra547
I5q3c3WvZ+x3zinOOZBOeniFOMnBjKnXlth46QZWCjHzRH70fkJWQNyp7UUR
B19NOFts6MwzW9t1ZVPNdEr+qayzh7IjD+dEHSqMPlKUFJKXHFtSXIglMPFM
KaY45g/UUJ59FRqZSvxfnKkL+6DvV0eSCkglicXpEWJGKTRnNqVwx9aNH/31
39au/mDT6iVLP/y3VSs+/GTZn7MSA+0aglGKBT/blXgws0dHLjcQKo2EGjOp
1kKqt2AabOgeL5FUGospiDpXhe9wlHa5QIhed2F3eW6fp7jPXdjjzut15XS7
srscqV3mlHZDYqsutlkXV6eNq1ZENanj+uwFd4askLc/v7/xy7up++NOESr2
06vVn1+vnWvlDFnRTaKsMTf1Wof8yweDsFM8GlI+HDPf6FM9u1JxqUP+09sr
//yfb377/v6X99vf3aqBHfnhqPrxsGa2T94kz6wWJXXqi92CFDE2Ap8RiEk/
kxx8MPTYpsTA/cXR/rK8MxdqOA5JUfKZbSJMsltQiEw/CYtwWpg/bGe5qVHo
MgSOyCAzpWSujMiWo5gCbGE0oMaUxoMgOhbmoC83fv/8H5dFxS9+zp/FIeZA
qnBo+VAbpFxEZPCxjz/4P58s/4vf+uUrlvz7mk8+Xrb0g+P+W3yDT4Yxq7AW
Fd6pJti0OK9+ITFMxHrgbMU1ObCNVnRXBVGAT8pKDuquxLUCZ3sxqNtd0ucp
7fUW93mKAHWvJ7/LmdXtyIIAabWkt5qTGnSxtYqzQPjZpQpoDj+/mvr+5cTX
j4e+nh/++/tLg5XCsVr+/XHzbI/h/oDh+UzNk0nzXBtjflj3csr2csZzd0gL
nK+fk90eVr+62fBkxnNvRH2liXZ/yPBwSH2xnjxVQ+gy5pYLkttMRVxkRF7U
vvjTu5OC9qWHH4wL3h11ejsp/dSAtqxamJsd6R98YH1+7JncuJOxQbvOHvU7
e3J7RmwEqgRJ4cpIfDkQ9tmYxsfRBRgqB1cUgy+OJZTELZqZjEikIJPI6FQ6
ZuG7P2wam5DJJWfCssyn5App+QJqnpKDxBQlrl3+4YqP/wwpAaGxdOmfV69c
snblUvgjYGazHOtQYQGyS4N363AePdZrxFeZiGDmRhuh0YZrsGI7vAS7tCAh
4kirHdHpQnY6fHHR6y7yES4vWOCc2+XMGXDldlnSO6zpHab4Os3ZDms2+O3Z
dPWXTwa/ftz/5ZORL+50v7/b9+ZO+/yEBYx6pUvx7Gb7/EXPg3NKmIDvb7V9
Pdfy1c2md7Pel1crHo7qXt9q/PRa+Ww3+0avaNRZMuQsutLCudzEutzGHnIh
u0xFRkqEQ1koZGTEBG5NCt2ZGnoo8vTus/4bimOPAG0JOhqC98iOT04f2BAT
uDMhxD/l7Knk6EBEQRYWjWEKVAyBmsxWENlSgIxnCElsCZ4pItD5BIBcHEss
jQe8VFQyiI5JBVxsfBqXmCYkZ/DJGQJqhoSWLWPkwlonZxdJWAX+uzeBmcHD
m9cuW7n0P9YA6o/+T2zUcbuOaJaiHAoccIZkdmmxwBn8DKFRbcED5wYLGVC3
WDEdDkyjFRUdcswszustR3Y7SiA6ut1lA54ygHyuGuEVxFbSwvrtBUO16Ika
4sUO/tyg6tn1ts/u9b+50fTptZpn16pf3Ox497D99Y2qW/2yB6O6q1286TYu
ROVct+hqG/PxuPbBpPH941FY2eZH1M+nLNe7uLMd7GstvMlKwrC9pEGW0Wko
O+fBeiVJ5aI0IeIMszCIVhiuEpRkJZ1MCtkbdXJ76KHNp/asgu6aF3bg7JFN
u9ctObR9VdrZkwVpUQRkHotJF0p8V9/xJAaORE8WKEh8BY2nJHN9fqYLlECe
xldQ2EJCaQwJEUdB+DjT0UkMTDIXm8whpgBeESVTRsuW0rOlrFwFK0fFLlax
ioxiREpswEcf/QkSY+Paj1ct+wAEqLdvXKHkF9sUaKscAxXOoUYvmhmSucJA
Xghnoi+fbUQwc5MNA+ouJ0FuMMpiBiox7Y4y4NzjQfR7inpchX0VRZ3GktFy
ytUe+f1JK7zfL7cLr3Qpbw4ZppupN/uFV7sEd0dhQdPfG9PdOSe72sm+e05w
q4s9VU+61EyZa2ffH5B9/rj7zpAcfAt9bNSNHbCWtOny+5zIFmV2kyTdzkqU
4SIlqHAlMYpeFFCcdCwj8mBZdkReWlBs2N6gQxuDD/oF79sQfWxHccyJgN2r
Tu3dmBx5BlucxaCT1FqN2mCRG80SvZmrMnBkeqZYQxeqaSIdQ2Jgi3Vsie+C
XuAMGcIUKVlCObkshoGIoyLjWKgEJjaJT0wTENJEpAxoAjJGloKZqWTlaNh5
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
PYgd+hR+uen/Aslgbkw=
                    "], {{0, 150}, {120, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                    "], "RGB", "XYZ"], ImageResolution -> {434, 434}, 
                    Interleaving -> True, MetaInformation -> 
                    Association["Source" -> 
                    "http://en.wikipedia.org/wiki/File:Petroica_boodang_\
Meehan_Range_1_crop.jpg", "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset050/86e/\
86e5ac36df28e1906bb4d8332bd62260_v001s.jpg"]], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {57.99999999999938, Automatic}, 
                    ImageSizeRaw -> {120, 150}, 
                    PlotRange -> {{0, 120}, {0, 150}}]], ImageCache -> 
                    GraphicsData["CompressedBitmap", 
                    "eJw12nd0XNeBJvgCPe0zdttuW7LETIJEIgKRM6qAyjnnnAMq55xzRFWhk\
CMB\n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\n\
N2lY5nGOXc/zWcVCBoJJHvXpGCraILyvfs+bfy/moGYL1nLaMJXWzOd1XqvQ\n\
apRl4u6JTLCcC63NRbfXvWcq4vUEejUMXwpCV8LDcSPYKqMcy5u+eLj0x4+3\n\
/ss3t/7y7Y1/++LSn7+69n9+fvFPLy9+/e7ai8u5rx/MfXm3cn/DdeuY7elp\n\
z4VJcdmF88pgJRv95Xb2yenIXJDlV8JANSY+rGp2mngmNc2gpOiVNKOGadEC\n\
Zr7LJPTZJOixXuhwh4o2AhwK8J66rsY9PotgZSaSj+mTQf24gm1Q8/02ZSHh\n\
KsSd8xOB00uZYxXP1pJjY0K8HCfnLKNUZLeEOpg29xXdI+t5/v2zkV89Of7H\n\
z6785bcP//qHp//jj+//1988+Ldf3fznTy/866vtP3669dv31z67NflsK/zy\n\
ndT2nH45xjuRkH52Nfe7R9PfPQTO7ueXEt+bBSY11aD4vh5Mq45rNwgcRoHP\n\
JvWYRB1HGzuOHOQg2lnIDvDRg4Nt+5QceMQuzgR00yl7xK1xm+WpgGki4ZnM\n\
+uNupUaAXZv0fnj72M1TmXJI7jdwSgHBlB9edg1lbIMp23DWg6zE2RvTugcX\n\
cr96/9yfv333r//y6f/4w4f/7fdP/vLr+//+q+t//vzKd+/O/u7Rwq8fzrx3\n\
2n9rwXhtSvVwWf/1NaDPf/po8/tuCKtmAKyimseZNsCs57lMArdFGHYp9FLK\n\
wQM7Oxr3MuFtEmIvHtzS2/Q2eqBRQB6Ju5QnpiPpgB6I2m1WRDy6gEVsVVDW\n\
ys7t5cBHtxYfXiidKptmI6qSm1ewY4pucNE9mncjkm5MzImJ2lEpJ2E6Lj6/\n\
6H90benrDy//l9++9//9+eV//NOT/+c39//15dYfP9r4l49Pffdw9tPLqU8v\n\
xb68FgfVfPFO+vucRWY1zQSA1TSrlmnXc50GngfI2SLyWSUptwR4qv/J3/+w\n\
6eAv1bQhAaYH0dfY27hruGU3tPuQhk9I+nR+m9pllPossoxXsVayf3T3+KXV\n\
2Dvrkc8en7pzKrE975zxS8N8+LQVPeWDFb2ItBeb9hAyPmLGR0v72EkvN+Hh\n\
pf3SuYLz6pmZbz+9+x///OL//dOz//bdLaD5//bl9r+8PPenF5v/+vE6qOa3\n\
jxeqZrdVbNEyzCqaVUWzaZjA1ucy8t0mgccs9JhFUYe46GTW7v3Fz372o46m\n\
vWJct02M0nHhhJEjuMFGWM8h/FinjEeJ+/SrU6G72wv3L8/fvTD98PLi2YXA\n\
nXP5b19sf3J3eTmpdrPBKVL3tB5a8iMybnTChUt5iWk/OxUQpoLSZFAWC6mD\n\
AaPdbfH6PbMzpbvXz//us3v//Q/P/tc/P/3r7+799Z+e/sc/PQbV/Ps/3qia\n\
vVaJTccENmRgf6uatSyHgec0CgC5xyIEGu5U4NDg1h//+If7dv1CywKvxMQP\n\
1txJM40K68CDj0CO7uts3CPjoB/fWPv1F4+2N/IrE45n9za2j6feu7ny8f0T\n\
Xz49c3U1shCSp1iD07SOnBGSdCLiDmzMQ4v6BVG/NOqXRwPqSMgYiriD0Ygv\n\
mrCHk5Zg1pedKS8c37pw7sXT63/65r2//ftnoJr/9cfq50j/yW+XOw1sm45h\n\
1zJ22McZoB6HnuXQcRx6ttPAcho4JEQPAdq5862fv/mLn2LGOh8dd92ZVles\n\
eD6ms7Npb/eRvYNth/raan1m8cdPLn38+Pz51fj2ifzNs5NffrD9xbOLV9Yi\n\
l1dDpybdKz7JBKWzTGwKAW/HFlzYzYoEpGG/LOSVRwLj0bA9HA0EE8lgKhfM\n\
FHypsi05aYiUNf4JlTvlCKWnFpZBNZcvna/mHHDK3SauU89w6miOcYpNQ3Jo\n\
Kc5xsk1LsWvJHhOdRRgcaD/YUr9n986f//SnP570C56sW08m+REFlDRS396w\n\
iwztpMC60SPtZ1fTv/rk1mrZ49TQ372+8fDKwrPba7fPFh5cqGyvJU7NBKO8\n\
0ZmRXXHOgM1AcFnYPrfE55H63Qq/HwjZG4rHAtXX81QomfIk8s5E2ZaYNEfL\n\
Wn9O6YhJbTFQjcZffG12yVxGjtPAcOqpgNY+TnRqCE4NzqbGWtRYp45oHae0\n\
NOw6vP+Xh2vffuONv6cgu89OjOfsnHPzwYKdQ4fUowaPpB1Cu4q6NBlcLPs1\n\
QnzMKXp84/j7d4CGJJ5cm//i6Zkn1xZPLcbtzNHU0FtZRL1VhTfp2CaT0GYR\n\
u10ar9/hj4UDsUQgDpiTwXjSG8s44iVrvAI8Oev9Wa0vbQhOgGpsr98Hj/pc\n\
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"]]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.746391022179982*^9, 
                    3.7463910221810017`*^9}}, CellID -> 43597922], 
                    Cell[
                    TextData[{"Fact: this bird is way cooler: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
gvn/rq6u+Oe/Pp7+8y9X2Xx1S+fXeU1t+YWLkkPFh1cOHJT4G9mLajYmVOQz
xLmE4eCQBfhNv1esozHNcTatvuMQtyNGbREq6Dr93KOanf9mssJjCI0KEZ2D
kT8vlca+tlF8zFku2papC9N4LlPGfRQF739pM/L+NfJhbWVdVVAw/eQnn34+
1CQfzdZXLH48W1YuKXn37YXxffqY4jeKE+i5g6zdsWnAY/g5e5dYe9Dsehuy
I7yOpAhXcndjXtQ44jkU/T2i0Nc0P9SfIxz93UyoPRaBBDqHzTO6mDuRrhZq
Y+3o7iGYuiCd+NDfmw/yuWYzW7+SYsAnMhHZJRhKjcIUy8jgrLFHvFsk4j06
0P0j6Z637t/fTZyz6ltnTivA2pPiKbkosxJplVKpxoaNm4tZjq8F9oPN8Zm9
+94HBbE9ejB9wfxaXsfsprLF3KgknErbxGv9qhuIMRoNVtOhK+a1VdW5B1CR
uwvn9Dvqz6Pq9nCU6XZzlOv3cJQRLhCO52zGSJ/uooyQ7GoszNC5ZxgKFqZj
bpP5yEBoR3/y3QQuF0rSk2Po2sdzNqJCt4vuv6v2/jXtqtfW/F1YHDsZljIN
JAoWv0uq1GoN+VebS4gPaU3M0FT7XVZ2QfLZ50e7sjlGhVxRyWpo5bymX4JY
x/b4dOLzuEnxHoszWlRvo6+JU+hTK9bb1K8lYLWDh/8AJfz8C1nbMdrEB8v/
akg+OtXwsbIR9sMUkzC7PnVxGoIifaBQsmdlcwVKpPv3wxXiAbojYptub4fe
dJx9n/8O9g+YiygbX8jFHEwViz82v7pl96XLvzAb0mT5YPnzsvLz0v/758fj
23r78DUvbO6bceGmscXsqDG4lLUT1flvodJQ3PL6J5KNKnYdXQl+Z3VWt9Xi
sBi/IVSa6nQqdDsw3jdWlA/Sp2bER0eur9K4vuLxXyPkg51bsDid4nl3ivsk
UJDdtlNaIDdsKCoMO0h+D/Hcz+3tqKkXquLjqhifj12LyQHxsJIp2VxjFasR
f2XDpoMVFy8rmiMf5RfOSz7+9BPDqKSkm5bWVmJ9syDays5O/igcuhi/kt4w
8rpkUx1zCzm5xU3jryXWxx3Ctdx9yA4aCDnL7cmYf6VA+6h2yJs7CXPW5PC+
/mM+tKI9X5ElysfCbHj6u0MiSLjtcFfbY2bHJPys3y3WbDfCX6nI3o5lsWmw
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
D0s+yJ59lfIiIqx8RVtenw/b1sBHfXm5tf8Sf+cM2eXKvAP8vWhf0nMcGbkc
W8gPfiI6Gcl+8ejtGoEO9u3gb+FKcmBDeoz44esxpNxPE0xzFl2tfHCAbNS1
nP0Plw96HjZPHm7drh4fpK+Ij1Lig+2X37J9+R5Y+w1FpvfdHCBdRnpmCnFU
UEK2uRDn0rfgM7Lbbw5dgj2D5+LV/tOxvk8+VvXIJh8sma8vZ/skpAclwBCS
gFd656I0awvFLw/ZfuSLdSRDPbvCTK5m+9dyPhIGDLp0/MRpR+JD2lr5uIWD
vK6pWk+c6AoBrZiPY3MHyCcZmsL2wyrhXLF6+pvkG1zO2oXS1Nfx7YSXcSpt
A67liu/4+tPi+T8YX8x+sLVycyLHoI3GjtlAzkfikGEXz5VdkJ49d6FV6asG
wX3jmn68lScR9yqp844ilvvWMrB8QAn3E6pMaz14Po1x+hD9XQYWm/+SvQsb
yOfzs3Wv2TfW2KFjp9/37N2/5sTJUkfmY5W2YC/Rmnf0PSxU1cGt/x+qd6w1
gb3/853Ry9HV0b92jzBWOx3dqROOfflln7Lylr3LU9zz6BEaA5bfYXUDx3O2
YAjFSWyPF4VcfPdaWFhY5RfHjsa1dM985tM/QuPA35Wbfwil+duRHToYjoIl
f4cR4yM8PByfH+XvMGhR/uq5nlrUosetv5/t0TDqnX+X8x7U7x/0fe71u+di
c7kfOMinC2xVlnwOm/ERERGBr7/5pl9z5wVrEGTljkBCkAmB1u4IYLC6DaZj
9c697bsA6z9AS3/fWNRpb6B1w383eJ/G/M5abG+wpQv8rdrA2dwGarmidi9L
R0fH6oKCgrNHj33V61zZ+WbnFNn6AhlfoyqC7c0o5RAaRP1zGz7nbmjp7xsP
+W24T7+TSkW/Siaizv67lfb29jj85ltPVYh1cM2aHxTfgdYQ5H+Axp73oH7/
oO9z99/xOsfb9gCu4cPFxdX45pG3F7D3cjSXD7HeWIS0kWjq+ff79w8Tt7/3
ri4fzs4uID4WtoSP/wfjUt02
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJylkL1Lw0AYxh9bpaIVBR0cHCKIg1QUXQQXq0NRRCSt4NeSpEkqpGm4pEhx
dHDt4KLi4gf+B7qJ/4AgCOrkoM4OCiKIxOcaoSA6ecfd+8tz7/vm7unVS6oV
A+A3c1O19bQQWiXbwY8F11+zXTM/7QambYoxvYFiVeYiVnWMot84DBTdQKiZ
SWVxaVlJPCCBJsQxjiHN8L30/Pws/hxvN5ANcT0oe/2d9+tozZu+ATTIS48Z
ngjIE+S59cCTXCV3GQUtTz4ipwQvSL6Suh7xk2Q74nfJIqdO8W1JsmJHnJKs
RyzfohgFUSQ75L6iUza+7yNfkjTdhSxjT235UJHBJBToKGMNDgIMMrr07Pe6
kVrdHEqsMbh7qECwwkaBtSmqZXY1GS3qJqfDDA7p/U9PfWt0JPpDcgZoegzD
1wEgsQd8boXhx0EYfh4C8TvgYrteX9qmnc/Uq3Wtbx9o3wROz+uafgyc0ePu
e08TWk2Kc8UsC3g5AdqWgE563bLy3/PI7+9zHN4CuQ1g9hLY2QX6md+++gXJ
74G4
                    "], "RGB", "XYZ"], Interleaving -> False], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {73.33333333333329, Automatic}, 
                    ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}]], 
                    CellChangeTimes -> {{3.7463910039639883`*^9, 
                    3.7463910175865955`*^9}}]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.7463910228045287`*^9, 
                    3.74639103391722*^9}}, CellID -> 277434961]}], 
                    "ExampleNotebook" -> NotebookObject[
                    FrontEndObject[
                    LinkObject["5ufyx_shm", 3, 1]], 147], "ExternalLinks" -> {
                    Hyperlink["Bird", "https://en.wikipedia.org/wiki/Bird"]}, 
                    "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
761/761cdf8c-4d6d-4080-9d07-eca16d6e8898/download/DefinitionData"], 
                    "ShortName" -> "BirdSay", "SymbolName" -> 
                    "FunctionRepository`$761cdf8c4d6d40809d07eca16d6e8898`\
BirdSay", "Usage" -> 
                    "\!\(\*StyleBox[RowBox[{StyleBox[RowBox[{StyleBox[\"\
ResourceFunction\", \"ResourceFunctionSymbol\"], \"[\", \
StyleBox[\"\\\"BirdSay\\\"\", \"ResourceFunctionName\"], \"]\"}], \
\"ResourceFunctionHandle\"], \"[\", StyleBox[\"thing\", \"TI\"], \"]\"}], \
Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\) ask a bird to \
say \!\(\*Cell[BoxData[StyleBox[\"thing\", \"TI\"]], \"InlineFormula\", \
Rule[FontFamily, \"Source Sans Pro\"]]\).", "VerificationTests" -> 
                    HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
761/761cdf8c-4d6d-4080-9d07-eca16d6e8898"]}]]], Selectable -> False], 
                    RawBoxes[
                    RowBox[{"ResourceFunction", "[", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/b85ad128-91ec-\
4046-a27c-33ef7d019c5e\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"], SelectWithContents -> True], "]"}]]}, 
                    "ClickToCopyTemplate"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "\"\"", 
                   StyleBox[
                   "\"Wed 5 Dec 2018 14:37:10\"", FontSlant -> Italic, 
                    FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
                    StripOnInput -> False], 
                   TagBox[
                    ButtonBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                    ButtonFunction :> (Symbol["System`ResourceFunction"]; 
                    FunctionResource`DefinitionNotebook`Private`deleteMe[
                    "4501c0d9-cc12-4451-b5f6-8806b4313d4a"]), Appearance -> 
                    None, BoxID -> "4501c0d9-cc12-4451-b5f6-8806b4313d4a", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Center, Right, Right}, 
                   "Rows" -> {{Center}}}, AutoDelete -> False, 
                 GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.35], 
                    Scaled[0.35], Fit, Automatic^2}, 
                   "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
               PaneBox[
                TagBox[
                 GridBox[{{"\"\"", 
                    StyleBox[
                    TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Cloud object:\"", 
                    TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/b85ad128-91ec-4046-a27c-\
33ef7d019c5e\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/b85ad128-91ec-\
4046-a27c-33ef7d019c5e\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"], SelectWithContents -> True]]}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Visit web page:\"", 
                    TemplateBox[{
                    TagBox[
                    "\"https://www.wolframcloud.com/objects/b85ad128-91ec-\
4046-a27c-33ef7d019c5e\"", Short[#, 0.75]& ], 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "761cdf8c-4d6d-4080-9d07-eca16d6e8898", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$761cdf8c4d6d40809d07eca16d6e8898`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]]],
                     Selectable -> False], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ResourceObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"birds\"", "\"party bird\""},
                     "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"761cdf8c-4d6d-4080-9d07-eca16d6e8898\"", 
                    "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "761cdf8c-4d6d-4080-9d07-eca16d6e8898", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$761cdf8c4d6d40809d07eca16d6e8898`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True]]}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                    GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
                ImageMargins -> 0]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
          Automatic, ImageMargins -> 0, BaseStyle -> {}, DefaultBaseStyle -> 
          "OpenerView", BaselinePosition -> Baseline], Deployed -> False, 
         StripOnInput -> False], 
        OpenerView[{
          Grid[{{
             Grid[{{"Published to the cloud", 
                Hyperlink[
                "\[RightGuillemet]", 
                 "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"]}}, Spacings -> 0.25], 
             Grid[{{"ResourceFunction:", 
                RawBoxes[
                 TemplateBox[{
                   InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[
                    0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "761cdf8c-4d6d-4080-9d07-eca16d6e8898", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "Version" -> None, "Keywords" -> {"birds", "party bird"}, 
                    "ContributorInformation" -> 
                    Association["ContributedBy" -> "Rick Hennigan"], 
                    "Documentation" -> Association["Usage" -> {
                    Association["Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"BirdSay\"", "ResourceFunctionName"], "]"}], 
                    "ResourceFunctionHandle"], "[", 
                    StyleBox["thing", "TI"], "]"}]], "Description" -> 
                    TextData[{"ask a bird to say ", 
                    Cell[
                    BoxData[
                    StyleBox["thing", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], "."}]]}, "Notes" -> {
                    Cell[
                    "Some birds can say words.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.746383232110336*^9}}, CellTags -> "TabNext", CellID -> 
                    533233984], 
                    Cell[
                    "This bird can say anything.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.746390791274925*^9, 
                    3.7463907912759266`*^9}}, CellID -> 181442125], 
                    Cell[
                    TextData[{"Look at this bird: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Wi4ppaJcJJIKeSGXY7IOwDI2bKzTtgE/s461vBSAn8G5kPOknUnDHFXUflXp
aUkzeg2jB9L1bqyWBSf3ZTIDudxQPj9cLALpeLVKVKtNkE1lrFIdAXAIwAuF
kWx22EkP2RZQQ+OGNanjbjqzWsajpefU9LzsLEhOQHBCWBXbK9gLvOXljQVO
n2O1WVZbgARtHuJ0L6v6IF7xMYqXlhdYCStRSgpAlBxOSaGk6I+zCzHGG6Hm
IHjbRT0M1MnEYCoxkkiNJ6kJmp1mCGcPJ8zz4gJoYxWVkKRHZIuSbU52SG4o
WV0vWEgJsLUrGaKyQ/ZYKwW9WtKrFbVchqWRHkKhBM5cxmHTuuBojKMzWRsl
ks9mVhYDjbqvUlpAKcw6M2lr3DQGdK3PVY9p9BGZvZbVZ5s9mXR/NjuYzw4V
8yNQpTReq0w26kT1+iRQ19+oVh0nJi+M5vOjucwIUKftYTs9gWrrZMn3E6zc
vJn1GFmflvNr2bCSiciZIPmQzg5Itl+0fIS26ReMoGiGJCsMyXZEtCOCEeL1
4NWqBjgtwGoRWgnRcpRSYyklgk1KCCZ5XytJ4pQH6U1QIz3iqIlDqeRkip6m
uFlAZoUFCIRdP/sIZy0mmSklLSoZFVJzBjgb5Yxdy6er2RZqwrmUtSolo1bV
6lW1VCXRUcxzuUKLM+cYrS97cHkH18VicXUp2Gz4kc8tzhl7Im2OWPqABbxa
v2X2g3A6PZBJDwJyPjdQyA2DXrk0AgEmkDYbU4vNaajprhAhX53ALaiWxkuF
8UJuLOdAE/nsTC7vyRXms/i7iv50wW8VfFY+aOSjQK1mIir5bC3e2ihOmMwL
5GFKzdBaltKzlJqmSGebTsh2HEEqWTHBjDM6lIBYI4k9aMPYcHWKm0/QkDdK
e2LUFHqPSGw4lhhN0FMpbo7h5znRK4gBiJe9ogzIAQkjhZ6UDAqcZUdBaLh+
TpuVLDg7tdynfjbLeaNa0Go1rdbQKhXi50JZKhSkXB7uFbKW2wqSKolUEcsl
5PNSw1ev+Mr5BcIhOwkgWXvEsQfT1gBWEM46Q3lnuJAdKuWHysUxhAMIQ+AJ
qkuLM9Dy0uzS0uzyomdl0bPUmF6sTzWqU7XyWLU4WSpMFHOTpfxMpThfLnrR
rpfLgUolmCsFMqVwphhJF+JWLm5mEmo27h6URbE30YcWWLPAG0XJKMpmyVVB
1HO8lmU0hybM0wnJTvJWijNpzqb4NM0YFGGuxEiACAtJ1oMMIeJm0ZaANryd
Yjw0t8CIPl4KiUqEeFgNSjLWqKQlAFk0OdGWxLQiObqSNfVCBlTT1aJdyRHB
yeWsUS2Z1arhclarVa1cU4oV+FbK5cBZzNlS3pIKWaS3Vikr1fLaSmC5GWxU
vdWSp1yYBZBidqzkjOadEeDNZYbz2ZFCZqQIG+eHqqVRoINXm7XJFmTghVaX
5taWPWvLC6tL8xtLC2tNz0p9eqk6Xa9M1svTjeJ0tThTK883qn6iWgBDaLUa
KlVC+XI0V4xmijEnn7TzCSOXMnJJM59yCnS6xDsVOV3VXZmQVTHMkmIVJZ3Q
ZvXMFW0JhC2qdYzGmixQc1qK0sKU7E+J3qQYBHPX4cEE56fZAMUFaD7ICCFO
ikhKHBL0mKwm4GRRT0kWL1iSaMtiWpMyaTWf1Yt5o1Kxq1UEBTKZxHKlCMh2
vWHVF40GtKzVFpVKTSxX3FLoSPm0XMrIFZLeyHClWtxYC60u+xfr3nrFUytN
VwqT5fxEJTdWzI62VMqPQLXCWL04vliZWKpOgiG03JxZWbwivLG6sLWysLns
XV/xbi4urC/Or9RnV2pTzdp0szq7WIY8zZpvqRFaaYSXm+HFRqRej9Rq0XIl
mi/F8iXypUuwdQpMJs9kS0K2Kjl11WmYmUbGqWedupOupdMV2ykbVlk1yjA2
b+Y40NYcVrYZwaaFNIcOgRxd2jyww9W0lqS1OKvGGY2FKDVBSbGUGKXFGC1G
GCkqKHFZTRLpKUVnVJOWTVYyRdFSCWTHlLNZOZ/XSmX41qzWXANXgQ5xodfr
dmMp3Vw2mysQOKvVJlAjJYAakwv6PXCG1XVSJfNrS/61peBK07tY8zQqM43S
RLM8CaS1wgTWltyL40uVMaBbbcysNWeh9cU5gAXe7VX/zppvbyOwsxbYWfFv
rfhwfaM5v97wrDbmoeXK3ErVs9bwrzYjq0vR1cX4SjO21IwBdbUaq5QTxUqi
UKELFT5b5RFy2YqSb5iFhp1fzOQWC7lGPtd0Mo20U7PSUFW3S7KVg6slIy9o
GVHOcOS7cI6IdpcMwhlFdGTe4TiLc4/lRc6WeEviDJ5WKcDnNJpTKE6J82pC
0pKKQckmLVk0egwSy5Yk2QSyknHkfAFC/Jq1plWrw8AQ2NqNFWtpzV5aSy+v
p5c27cUNo76q1Ze0BkGNrCDNXrWMxIDzjVJBLeVXF30rTf9awwsgK3W832eX
q5OLpcml8lRrhXCFEK5PrjVm1pdmNpY8EGCC8O56cG8jtL8ZhMh+Lbi7GsD1
rSUY27e+6F1v+vDLr7QYXl+Jry8nVxcTK834ciPWrCWaVapWYyo1oVyTS3W5
WLuCXFp0SovZ4lIhv5TPLebyzVy2nsk20pm6ka5qxNVFGVILopYX1LyqugcR
cimNYBTyJsoQSpiMFTmZNZC0SAPBYDmVBXBW53idgXBFNnnFEkiDYctQC7Ls
pJG0cr6klppqZQkYrfoyCFuLy+nlVeDNrGxn1nYyG7vO+o69umUvb1pLG+bi
ul5f0qtVNy5IYuiVvFHKuZy9S/X5tSUfcnVjyYdoXWtMgepKbYKwrc2u1qdx
Zb05uwEDL81ur3i2Vj2ujQE2vL8ZPdx+o83IwUb0YDUM2vsroZ2V0PZycHMp
tNkMbi76iZYi28uJzZXUxlJqbSlBXN1INBt0o8HVGlIF/6CmDpWW0uWlTHWl
UFrJg3NhuZBfKcDbhUVi7Cy0aKdBu27YFc2sqGZZx4CmVdJqyUEDplWKYiWv
lLNypUCGtXIW0zFQw+ScJYAwBNqCygkag5In2wLwqmlFdlQIdwSxLGdh5rxS
KGvlRaW6pDfWzMWN9Mo25KztZtf3oNzmUWbzJLN55mycOmuH9squtbxlNtZa
HQjMrJXhZPK3ywVnczUI1CB89a5fngdMFyzBu9Wc2V6c3V70bC55QHh3bX53
bYFo3b+3ETnYih1tJ493kyc7yZO91PFu/GgrfrgZO3aBH65F99YiREuRveUQ
0WpsdyW+u5LcWaE2lpNrzcRqk15a5JaaUmNRayxZCLzGcq62nKuv5Otrhcpa
sbRaKq1WiJaLxZUiIb+Sd/MEymWb2cyik14sQFa9ZDZKeqOiN+tqvQZJtTJS
1KzXpXKeVP+0LFgib3LwMK/SEDhLBuGMp0BYyWhyxpAzFmIZZlYKRTTGWrmh
VZeNxQ1reQcwnY3j3OZJfvM8u3We277Ibl/mdm5jxcP0+pG5ums115HVhHOp
pBRzIAyh/TjYCOOdDsKAc7geOFjz7q8u7C57oO2lmd2l2b0lz97Swv7y/OGq
92jNd7juIy/bDB5tRU924md71Pk+DWFD9jups+3k2WbiZDN+vHGlo7UEmB+s
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
//ITf/Rb3/zj3/y5P/uDf/Dnf/p7/+pPfuN/+91f+fbv/jIy5Ee+cIHK+EMX
pX92L/+r9blviD2/zLb/xfL07xltvxj823+Ymfrhuig55P/4aJWyWWu2OGe3
LvK790p7D6qHT+vHz6Hq8bP68dPaydP66Yvm+avF89dLFx8tIh/OPwHeyun/
x8RbR8d1YNnef3zzeqa7A8aYbZnZltmWLZbFzIzFzMzMTCoxM1tsyZKMkpll
ijGJw5zunpk3/Z2S0nmz1l533arIWfavdu2zT9W9cpUK7AiR03cudgN2AA6c
sbJanLKepG0hGTtJ5l6IDt/1KtQEMR0UJ6L5LsqS+vT7NXKL+v26REq4iBIu
pIZCPvCpIYBXSIsQUCP4lHAuKZSND/VBxgVwcIHI3ICoiGOQBrCLbd+yBt7+
8Gb3fRR/eBekKwQvmPbM0Z35aREB/tuO7/M7dmDjnm2f7N666sCOdbs3fwIL
8o5NK4NPHyYiU10a0oPZgaleN8y7GjPLribX2PnDHdb2cuF4m/WzF3Nvn8+9
nb/07vnsu5c3Pnt1c7BZO91fce18PQuVZJRi64WlLeTEAVxMRfiGttD1DzJ3
PMjdeyH04/uZe65gEkt8N7pmZ5aW+q7Px1DySbxiuqyUo0LwNBi+DivQYwU6
nECHh3PewolQTxBb8BInQeb20Ra7UAJ7Kd/q87zYBfJBlngxsgqsvBo4EzXN
REMH2dhDs5zjUeJ5lAQBLVHISBBSY0Q0n70BuNinyEWJqGeFlAgBORz6MPh2
UfBw4ZkwLjEcIDPwIUwMFAyfirJCIiNOwBSDWIYKsW/XemjOx/23QamDEIYY
OQx4D2w+dXAr5PD+7Wt3+S3fs2315g3Ltm5aAZaGF+Lwro05qSHj3RU/fPn4
x69f3p5qeHx98PHV4ae3x+9c7L06WjPZ64JYhriAdjF/a/CzT2+8eDz9xas7
w22mVo/4wrlqPjmLR8wt55e5EOETwhxn4mHXmTV9YavGI9ZMRm24lXfwOiaa
h8pLL87PKSvNRaFysZRCMruEKUFx1Ri+FoQTaHACFUAm8NQgEk9HFhiIYiNR
YiVIXXiZA4BjhDaIlxKexZcqQidG5EKLwe0+zlhFDUHdSNK3UczdNEs/lxzP
JSUCap+xaXFCYE6JFVCiQSJq1L8In128sJZDDIH4ZROCfRczEyGQw7mEMA4+
lIkNBvkgo06RECHQxE4e23Fkv+9Dtp07fV/xwzng3b75EzjCagY148Cu9UAY
3Lvw+c8nWzYu91u/fN+OtccObg47viPu1PZGB/+f//zbP3796qevXjy9NfLb
L+9/+eHdz1+9/vz1zQfXepvs/GaP6NZM6+3Lndcmm948m3356PKbZ9fuzY7U
mJndNRqHhkYpSjCyEDZc8jAztTnrZHnwhqaglX2BfxkOXzabuWcOHcVA5aUV
FeQgS/LR+AI8qYTCRjDFGJ4KKwTCYGANQagmCLREng81ka8iCdQkkZEsNpMl
NjzQFlswQosvW3hmMDZa6FjkjJF4ADVOWUtQQ3Q0kw3tVEsPm5TAJvhQ86mJ
XGo8l5rAJcfxyTF8cpSAFCUkR8ORT4wE03IIEWx8OAsXxsD7BCfwkI3zXa7P
wATRUGcoiAAozNkpx2DjCzyx+6j/tm1+K/fv3gBrBQAHux7cvcF3VUbgYbDx
qSNbg0/s2bV5FQTy3q2rgfmJ/ZuDD20LPbQlOfwItyTqs6eX/vnP//r737/7
5cc3f/v5qx++ev7d+/nv389//e7u7elGswTLIWZdHq+HdjEzUvPp/ekv3t1/
cHPg3txAnYXWYOdVmNkCfJaJhjBT8sfY8e15AZ7w9bVBq9pO/Xnw7IahnJMX
sKnCkozMovwCFDIXgykkkEvJTARTCJx9+SAy+AiLNCSRnizUkARKEl9BhqNY
SxYbKFIrWWIhia0EoRkrMC4mOVpgxfos7cQuWBqnqCKoakiaBoq+lWRsZxET
2YREDjEJUHPIiWxyHIcUyyPGcolRHEIklxCzeAJi48+ycBFMbDgdF07DhoHg
nIEByCF0dDAVGUhCnSSXnQ45tQNKBfQHiFnYNU4c3Q6Qt29d5bdxGaSH7xuN
netBpUkhmZEngo7uPQV74sFNQYc2Bx3ecvrw1tTIkzmRxzjouP/69cvv3s2/
fzb31dvZ797e/fn9o+8+v/9qfvraWO1Iq5lLzmThM66ONz2+MTLaZpkern79
6NLju8NjnbZqCx2Og21WkwBhZ+ZUSbEtqJDewlPesI2uoNUNAR92xWyvy42w
47IVuIIiREEeqrQAiy0iksooLCSDj+HKgTD4lijUUURaskRDFWtoYjVDqKAL
VXBOkeopMgsVUIvNBKERx9eDsDwDTmDBC61YkR1Q4yQegsxLUFQDaqKmgahv
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
BjbOjDpamBLCI+co2AiDgNBSqau1iqQshFJAFNLRAhoKJGZiJRwipEedS2GQ
kjH58Tnxp9u8SrMYpeXlDTaqOh20+5eaHlyo7fSymkwkIDzZotayspWUNDO3
1MLNMrDOGpjBZlaQiRVgYQWaOMFGlo8zhLOGFwN4tYIkje9G3UQYhXJapIIW
q2enejWl8L+aG616dWvkty8f/eP7R75B9s2jX9/N/fhq5tcvbv769vqPL85/
86jr52ejX95rezlpfztX/8WtpndXq356d/Xz2ap3VyuejBmuNPHeXvQ+n3aM
e9F3OgVPx42Ph+TPxowQzoAah/D5mVSWBOnh8zYSjA19L52CzfqDM4OYxyTl
g5lZ5CIWucBnZmrh2TP79+3fuXrtqqN7NuZH+8cF7EgM3pcZeRCm3pkDm8HD
4ORTu9emhe8jFUaxsJkydomMWQrhU2uX1NmEcj6KRy0Vc/FcKkLEROlEJJ2M
qZaw9HKORc2yKOkwl3OTArPjAqilCQ0m8mij8tHV1tsXqtudrCYb7UKHrkaH
d8nQGk6RSYCyS4qs3EAr+4yNGWhiBhs4gUZWiM/Y/HAD33cHjUYQr+TF+/oG
E2IkqUpX2lsjnR1yvbzT88vnN/7767v/+c29376+/dtn1797NvH988nvno7+
9GIK+sN3D/p+e3P1l+cj39zv+PJWw/f32r+arf7yRuODfuWTc5LHY6abrfzZ
Fm6bOrdBmt5nzOlX5054EBP2ksfDqifn1K+n7GDdxdBY5PzHOYQ2Cfk7ZzoB
NpS8RTEXRiGHXCxnofLTwo4c3r9m3drdfqtKk4LiT+9MC92fH38s/vTegN2b
Tu3fcHLfeugVqNwwCSNfxUWp+WVKbpmCjXZq2C4lFV4sGq4AJiCLUsohlZpk
jHKTwKBgq6VMo5JnkNMMEpyAnF+aESGmF/TUyy72e57eGro8VH6uTt5bI682
Uvn41Jz4MzRUolOJd0oyTJwgC+cMcLZwAsDPPsj8cAs/Qsc9q2SEgMDMFZrC
Li/t2jnry7kO8Orfv7gJwfv3r+5AGvwIdfezO4D3zdW2b+dHf3w99cvzsV9e
Xf7xyeCvL8f+9u7Kj/Ojzy84H49ob3aL54dNn067X132Pr5gbdXmDrvwPZbS
6XrWxUbWhRrKnV4xmPl6E+fNBefLGRfMR0iJxcSAI4QzOBmPSFkUCZ3xh5//
QO2bhpQCIbMUlRNz7NCuDZvW7tuzgZgfnRy0JyVoP/g29vSO0KPbgvy3nty1
Ji5ov4xXBrZ0mgReM1/KKpZw0TYtT85BoQuT8MgcJrmESSzmEotEHJxBybSr
hDopzahgOnUc6BsNNpFVhheTM9q8/JEu64U+d4ub1WQnNtsxlfoiEzcRn30i
Nsg/7OQBREaIgRnq5gWZOGcsvBALLwiOGnawihpg5EZ4VekjTcKb486nVxq+
fNgPPeGHJ70/Pp/49c2lb5+Offt85rtn4z+8mPju2di38xPfPhn59dX0T76f
Gf72weBns42vr5Tf7tc8GtbfHTVe65A+GLE+GrM9veB4PlU+26fsdhPPuYk9
LmKfgzBezRorp9zqFFxsoN3vV765XPXFneZnk7ZXl5z4snhfaCCT/lc+p+Cg
3aHSyL58zvoD9WI+w97NoRbCJh5+2n/9ulWwJrPQqYTskLzIQ8mhe6BpxJ7a
HXxoG3S2gzvX8mh5DgPbbRFWu6RGOQ4eqsQEERtJxBbk5yYW5yZyaAgeDcml
lcp4RJ2CZVJxDXIGyK5iNntlQ63GwTZ7U7m8pVJSa8K4BDEVkpgaWbSTH+Ji
B7m4gdXiYAUxPDroaNgp35ePGlqoWxxsZp/SMU4bWIE1ioyJZt7bWz3fzA//
9nrmb29nvnsw8P5RP/SEX15OAc8fXpz/6c30d/MD7+91gb6fH/rx6divn138
6l73/Ij5m4eDXz0aeHGp8tWNtheX697d6353q2mwHHdrQPFgTPv4vHKkjqwj
RQ070aPVdHL2qTYN0sNKmW0WvL9W8/Xt1hfT1vlx+8NR7WwzacSDBLy40oQ/
5iBEBxmRCuFMQqcDZzLGNwcBNR3n68+/74PkwrT4M/u2b0iJO63jo3LC/DPC
99KLImHXSw73P7Vv/e5NK9et+gBZGOdQknQSpElFN6oIRgXSqsRblFijAq1V
ULHo3Ky0aAELJ2AilVy8RkI3q3lWvRDiwqZmVlqFTdX6oQ5nb6OpwU6r1uTU
qmIa1XG18pgaSYxXEl4pCC0XhHh5gU5hYGlaUHp0QGZsUFZcMLMkyCOO6a2g
PJ6u/OrR4D8+u/Ht09HPbzZ986AXFmHI2++fQ2F48MtnV75+0PHjm4vfPjn3
w8uL//kVxMX466v190ddN3qU94YNr683vrnX+/CC9/55+8Mp64PzlgejhulG
zqALN1pD6jZmXahAW9iJQlSEnZeiwEUJkeEzFYxXM9Wf32h5dsFzvo4218lq
1hfqabEi9FluSfAiZ58Qv/t5oT+nQWiQURlwBPkiGpez+PkG9DFMQdzB3Rsy
EoPkQrSIkVMce5hcGIbJDo48vmPH+iXrV/515ZK/xEeetKvJBhnaKMcYlNDQ
sHYVyqnBlOsxXh3Ka8RphOi8rHixgCiT0NVyjkHLs2j4JiXLrGNXu7Qem6K9
TtFZQW6z5beYMloNCa2ahDp1fL0iulYWUS2JqBSfrRCHVEqCq2TBUlKkgV8C
NV6ITztfr35xueHnN9e+fHju6aTv/f7qSh30hJ9ejf32euibJ32wmv34YuSn
V+d/hux9Pf3zy/N/f33hxbWOPgv6dr/qfAXl/pjt5WzjiynHbJdo2I0adCPb
zcW18qx2U9H5SuLtPqFHmOgVJXqgDTLiMFmnaNmBgvzwSl7h/Hn3Z9cqIbrN
tGglNkJDjUKknSpOPpUZfrg4/hA4GVsSv4j6jwoNnImodOAMfl7MjX/15xw2
Lis6YH9mUjB0MzGjODc1GPbr6FM79m9bvvyDf1vy4Z+Wffyno/47VRKUWYkz
AWEVwabG2zU4p45QrsNW63FVRmytCVVhQGYlh6hEWIeJY9Fy7QauyyJzWlUe
p6LKKWt0ULoced22tC5rarslrc2Q3KKPb9bE1quiamSRNfKIGml4pTzcIw4u
5wdWSSJHa3jVKsSlXuM/3l3+7sWFd9cbnky43t9u+eFB5//95fFnc1WvZxxP
R/QP+wU3O/hXm+n3hzVQce/2Cue6pJNVtMlqzrPLtXdHzE8mnG9vNj+7aH96
wTJSjuvSZnWbix2MhApJxlg1ecBZVi9P11KiOMVBhQmHMPFHTZR0BzvrQoPo
waAaCPfbEUZ6amrInsK4gOL4o/mxx2FNy40OyEuJBsi/qyxhMah9obHA2Wfp
hQpNw2czcZlsXI6YVlSSHlqYFgoTTcoqLc6Nh1176Qd/WvvJh2uW/WXlkg9W
LvvrpnXLaLg0m5ZgkmGsKpzPyRpcuQ7v1eMqzYQaK6nGgq23otrdhJzkUDE1
s9uLbnagau3YGhvs2rhOF6LLVdxXntftye9x5nbZczttGa2WVLB0szahUZ3Q
oI6uUUZXS8+Wi8PqtcmjVaS5btWD8646ParTzYH59e2jc98+6vzqduOjMd3z
Yd2Li7X3+g2fzda/nPHe61O1a/OHvPjhcvStAc2nN1qfXm2D4fjubvOra547
I5q3c3WvZ+x3zinOOZBOeniFOMnBjKnXlth46QZWCjHzRH70fkJWQNyp7UUR
B19NOFts6MwzW9t1ZVPNdEr+qayzh7IjD+dEHSqMPlKUFJKXHFtSXIglMPFM
KaY45g/UUJ59FRqZSvxfnKkL+6DvV0eSCkglicXpEWJGKTRnNqVwx9aNH/31
39au/mDT6iVLP/y3VSs+/GTZn7MSA+0aglGKBT/blXgws0dHLjcQKo2EGjOp
1kKqt2AabOgeL5FUGospiDpXhe9wlHa5QIhed2F3eW6fp7jPXdjjzut15XS7
srscqV3mlHZDYqsutlkXV6eNq1ZENanj+uwFd4askLc/v7/xy7up++NOESr2
06vVn1+vnWvlDFnRTaKsMTf1Wof8yweDsFM8GlI+HDPf6FM9u1JxqUP+09sr
//yfb377/v6X99vf3aqBHfnhqPrxsGa2T94kz6wWJXXqi92CFDE2Ap8RiEk/
kxx8MPTYpsTA/cXR/rK8MxdqOA5JUfKZbSJMsltQiEw/CYtwWpg/bGe5qVHo
MgSOyCAzpWSujMiWo5gCbGE0oMaUxoMgOhbmoC83fv/8H5dFxS9+zp/FIeZA
qnBo+VAbpFxEZPCxjz/4P58s/4vf+uUrlvz7mk8+Xrb0g+P+W3yDT4Yxq7AW
Fd6pJti0OK9+ITFMxHrgbMU1ObCNVnRXBVGAT8pKDuquxLUCZ3sxqNtd0ucp
7fUW93mKAHWvJ7/LmdXtyIIAabWkt5qTGnSxtYqzQPjZpQpoDj+/mvr+5cTX
j4e+nh/++/tLg5XCsVr+/XHzbI/h/oDh+UzNk0nzXBtjflj3csr2csZzd0gL
nK+fk90eVr+62fBkxnNvRH2liXZ/yPBwSH2xnjxVQ+gy5pYLkttMRVxkRF7U
vvjTu5OC9qWHH4wL3h11ejsp/dSAtqxamJsd6R98YH1+7JncuJOxQbvOHvU7
e3J7RmwEqgRJ4cpIfDkQ9tmYxsfRBRgqB1cUgy+OJZTELZqZjEikIJPI6FQ6
ZuG7P2wam5DJJWfCssyn5App+QJqnpKDxBQlrl3+4YqP/wwpAaGxdOmfV69c
snblUvgjYGazHOtQYQGyS4N363AePdZrxFeZiGDmRhuh0YZrsGI7vAS7tCAh
4kirHdHpQnY6fHHR6y7yES4vWOCc2+XMGXDldlnSO6zpHab4Os3ZDms2+O3Z
dPWXTwa/ftz/5ZORL+50v7/b9+ZO+/yEBYx6pUvx7Gb7/EXPg3NKmIDvb7V9
Pdfy1c2md7Pel1crHo7qXt9q/PRa+Ww3+0avaNRZMuQsutLCudzEutzGHnIh
u0xFRkqEQ1koZGTEBG5NCt2ZGnoo8vTus/4bimOPAG0JOhqC98iOT04f2BAT
uDMhxD/l7Knk6EBEQRYWjWEKVAyBmsxWENlSgIxnCElsCZ4pItD5BIBcHEss
jQe8VFQyiI5JBVxsfBqXmCYkZ/DJGQJqhoSWLWPkwlonZxdJWAX+uzeBmcHD
m9cuW7n0P9YA6o/+T2zUcbuOaJaiHAoccIZkdmmxwBn8DKFRbcED5wYLGVC3
WDEdDkyjFRUdcswszustR3Y7SiA6ut1lA54ygHyuGuEVxFbSwvrtBUO16Ika
4sUO/tyg6tn1ts/u9b+50fTptZpn16pf3Ox497D99Y2qW/2yB6O6q1286TYu
ROVct+hqG/PxuPbBpPH941FY2eZH1M+nLNe7uLMd7GstvMlKwrC9pEGW0Wko
O+fBeiVJ5aI0IeIMszCIVhiuEpRkJZ1MCtkbdXJ76KHNp/asgu6aF3bg7JFN
u9ctObR9VdrZkwVpUQRkHotJF0p8V9/xJAaORE8WKEh8BY2nJHN9fqYLlECe
xldQ2EJCaQwJEUdB+DjT0UkMTDIXm8whpgBeESVTRsuW0rOlrFwFK0fFLlax
ioxiREpswEcf/QkSY+Paj1ct+wAEqLdvXKHkF9sUaKscAxXOoUYvmhmSucJA
Xghnoi+fbUQwc5MNA+ouJ0FuMMpiBiox7Y4y4NzjQfR7inpchX0VRZ3GktFy
ytUe+f1JK7zfL7cLr3Qpbw4ZppupN/uFV7sEd0dhQdPfG9PdOSe72sm+e05w
q4s9VU+61EyZa2ffH5B9/rj7zpAcfAt9bNSNHbCWtOny+5zIFmV2kyTdzkqU
4SIlqHAlMYpeFFCcdCwj8mBZdkReWlBs2N6gQxuDD/oF79sQfWxHccyJgN2r
Tu3dmBx5BlucxaCT1FqN2mCRG80SvZmrMnBkeqZYQxeqaSIdQ2Jgi3Vsie+C
XuAMGcIUKVlCObkshoGIoyLjWKgEJjaJT0wTENJEpAxoAjJGloKZqWTlaNh5
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
PYgd+hR+uen/Aslgbkw=
                    "], {{0, 150}, {120, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                    "], "RGB", "XYZ"], ImageResolution -> {434, 434}, 
                    Interleaving -> True, MetaInformation -> 
                    Association["Source" -> 
                    "http://en.wikipedia.org/wiki/File:Petroica_boodang_\
Meehan_Range_1_crop.jpg", "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset050/86e/\
86e5ac36df28e1906bb4d8332bd62260_v001s.jpg"]], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {57.99999999999938, Automatic}, 
                    ImageSizeRaw -> {120, 150}, 
                    PlotRange -> {{0, 120}, {0, 150}}]], ImageCache -> 
                    GraphicsData[
                    "CompressedBitmap", 
                    "eJw12nd0XNeBJvgCPe0zdttuW7LETIJEIgKRM6qAyjnnnAMq55xzRFWhk\
CMB\n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\n\
N2lY5nGOXc/zWcVCBoJJHvXpGCraILyvfs+bfy/moGYL1nLaMJXWzOd1XqvQ\n\
apRl4u6JTLCcC63NRbfXvWcq4vUEejUMXwpCV8LDcSPYKqMcy5u+eLj0x4+3\n\
/ss3t/7y7Y1/++LSn7+69n9+fvFPLy9+/e7ai8u5rx/MfXm3cn/DdeuY7elp\n\
z4VJcdmF88pgJRv95Xb2yenIXJDlV8JANSY+rGp2mngmNc2gpOiVNKOGadEC\n\
Zr7LJPTZJOixXuhwh4o2AhwK8J66rsY9PotgZSaSj+mTQf24gm1Q8/02ZSHh\n\
KsSd8xOB00uZYxXP1pJjY0K8HCfnLKNUZLeEOpg29xXdI+t5/v2zkV89Of7H\n\
z6785bcP//qHp//jj+//1988+Ldf3fznTy/866vtP3669dv31z67NflsK/zy\n\
ndT2nH45xjuRkH52Nfe7R9PfPQTO7ueXEt+bBSY11aD4vh5Mq45rNwgcRoHP\n\
JvWYRB1HGzuOHOQg2lnIDvDRg4Nt+5QceMQuzgR00yl7xK1xm+WpgGki4ZnM\n\
+uNupUaAXZv0fnj72M1TmXJI7jdwSgHBlB9edg1lbIMp23DWg6zE2RvTugcX\n\
cr96/9yfv333r//y6f/4w4f/7fdP/vLr+//+q+t//vzKd+/O/u7Rwq8fzrx3\n\
2n9rwXhtSvVwWf/1NaDPf/po8/tuCKtmAKyimseZNsCs57lMArdFGHYp9FLK\n\
wQM7Oxr3MuFtEmIvHtzS2/Q2eqBRQB6Ju5QnpiPpgB6I2m1WRDy6gEVsVVDW\n\
ys7t5cBHtxYfXiidKptmI6qSm1ewY4pucNE9mncjkm5MzImJ2lEpJ2E6Lj6/\n\
6H90benrDy//l9++9//9+eV//NOT/+c39//15dYfP9r4l49Pffdw9tPLqU8v\n\
xb68FgfVfPFO+vucRWY1zQSA1TSrlmnXc50GngfI2SLyWSUptwR4qv/J3/+w\n\
6eAv1bQhAaYH0dfY27hruGU3tPuQhk9I+nR+m9pllPossoxXsVayf3T3+KXV\n\
2Dvrkc8en7pzKrE975zxS8N8+LQVPeWDFb2ItBeb9hAyPmLGR0v72EkvN+Hh\n\
pf3SuYLz6pmZbz+9+x///OL//dOz//bdLaD5//bl9r+8PPenF5v/+vE6qOa3\n\
jxeqZrdVbNEyzCqaVUWzaZjA1ucy8t0mgccs9JhFUYe46GTW7v3Fz372o46m\n\
vWJct02M0nHhhJEjuMFGWM8h/FinjEeJ+/SrU6G72wv3L8/fvTD98PLi2YXA\n\
nXP5b19sf3J3eTmpdrPBKVL3tB5a8iMybnTChUt5iWk/OxUQpoLSZFAWC6mD\n\
AaPdbfH6PbMzpbvXz//us3v//Q/P/tc/P/3r7+799Z+e/sc/PQbV/Ps/3qia\n\
vVaJTccENmRgf6uatSyHgec0CgC5xyIEGu5U4NDg1h//+If7dv1CywKvxMQP\n\
1txJM40K68CDj0CO7uts3CPjoB/fWPv1F4+2N/IrE45n9za2j6feu7ny8f0T\n\
Xz49c3U1shCSp1iD07SOnBGSdCLiDmzMQ4v6BVG/NOqXRwPqSMgYiriD0Ygv\n\
mrCHk5Zg1pedKS8c37pw7sXT63/65r2//ftnoJr/9cfq50j/yW+XOw1sm45h\n\
1zJ22McZoB6HnuXQcRx6ttPAcho4JEQPAdq5862fv/mLn2LGOh8dd92ZVles\n\
eD6ms7Npb/eRvYNth/raan1m8cdPLn38+Pz51fj2ifzNs5NffrD9xbOLV9Yi\n\
l1dDpybdKz7JBKWzTGwKAW/HFlzYzYoEpGG/LOSVRwLj0bA9HA0EE8lgKhfM\n\
FHypsi05aYiUNf4JlTvlCKWnFpZBNZcvna/mHHDK3SauU89w6miOcYpNQ3Jo\n\
Kc5xsk1LsWvJHhOdRRgcaD/YUr9n986f//SnP570C56sW08m+REFlDRS396w\n\
iwztpMC60SPtZ1fTv/rk1mrZ49TQ372+8fDKwrPba7fPFh5cqGyvJU7NBKO8\n\
0ZmRXXHOgM1AcFnYPrfE55H63Qq/HwjZG4rHAtXX81QomfIk8s5E2ZaYNEfL\n\
Wn9O6YhJbTFQjcZffG12yVxGjtPAcOqpgNY+TnRqCE4NzqbGWtRYp45oHae0\n\
NOw6vP+Xh2vffuONv6cgu89OjOfsnHPzwYKdQ4fUowaPpB1Cu4q6NBlcLPs1\n\
QnzMKXp84/j7d4CGJJ5cm//i6Zkn1xZPLcbtzNHU0FtZRL1VhTfp2CaT0GYR\n\
u10ar9/hj4UDsUQgDpiTwXjSG8s44iVrvAI8Oev9Wa0vbQhOgGpsr98Hj/pc\n\
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"]]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.746391022179982*^9, 
                    3.7463910221810017`*^9}}, CellID -> 43597922], 
                    Cell[
                    TextData[{"Fact: this bird is way cooler: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
gvn/rq6u+Oe/Pp7+8y9X2Xx1S+fXeU1t+YWLkkPFh1cOHJT4G9mLajYmVOQz
xLmE4eCQBfhNv1esozHNcTatvuMQtyNGbREq6Dr93KOanf9mssJjCI0KEZ2D
kT8vlca+tlF8zFku2papC9N4LlPGfRQF739pM/L+NfJhbWVdVVAw/eQnn34+
1CQfzdZXLH48W1YuKXn37YXxffqY4jeKE+i5g6zdsWnAY/g5e5dYe9Dsehuy
I7yOpAhXcndjXtQ44jkU/T2i0Nc0P9SfIxz93UyoPRaBBDqHzTO6mDuRrhZq
Y+3o7iGYuiCd+NDfmw/yuWYzW7+SYsAnMhHZJRhKjcIUy8jgrLFHvFsk4j06
0P0j6Z637t/fTZyz6ltnTivA2pPiKbkosxJplVKpxoaNm4tZjq8F9oPN8Zm9
+94HBbE9ejB9wfxaXsfsprLF3KgknErbxGv9qhuIMRoNVtOhK+a1VdW5B1CR
uwvn9Dvqz6Pq9nCU6XZzlOv3cJQRLhCO52zGSJ/uooyQ7GoszNC5ZxgKFqZj
bpP5yEBoR3/y3QQuF0rSk2Po2sdzNqJCt4vuv6v2/jXtqtfW/F1YHDsZljIN
JAoWv0uq1GoN+VebS4gPaU3M0FT7XVZ2QfLZ50e7sjlGhVxRyWpo5bymX4JY
x/b4dOLzuEnxHoszWlRvo6+JU+hTK9bb1K8lYLWDh/8AJfz8C1nbMdrEB8v/
akg+OtXwsbIR9sMUkzC7PnVxGoIifaBQsmdlcwVKpPv3wxXiAbojYptub4fe
dJx9n/8O9g+YiygbX8jFHEwViz82v7pl96XLvzAb0mT5YPnzsvLz0v/758fj
23r78DUvbO6bceGmscXsqDG4lLUT1flvodJQ3PL6J5KNKnYdXQl+Z3VWt9Xi
sBi/IVSa6nQqdDsw3jdWlA/Sp2bER0eur9K4vuLxXyPkg51bsDid4nl3ivsk
UJDdtlNaIDdsKCoMO0h+D/Hcz+3tqKkXquLjqhifj12LyQHxsJIp2VxjFasR
f2XDpoMVFy8rmiMf5RfOSz7+9BPDqKSkm5bWVmJ9syDays5O/igcuhi/kt4w
8rpkUx1zCzm5xU3jryXWxx3Ctdx9yA4aCDnL7cmYf6VA+6h2yJs7CXPW5PC+
/mM+tKI9X5ElysfCbHj6u0MiSLjtcFfbY2bHJPys3y3WbDfCX6nI3o5lsWmw
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
D0s+yJ59lfIiIqx8RVtenw/b1sBHfXm5tf8Sf+cM2eXKvAP8vWhf0nMcGbkc
W8gPfiI6Gcl+8ejtGoEO9u3gb+FKcmBDeoz44esxpNxPE0xzFl2tfHCAbNS1
nP0Plw96HjZPHm7drh4fpK+Ij1Lig+2X37J9+R5Y+w1FpvfdHCBdRnpmCnFU
UEK2uRDn0rfgM7Lbbw5dgj2D5+LV/tOxvk8+VvXIJh8sma8vZ/skpAclwBCS
gFd656I0awvFLw/ZfuSLdSRDPbvCTK5m+9dyPhIGDLp0/MRpR+JD2lr5uIWD
vK6pWk+c6AoBrZiPY3MHyCcZmsL2wyrhXLF6+pvkG1zO2oXS1Nfx7YSXcSpt
A67liu/4+tPi+T8YX8x+sLVycyLHoI3GjtlAzkfikGEXz5VdkJ49d6FV6asG
wX3jmn68lScR9yqp844ilvvWMrB8QAn3E6pMaz14Po1x+hD9XQYWm/+SvQsb
yOfzs3Wv2TfW2KFjp9/37N2/5sTJUkfmY5W2YC/Rmnf0PSxU1cGt/x+qd6w1
gb3/853Ry9HV0b92jzBWOx3dqROOfflln7Lylr3LU9zz6BEaA5bfYXUDx3O2
YAjFSWyPF4VcfPdaWFhY5RfHjsa1dM985tM/QuPA35Wbfwil+duRHToYjoIl
f4cR4yM8PByfH+XvMGhR/uq5nlrUosetv5/t0TDqnX+X8x7U7x/0fe71u+di
c7kfOMinC2xVlnwOm/ERERGBr7/5pl9z5wVrEGTljkBCkAmB1u4IYLC6DaZj
9c697bsA6z9AS3/fWNRpb6B1w383eJ/G/M5abG+wpQv8rdrA2dwGarmidi9L
R0fH6oKCgrNHj33V61zZ+WbnFNn6AhlfoyqC7c0o5RAaRP1zGz7nbmjp7xsP
+W24T7+TSkW/Siaizv67lfb29jj85ltPVYh1cM2aHxTfgdYQ5H+Axp73oH7/
oO9z99/xOsfb9gCu4cPFxdX45pG3F7D3cjSXD7HeWIS0kWjq+ff79w8Tt7/3
ri4fzs4uID4WtoSP/wfjUt02
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJylkL1Lw0AYxh9bpaIVBR0cHCKIg1QUXQQXq0NRRCSt4NeSpEkqpGm4pEhx
dHDt4KLi4gf+B7qJ/4AgCOrkoM4OCiKIxOcaoSA6ecfd+8tz7/vm7unVS6oV
A+A3c1O19bQQWiXbwY8F11+zXTM/7QambYoxvYFiVeYiVnWMot84DBTdQKiZ
SWVxaVlJPCCBJsQxjiHN8L30/Pws/hxvN5ANcT0oe/2d9+tozZu+ATTIS48Z
ngjIE+S59cCTXCV3GQUtTz4ipwQvSL6Suh7xk2Q74nfJIqdO8W1JsmJHnJKs
RyzfohgFUSQ75L6iUza+7yNfkjTdhSxjT235UJHBJBToKGMNDgIMMrr07Pe6
kVrdHEqsMbh7qECwwkaBtSmqZXY1GS3qJqfDDA7p/U9PfWt0JPpDcgZoegzD
1wEgsQd8boXhx0EYfh4C8TvgYrteX9qmnc/Uq3Wtbx9o3wROz+uafgyc0ePu
e08TWk2Kc8UsC3g5AdqWgE563bLy3/PI7+9zHN4CuQ1g9hLY2QX6md+++gXJ
74G4
                    "], "RGB", "XYZ"], Interleaving -> False], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {73.33333333333329, Automatic}, 
                    ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}]], 
                    CellChangeTimes -> {{3.7463910039639883`*^9, 
                    3.7463910175865955`*^9}}]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.7463910228045287`*^9, 
                    3.74639103391722*^9}}, CellID -> 277434961]}], 
                    "ExampleNotebook" -> NotebookObject[
                    FrontEndObject[
                    LinkObject["5ufyx_shm", 3, 1]], 147], "ExternalLinks" -> {
                    Hyperlink["Bird", "https://en.wikipedia.org/wiki/Bird"]}, 
                    "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
761/761cdf8c-4d6d-4080-9d07-eca16d6e8898/download/DefinitionData"], 
                    "ShortName" -> "BirdSay", "SymbolName" -> 
                    "FunctionRepository`$761cdf8c4d6d40809d07eca16d6e8898`\
BirdSay", "Usage" -> 
                    "\!\(\*StyleBox[RowBox[{StyleBox[RowBox[{StyleBox[\"\
ResourceFunction\", \"ResourceFunctionSymbol\"], \"[\", \
StyleBox[\"\\\"BirdSay\\\"\", \"ResourceFunctionName\"], \"]\"}], \
\"ResourceFunctionHandle\"], \"[\", StyleBox[\"thing\", \"TI\"], \"]\"}], \
Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\) ask a bird to \
say \!\(\*Cell[BoxData[StyleBox[\"thing\", \"TI\"]], \"InlineFormula\", \
Rule[FontFamily, \"Source Sans Pro\"]]\).", "VerificationTests" -> 
                    HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
761/761cdf8c-4d6d-4080-9d07-eca16d6e8898"]}]]], Selectable -> False], 
                   RawBoxes[
                    RowBox[{"ResourceFunction", "[", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/b85ad128-91ec-\
4046-a27c-33ef7d019c5e\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"], SelectWithContents -> True], "]"}]]}, 
                  "ClickToCopyTemplate"]]}}], "", 
             Style[
             "Wed 5 Dec 2018 14:37:10", FontSlant -> Italic, FontColor -> 
              GrayLevel[0.5], FontSize -> 0.9 Inherited], 
             MouseAppearance[
              Button[
               MouseAppearance[
                Mouseover[
                 Graphics[{
                   GrayLevel[
                    Rational[64, 85]], 
                   
                   Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                   
                   Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                  PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                  None], 
                 Graphics[{
                   GrayLevel[
                    Rational[128, 255]], 
                   
                   Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                   
                   Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                  PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                  None]], "LinkHand"], Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`deleteMe[
                "4501c0d9-cc12-4451-b5f6-8806b4313d4a"], Appearance -> None, 
               BoxID -> "4501c0d9-cc12-4451-b5f6-8806b4313d4a"], 
              "LinkHand"]}}, ItemSize -> {{
              Scaled[0.35], 
              Scaled[0.35], Fit, Automatic^2}, Automatic}, 
           Alignment -> {{Left, Left, Center, Right, Right}, Center}], 
          Grid[{{"", 
             Style[
              Grid[{{"\[FilledVerySmallSquare]", "Cloud object:", 
                 RawBoxes[
                  TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    
                    "\"https://\[Ellipsis]/b85ad128-91ec-4046-a27c-\
33ef7d019c5e\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/b85ad128-91ec-\
4046-a27c-33ef7d019c5e\"", 
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"], SelectWithContents -> True]]}, 
                   "ClickToCopyTemplate"]]}, {
                "\[FilledVerySmallSquare]", "Visit web page:", 
                 Hyperlink[
                  RawBoxes[
                   TagBox[
                   "\"https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e\"", Short[#, 0.75]& ]], 
                  "https://www.wolframcloud.com/objects/b85ad128-91ec-4046-\
a27c-33ef7d019c5e"]}, {"\[FilledVerySmallSquare]", "Resource object:", 
                 RawBoxes[
                  TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[
                    0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "761cdf8c-4d6d-4080-9d07-eca16d6e8898", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$761cdf8c4d6d40809d07eca16d6e8898`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]]],
                     Selectable -> False], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ResourceObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"birds\"", "\"party bird\""},
                     "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"761cdf8c-4d6d-4080-9d07-eca16d6e8898\"", 
                    "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], ""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "761cdf8c-4d6d-4080-9d07-eca16d6e8898", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$761cdf8c4d6d40809d07eca16d6e8898`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True]]}, "ClickToCopyTemplate"]]}}, 
               Alignment -> Left, 
               ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], 
              FontColor -> GrayLevel[0.5], FontSize -> 12]}}, 
           ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
           Dividers -> {None, {-1 -> GrayLevel[
                Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]},
          False]], DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{25, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False -> GridBox[{{
               OpenerBox[
                Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                Automatic, AutoAction -> False, ContinuousAction -> False], 
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   TagBox[
                    GridBox[{{"\"ResourceFunction:\"", 
                    TemplateBox[{
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "74e60450-d5b6-4ec5-8d2d-bc72fa93466b", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "Version" -> None, "Keywords" -> {"birds", "party bird"}, 
                    "ContributorInformation" -> 
                    Association["ContributedBy" -> "Rick Hennigan"], 
                    "Documentation" -> Association["Usage" -> {
                    Association["Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"BirdSay\"", "ResourceFunctionName"], "]"}], 
                    "ResourceFunctionHandle"], "[", 
                    StyleBox["thing", "TI"], "]"}]], "Description" -> 
                    TextData[{"ask a bird to say ", 
                    Cell[
                    BoxData[
                    StyleBox["thing", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], "."}]]}, "Notes" -> {
                    Cell[
                    "Some birds can say words.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.746383232110336*^9}}, CellTags -> "TabNext", CellID -> 
                    533233984], 
                    Cell[
                    "This bird can say anything.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.746390791274925*^9, 
                    3.7463907912759266`*^9}}, CellID -> 181442125], 
                    Cell[
                    TextData[{"Look at this bird: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxsuwesbGtanmnNCM2ME9B9w0k755xr78q5Vs6xVuVcO+ecT87h3nNTN03T
TROa1ISGBjEYDGNjGzBxAM80A5LtwYGxRza2ZDTSzPuv2udyNUJ6z6+/VtXe
R+dZb73f9/1Vp6u8rtb/u7/1t/7W9v+IRS3tR7e2Sofad+GBsba92FirVZm1
nVqjtrVQ/u9x8UP8OcAfst86WFrbrS1t5RorZrkm54qclU0q6ahs+iR1XlJn
JGNGseZMay7tLNhZbzrnc4qBdMFv531WxmNmZvT0pGKPyuawqPezahfEq92c
0sVIUA+U4LpiXGeEaQ8kbvpiUNtC5Lo38u5C+B1v+Lo33OaPtvkit3yRG63V
H7v+RtcgX/yaP3E9mLgZSt4KpdrCVGeY6g6keqBgojsQ7/LHOr2RjoVwuyfc
uRAb8MSGFxLjC4nJ+fjYQmzYGxvwJ4b8CawDwURfKNkTTnaFUl1BqjfKDcX5
saQ0m1Dmk+pCSvWl9CBtJWibYzISnVWonMLmDa6Y5spZupRji3kql0mknUQ6
G3PyLSUypXi+lsw16Mwim1uWS4tmZTlfW64trW1sbB1ub1/sb9w73tzaq61t
lRbXnPqiXqqJ2QJr5yjFCbuc58BZMWZVe9ZIe6zMAtg6+WCmEHDy3nTeY+dm
AdnITKjWuMu5l9c6AbnFmZU7WbmbFjsTXEeMaYtQbS3O3ugNghecQzewupxv
XnGOXsNTvui7rq5hBedA/HpLwcSNUPJmONUGShBotzj7oi7k4C2icLcnQlDP
x0cgLxQd8sUHA8nBULKXQKa6o1RPlO6PsAMxfjghjKeUGVr10nqA0vyUEWLs
JJvh+LzM5lWuoHEFXSiZfNHi8g6TT6ccO5m2k1Y66eRAm6zZYjJbTmarVKaa
cGp0tsHnm1ppya6tFpqr9aXV1ZXmzvri1m5xZT3fXLarTaVYFTIF2nDixM/G
vKhMS9q0as60OBMzF/xO3p/JLWQBOT8NGdlJzRnX0mOKNdTizKkdgPyGcyct
tqf4dnAOp24EU+B8fcF18nzo7fkgUF8D3kDsCnILrzfyDtSi/Ybzu1AofgMC
bXg7GG+DArF2vDtwpxZCt+Z8N2b91+cCN+dCXQvRfhjbGx/2tfwchY37ATmS
6gTkODMQZwfjwnCSH05KY+BM6QucEQRqxgjz6aSQYcWCJOYVsagKBQ3ic5DB
ZU02Y1COnbJtAjntEDmFVLpAZ0p0ppxMl+NOM5FZTGYW+fyKWlxOV5fylXq5
WtnYyi2vpWFmhEa+zDn5JOFsBSV9FpxlfUazZnV7xnTmWpxdyPOZ/AwEzlZu
Ss9M6M6oYg0IRjevdYAzIay0Q4zcRok3k8Ktz3KeJ5DfAudWbhC8seveK8jv
+uHwyFuQC/kqOgA5mLgWgq443wjGrgciN/3hG7hT88Hr8/4bHt/1Of+7c/7r
cLU33OOL9PujA4HYYCDeG4qDcC9EIFPdCbY/wQ2lhBGIkSdoxcNoPlb3cpqf
tYJcOiZmKCnHC3mRoM4rfE5gsyKbUThHA2rC2UmDMGiTNZ2jnCI4U9lSIlOJ
ZxrJ3GILdcquM05VytaMfGN9M7u0nK41VJg5W2TSmaRuhxUjJGozgnrlZ3C2
0rO2M4dAzmTmMjlX+Zl0dsLMjhuZES0zrKQHBbOLNzo53UVNOLcx8i1autXi
HKFugg+ozkfeBueF8NtvHEui+LOc/dG3iQjhK85XqKHY9WDsBnE4Xh9+1xt6
Zz7wlsf3tsf37pz3nTnvW7MLn8dmPnDLG+z2h3uDMQI5nPwMZ6YnCcj8MCWM
0PIIrU6ymoc3fBAH2SE+HRaySTFHS1lWzHJcloW9eYfhMgQ1TfxsJmwrbtlY
IXBmnBKUyhQRHYAczy1FM82IVQvppYheiJmFpFVa28gsrljVhporsU42YTsJ
zYrIupdw1qZanE3CeRqynRnHmU1nZp3srJ0Zt7PDVmbQyA7p2RHZ7hOt7ivU
WiertTPqFecEf/OKc4xkLzIBkLG+YXjdF7v+JpCvXUEmnD99waeob7icXdTR
677wOwvBt73+zy/43p73vtWSh3B+C/YmsR/pBORgvCuU6HZRd7uc+1pmpsRR
Rh5n9WneWBCsAGcHsApORMhE5XxSzMbFbFJwUpydwCpmGCHDs45EpxXKVhOW
FjO0lGkkTBOWppw8nSmAM1KacM40Yk49ZJaDWt6vZANqDsBX1p3mskkqYDFp
Z+O6HVVNv6R7RHUKkrRJzZg0rEnTJrLSU7YzbWcm7cwoINvZISPdTzg78HO/
bPWIRpegE0u3OFPyzZR4M8G3RZhbyA14ssX5rxMYhOPIjZugSpI5BjN//m/i
TDwPzi5qIn/kWsvMC77PfZZzS7jiDV7zh28Fo51QKNYRjne6nLtiqa4E35cQ
h8CZVSZ5bRZOFqyQaAfFTFjKxuR8ApJyCcI5kxDSSZLYWQbFkbYFyhJShggl
DCmhK0lDT1pwdRquTtr5ZLoYT1ejVjlilkJ6wa86ATntl2zQXlq1a4tqscw6
uZjtxNzQ8InanKhOtKTqE7o5YVgThj2GFSXPTA+bzoCV7ceqZwZb0px+xe6V
zG7R6G5xppVbFMws3oq7nIOp6/7EuyAJtQocNgvx6/N4GHddHSctXCD2lkv4
nTec3RUNSfQKOJwMIdjn/e94/J+f831uzrUxIbzwjsuZkPcH3wmGb4TCbeFI
eyTWFo23h+Pt0WRnLNWX4AdS4hBN/DzBaFPws2iBR0DNRuVcVCkkIQnKU2LO
dbJD8xmacVhwThocbfCMzlM6F1e5pK7A1cgQeDRmpGNWNmbmwmY2ZGT8etor
2z7R8nKWT0wvrpqVhpwv0uBspEOaFUKnQdpmeVJQRgWthXpMN8d1a1S1B4nS
/aBqZvrAWcv2qVlwBvABOd0t2V2iBT+3Ec5qe0puTwjtMe4WOAeS17zJd4Ea
rgY94HV1DahJHXRpE33q5Dga6WtBN6K9CHbi+StXoznxhm+C85tAfouEs+9z
4IygRkFcCFwPhK6DMwolymWLcyzRQTjTvUluIMUP0uIwI43B0qw2K9g+KR1S
MhE9H1cJ55RSZMQiK+R5McfyOc41M0dZfNJgKZ0ooTNxjYGr46YeN4yooUcN
M6pZUTMTMZyQZvsUa0EyvILp5TUvqzaX1EqdyxXjdiak20GY+U1oTPDyGC+P
gLZsjMnGqGoMqgZM26dZvXq6R3N6QVvLDhA5/Wq6T7EJZ4g32t9wdv3scg5R
6DeugzZQ+wleIp8bzkB6BZkY+52/Lnau/O4L/PF2jDMwNppAsgmj0t3w+t+Z
9b3V4kzC2feu13eNhHPwVjB0C2Ymfo7eisRuRuO3Isk2cI5TfzNn2QnDz1ox
pRdptcgoRU7Kc+AMyEyGY9I8ZbEpkwNh+oozm9D4VnokdC2iKWFNjehGBE5V
jICkLQjqPKd6WIWIketNuVhJ5XJRywnrVuBNaEwJyrggDUOcPCioQ4I2IBl9
qtmrmwSySjj362Du9LeEK+DsWrpDMDuAmtHaKaUtKbWBc5RtC9M3P4P6ujdx
HU5umbmV0rjY4tzK4U8hk32iIxDvxtwHoa4FsIl2ACZ8O+d/m0B2nQzC88Gb
/kBbINgWDLUjMVqhEYu1w8+RRFeU6gPnFPs3cBYzQSUf04qJFmdIyjPoN0hT
5wjgjNAAZ/gZK5EhuyktENSaHFXEsCoDdUjVArLiFyQvJy0wsoeR5mhphhKr
TalQjmdzIcvy67pP1jyCPMXLEyDMiwMQJ/Szci+n9Ehqj2J0q1aXZncT9zpQ
j5EeMIixe1UXvup0yelORAdQI6WvOPNtMa6dRDRzM0Df8FPXIV/yBlBfQW65
mnB+xx1JcC9uXAn7RJs/2e0jox+Z/lqDti/SjtnEE7gBzq2saEFeCLb5Qx3B
UEco3BGJdgAvSYx4VyzeE0v2J6jBJNOfYofQ1AFyi7Ogz+HNDT+7nImf9SKr
FXklz0tZDm1GCzIJZ4tL2Txli3RaomwZWQ1XJ3UhoYkxVSKWVpSILAUF3stx
HpqepZk5iptLCR5KrNfZYgljelC3FhR9XlamRWlMEIaAl+F6Ulw3LfRyYhcv
dYpqZ4szhJLX4gwnG043yZDM1eqi7m6lNEohOEcFcIalb4bYG0Hmegs1GAIs
SYyrWHAfJojbMZKg0/4UdSjVEU71fvY0wz3QaEfnBrCeAAmKBf8t9MyAvBDs
8IW7AuHuSLQ7GiMKx7ujyd5kaiBFESWZQXBmhFEWTZ08zitTouGRzHnSFJB8
ThoFSiswQK3kWcltnlmbIZwdgpdxZNaRGRvdnegam0+aaD/kuC5GNCmqyBGJ
D3C0n2EWUqm5ZHImSc1Q9BzN1+oUOGdzQdOaV7VZUv6QFcIgzXZTTFeS66CE
DlZo5+V2Ue0gnI1O2QJJwrnlYcI2061ne/RMH1byMN3TSmm0dqQUui1HC3WE
uQHOboDcbHH2k1i4eaUkmfXC5MiICK8JJdrJcQTVE6H6wuQIiPTDUOvoyZ24
bwCvN9S5EO7EbLIQIuNJINoDzrF4bzTRB8VTAwm6xbkPnCluGJw5aZxXJ8mM
oM8q5oJiezXHr2WjLdSQkqMwGKLZ4CyGnCw5MpdVIUwrTFoCedYSGJMH6laA
xDQuLnFhkQlwKR+TcjknPKnULBFdq6eInzN+y5zX0GZIYy7kHortSDHtFNtG
sTcZvo2T2sBZ1tEet6N5g5/d6OhRWzZ2evVc72c5w9KIDtaN6JTYFhduxvgb
Ue76G863AtQt1EE0Ei0hHILJW1AoiU67jRwWUWQTSZEOIcr0gjMGOnDG0OFG
dKssdiBAYGAyZYf7vaEBX6gPm0CkD5zjiT7YmECmBltmBmeGHWa5EeJncYzE
ozKJWUzR51RrHpxVNAPZhJaDknI2JaZp9M+cTXFpDCkyh9E7IzMZiUmLjMXS
JkMZdEpjaIPUR9J+KGxE4UIS42MpL0UBNVlpGhlSqycKxZCd9prWnKaNSdII
xw0wMDPbkaSupejrSfp6SriOsU5QCGfZ6JBsYHzTcuS6gJdsQDg7QFydJdfd
6GhHRL/pOm4AdZi7HuZuoiACcijV5kvehAjnZJs/1R6gOoI0OfOM0F0RugMK
0T0gHOf6Y8wAFKX7W5xd1B2ohkThTrjXHxnyRwf8oSECOTRIOEd6wTmRBOr+
FOEM9VFMb4szL4xx0igaKpR7wpmcSXo0x6u4qNVMhKDOUlKG4jMpwWF4B9VQ
4tMyZ4uIayQJY9G0nqKMFGMwLQF1SuPjqhCVhZDIBXjOz7EQshqq1cKFUsBx
FkxzVlUnRXGQ43tppoNlblLMjRR7LcXcYISbnHyDU9sx60n6Lckk0QHfIpmt
bK+R+2szY29k+9UMUqUVHZ2IjoRyMyndRHq0LI2IBmo/fcufugXOwWQ7EhiE
g1RviO2NsH0AizXK9WODGRmK8ViHo9xgmOkPp/owTRMBeKwrEOkIRvsD0eFA
dMQXHgRnKBgeCMf6kBuJZP8bJw9Q9CAgQxw/6nIef+PnSdmc1iwPLK2mfXom
YGTCei7mWpqWsjQ5vssogqOANu9wfJrmbRYmZ6wUbSZZk24JGUKZUspQ45oa
U9WILAclKSyJYUHwCVy1FiwU/On0vG7MyOqYKOJ297BMG81eh5kp7jrNE868
chO5wWsdb3KD1Dsz00U4Z/uN/ABZc71mvs/MYWbpQ57gNRjDWe1Wyp2+4ecI
f4uUQrotQsG9hDMEG8O3IBxmByM8UZQfjgsjcWGYHF26nCFcibIjEWY4zAwA
dSTZF070YpqGpYOx3kBsEJZGbnjDfeT4KNIXivZG4v3gDD+DcEs0M8TQQxw7
IggjgjguShOoR4o6qRjgPOtyXkB66Jgz0EvnkmqelXO8mBVczrKQEUWHF9Ic
HC6QMKG5FnOLITFii5StUpaJsSWmm1BUM2JqqwMRGrXQFWdzyuU8CM4c3dby
Mzi3wllQ2gGZyOhscYafARkCWIhwzvZb+UEIwPGsksYrO1uWJgO40I7GA6Uw
zLUhE8J0W5BuhwJ0d4DtD/FDEXEsLo4npLGYPJGUp5PyZFIaJUfE/HAKEkZj
3GiUHQPqKD0UoQaJkn3k9D4xGIwPtfzcsnSAcO7/lHPLzFec2RGeGxV4JOQY
IMvKlKxPgbNqz2r2whvOES0TRx1Ea6fkJDmvQFJOFrOSlCECbRLdoJ3mwBk+
J0cfBLKetM2klY6bDoZxAI9rWlRRwoRzuFj0OY7HsKYVbdzl3EX87Irl29Bs
CHKXa+ZO18+dSGk9TWRmelqEiY3zfSCcLg7bhSHs9WwXafCsLlbvZJR2SmpP
ih1AjZkFvXSY7QgxWDuhINMTRCAIoxFpMu7iTSgz8SvOY3H3lNjlPALOMW7c
RT0apkegSGo4nBwKJ0dC8dFgbMQfGSZB7UZHi3PM5YyUbkUHOLME8rgojEsi
MTMmMhLO5hxyA7MyUTqoOjE1k1JyjJIXCOScruSNFmo5C4noq+UMR7ydEYW0
gJU0e2nThWwl007CyiRMwjlpGAlVRWLDzy7nWdOcVNVRURoAZ45tpzkiTuwA
5BZnSetsre6o0onxxEQmZ0hQWIV+CJCd0ghZCwNmnhRE2J63MLC0wdK03JEE
Z7Y9xhG8Ea4rzPVEIB6Qh6PSeEyZBuGUMkWps0l1llKnU9Ik7E2Jo5Q0nBBH
Y8JYjJ+KcZNQi3YkNQrILbVQI6iDyOrIUCgyGI4NoKkj48kVZ1ia+JljiZ9b
qOFnVZvR0G8YHt3y6XZQS4dVJ644lJzjlIIsFWWpoIt5Xc5pQK3klBZqJctj
A4cjUqQsOf+nM2ly8m+RNWGnk1YGe8qyUroO1M16sFT25bMeOz2l6aOSNMTx
3Qx3i+E7ODhZ6cB4An0KGWZWTAIZ0jMkMeBeuzgAttnSUK48ihX7dJ7ENRo8
MoNr7rESOItQV4LvSQr9MbE/LvbHhD6EcEKaSGrTCW0WK6VOpvQZQMYGlgbq
lDxOS2PwdlKcigvTcRd1lJuOMlNRagyoW/qUdgt4KDYSjg61LN2aBFucaWaY
oOZHP7W0os5gcEBrp5l+zQq0OKMCwsxKQZWLmlQwxJwJ1EpeV4uamle1gtLK
EyGn4jqe5bNp2nGodCbh4iWc7WyKyIbJKcNYaoYr1UAxP+9kZgxzXJVRjrtZ
rkPgO2WpS1I6ZbVL1rtBGBHd4oy524Xch8Swc32gmikOZksj+cpIoTqaKw9n
C4O4iKdIE2L3YboRdPKJIS31pKRuSuyjpMGkPIg1IQ0ghOFhGDilzYEwrU0R
KdPkYouzNMnIE6BNyTNJcSbRQs3PRrmZCD0Zo8dj1GQ0NRFJjkPhxFgoThSO
jYXjo5HESDQBV6OLHkrSIxQ1As4poObHeAHpMSFKk4I8IyqzsuZRDZ9qBlUr
ojhJOcPCtPAw2Lb8LOY1tWBoRVO/ko6HuAVS0ZELWS6fZXJZ2smmnAzwArL7
wRb5bCuVtui0trwYqVR9xfxcJjtrWhOaMswLPTzXIQpdstSjKl2K1itrvZJ2
xVzVu1ucERoEcq4/VxzKl0bzxfFCeQTKl4ZxBSKos0NWelA1e0WjW1R6BbmP
kftpeYBSRhllGKLUYVqdYPTZlOFhdS+jexhjinnDmZKnAJl2lZRmicCZn4WS
wlycm4nTU3Fmgqz0dIyaCVOTodREKDUVTE4GY+NAHUlAQ1A0NZighiEaqOlR
lh3nuQmBRx87LchzouIRFI+s+xUjpJgROY0JhUG9k7PqVTgXiQjkkmWUbbNs
6yVbK1pKMSMXCxBfyIEzk8kANVwNEcK2TdsEMm3JK4uhes1bKfnAGdGhakOC
2MvxnaAtSj2y2qPqULeidcmqa2azy7B7LKcnnSWQYd1icbhUIk4uV4ZbqAnt
yggcDtRWekCzYGnyqyRliNeGWXL6N8ar46w+wWjjAMva86zl5UwPZ85yxgyr
TwM1ILfEKtNYGcJ8uoWa5mdSHKFNsXNJdoYA56finCfGzEdomHwmmgLwqRAx
+UQ0MRGNjyQSg+g9YtQQlRoGZxf1JMdN8dIsOMuyR5QXJMUvq0HFjIGz5LBS
RpDecFYLplYwjJJlupCB2ihiTauVnFLKK6WSUCjw+TxczWcJbcqxGctCXNCm
iT4EJXJlOdioBcrF+Xx2Dpx1Y0SSeyWxW0Ttu+LcTTysEtSArFvdltOXzg5k
8kPZwjDcWy6PVipjpeoYVuyLlVGsLWPjBenMkGkP6Gafqvcp2oiEEmCOyeak
ZE1DgjXNW3MEsu0TIOzt2RZt4mp1EsYGZ06dIRt5llY8lDzHiPO04EmJHoqH
FuDtpOBJCgspwR/nvYiUCD0F2uHUbNiNlGhyPApLJwYSidF4CukxlmLGXc4z
LD/Lix5ZnBckyCupQdmIKjbxs+iIxM8ZTcubsC7AWpU0BM5W2TFLab3qaNW8
Wi4ppaJcJJIKeSGXY7IOwDI2bKzTtgE/s461vBSAn8G5kPOknUnDHFXUflXp
aUkzeg2jB9L1bqyWBSf3ZTIDudxQPj9cLALpeLVKVKtNkE1lrFIdAXAIwAuF
kWx22EkP2RZQQ+OGNanjbjqzWsajpefU9LzsLEhOQHBCWBXbK9gLvOXljQVO
n2O1WVZbgARtHuJ0L6v6IF7xMYqXlhdYCStRSgpAlBxOSaGk6I+zCzHGG6Hm
IHjbRT0M1MnEYCoxkkiNJ6kJmp1mCGcPJ8zz4gJoYxWVkKRHZIuSbU52SG4o
WV0vWEgJsLUrGaKyQ/ZYKwW9WtKrFbVchqWRHkKhBM5cxmHTuuBojKMzWRsl
ks9mVhYDjbqvUlpAKcw6M2lr3DQGdK3PVY9p9BGZvZbVZ5s9mXR/NjuYzw4V
8yNQpTReq0w26kT1+iRQ19+oVh0nJi+M5vOjucwIUKftYTs9gWrrZMn3E6zc
vJn1GFmflvNr2bCSiciZIPmQzg5Itl+0fIS26ReMoGiGJCsMyXZEtCOCEeL1
4NWqBjgtwGoRWgnRcpRSYyklgk1KCCZ5XytJ4pQH6U1QIz3iqIlDqeRkip6m
uFlAZoUFCIRdP/sIZy0mmSklLSoZFVJzBjgb5Yxdy6er2RZqwrmUtSolo1bV
6lW1VCXRUcxzuUKLM+cYrS97cHkH18VicXUp2Gz4kc8tzhl7Im2OWPqABbxa
v2X2g3A6PZBJDwJyPjdQyA2DXrk0AgEmkDYbU4vNaajprhAhX53ALaiWxkuF
8UJuLOdAE/nsTC7vyRXms/i7iv50wW8VfFY+aOSjQK1mIir5bC3e2ihOmMwL
5GFKzdBaltKzlJqmSGebTsh2HEEqWTHBjDM6lIBYI4k9aMPYcHWKm0/QkDdK
e2LUFHqPSGw4lhhN0FMpbo7h5znRK4gBiJe9ogzIAQkjhZ6UDAqcZUdBaLh+
TpuVLDg7tdynfjbLeaNa0Go1rdbQKhXi50JZKhSkXB7uFbKW2wqSKolUEcsl
5PNSw1ev+Mr5BcIhOwkgWXvEsQfT1gBWEM46Q3lnuJAdKuWHysUxhAMIQ+AJ
qkuLM9Dy0uzS0uzyomdl0bPUmF6sTzWqU7XyWLU4WSpMFHOTpfxMpThfLnrR
rpfLgUolmCsFMqVwphhJF+JWLm5mEmo27h6URbE30YcWWLPAG0XJKMpmyVVB
1HO8lmU0hybM0wnJTvJWijNpzqb4NM0YFGGuxEiACAtJ1oMMIeJm0ZaANryd
Yjw0t8CIPl4KiUqEeFgNSjLWqKQlAFk0OdGWxLQiObqSNfVCBlTT1aJdyRHB
yeWsUS2Z1arhclarVa1cU4oV+FbK5cBZzNlS3pIKWaS3Vikr1fLaSmC5GWxU
vdWSp1yYBZBidqzkjOadEeDNZYbz2ZFCZqQIG+eHqqVRoINXm7XJFmTghVaX
5taWPWvLC6tL8xtLC2tNz0p9eqk6Xa9M1svTjeJ0tThTK883qn6iWgBDaLUa
KlVC+XI0V4xmijEnn7TzCSOXMnJJM59yCnS6xDsVOV3VXZmQVTHMkmIVJZ3Q
ZvXMFW0JhC2qdYzGmixQc1qK0sKU7E+J3qQYBHPX4cEE56fZAMUFaD7ICCFO
ikhKHBL0mKwm4GRRT0kWL1iSaMtiWpMyaTWf1Yt5o1Kxq1UEBTKZxHKlCMh2
vWHVF40GtKzVFpVKTSxX3FLoSPm0XMrIFZLeyHClWtxYC60u+xfr3nrFUytN
VwqT5fxEJTdWzI62VMqPQLXCWL04vliZWKpOgiG03JxZWbwivLG6sLWysLns
XV/xbi4urC/Or9RnV2pTzdp0szq7WIY8zZpvqRFaaYSXm+HFRqRej9Rq0XIl
mi/F8iXypUuwdQpMJs9kS0K2Kjl11WmYmUbGqWedupOupdMV2ykbVlk1yjA2
b+Y40NYcVrYZwaaFNIcOgRxd2jyww9W0lqS1OKvGGY2FKDVBSbGUGKXFGC1G
GCkqKHFZTRLpKUVnVJOWTVYyRdFSCWTHlLNZOZ/XSmX41qzWXANXgQ5xodfr
dmMp3Vw2mysQOKvVJlAjJYAakwv6PXCG1XVSJfNrS/61peBK07tY8zQqM43S
RLM8CaS1wgTWltyL40uVMaBbbcysNWeh9cU5gAXe7VX/zppvbyOwsxbYWfFv
rfhwfaM5v97wrDbmoeXK3ErVs9bwrzYjq0vR1cX4SjO21IwBdbUaq5QTxUqi
UKELFT5b5RFy2YqSb5iFhp1fzOQWC7lGPtd0Mo20U7PSUFW3S7KVg6slIy9o
GVHOcOS7cI6IdpcMwhlFdGTe4TiLc4/lRc6WeEviDJ5WKcDnNJpTKE6J82pC
0pKKQckmLVk0egwSy5Yk2QSyknHkfAFC/Jq1plWrw8AQ2NqNFWtpzV5aSy+v
p5c27cUNo76q1Ze0BkGNrCDNXrWMxIDzjVJBLeVXF30rTf9awwsgK3W832eX
q5OLpcml8lRrhXCFEK5PrjVm1pdmNpY8EGCC8O56cG8jtL8ZhMh+Lbi7GsD1
rSUY27e+6F1v+vDLr7QYXl+Jry8nVxcTK834ciPWrCWaVapWYyo1oVyTS3W5
WLuCXFp0SovZ4lIhv5TPLebyzVy2nsk20pm6ka5qxNVFGVILopYX1LyqugcR
cimNYBTyJsoQSpiMFTmZNZC0SAPBYDmVBXBW53idgXBFNnnFEkiDYctQC7Ls
pJG0cr6klppqZQkYrfoyCFuLy+nlVeDNrGxn1nYyG7vO+o69umUvb1pLG+bi
ul5f0qtVNy5IYuiVvFHKuZy9S/X5tSUfcnVjyYdoXWtMgepKbYKwrc2u1qdx
Zb05uwEDL81ur3i2Vj2ujQE2vL8ZPdx+o83IwUb0YDUM2vsroZ2V0PZycHMp
tNkMbi76iZYi28uJzZXUxlJqbSlBXN1INBt0o8HVGlIF/6CmDpWW0uWlTHWl
UFrJg3NhuZBfKcDbhUVi7Cy0aKdBu27YFc2sqGZZx4CmVdJqyUEDplWKYiWv
lLNypUCGtXIW0zFQw+ScJYAwBNqCygkag5In2wLwqmlFdlQIdwSxLGdh5rxS
KGvlRaW6pDfWzMWN9Mo25KztZtf3oNzmUWbzJLN55mycOmuH9squtbxlNtZa
HQjMrJXhZPK3ywVnczUI1CB89a5fngdMFyzBu9Wc2V6c3V70bC55QHh3bX53
bYFo3b+3ETnYih1tJ493kyc7yZO91PFu/GgrfrgZO3aBH65F99YiREuRveUQ
0WpsdyW+u5LcWaE2lpNrzcRqk15a5JaaUmNRayxZCLzGcq62nKuv5Otrhcpa
sbRaKq1WiJaLxZUiIb+Sd/MEymWb2cyik14sQFa9ZDZKeqOiN+tqvQZJtTJS
1KzXpXKeVP+0LFgib3LwMK/SEDhLBuGMp0BYyWhyxpAzFmIZZlYKRTTGWrmh
VZeNxQ1reQcwnY3j3OZJfvM8u3We277Ibl/mdm5jxcP0+pG5ums115HVhHOp
pBRzIAyh/TjYCOOdDsKAc7geOFjz7q8u7C57oO2lmd2l2b0lz97Swv7y/OGq
92jNd7juIy/bDB5tRU924md71Pk+DWFD9jups+3k2WbiZDN+vHGlo7UEmB+s
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
//ITf/Rb3/zj3/y5P/uDf/Dnf/p7/+pPfuN/+91f+fbv/jIy5Ee+cIHK+EMX
pX92L/+r9blviD2/zLb/xfL07xltvxj823+Ymfrhuig55P/4aJWyWWu2OGe3
LvK790p7D6qHT+vHz6Hq8bP68dPaydP66Yvm+avF89dLFx8tIh/OPwHeyun/
x8RbR8d1YNnef3zzeqa7A8aYbZnZltmWLZbFzIzFzMzMTCoxM1tsyZKMkpll
ijGJw5zunpk3/Z2S0nmz1l533arIWfavdu2zT9W9cpUK7AiR03cudgN2AA6c
sbJanLKepG0hGTtJ5l6IDt/1KtQEMR0UJ6L5LsqS+vT7NXKL+v26REq4iBIu
pIZCPvCpIYBXSIsQUCP4lHAuKZSND/VBxgVwcIHI3ICoiGOQBrCLbd+yBt7+
8Gb3fRR/eBekKwQvmPbM0Z35aREB/tuO7/M7dmDjnm2f7N666sCOdbs3fwIL
8o5NK4NPHyYiU10a0oPZgaleN8y7GjPLribX2PnDHdb2cuF4m/WzF3Nvn8+9
nb/07vnsu5c3Pnt1c7BZO91fce18PQuVZJRi64WlLeTEAVxMRfiGttD1DzJ3
PMjdeyH04/uZe65gEkt8N7pmZ5aW+q7Px1DySbxiuqyUo0LwNBi+DivQYwU6
nECHh3PewolQTxBb8BInQeb20Ra7UAJ7Kd/q87zYBfJBlngxsgqsvBo4EzXN
REMH2dhDs5zjUeJ5lAQBLVHISBBSY0Q0n70BuNinyEWJqGeFlAgBORz6MPh2
UfBw4ZkwLjEcIDPwIUwMFAyfirJCIiNOwBSDWIYKsW/XemjOx/23QamDEIYY
OQx4D2w+dXAr5PD+7Wt3+S3fs2315g3Ltm5aAZaGF+Lwro05qSHj3RU/fPn4
x69f3p5qeHx98PHV4ae3x+9c7L06WjPZ64JYhriAdjF/a/CzT2+8eDz9xas7
w22mVo/4wrlqPjmLR8wt55e5EOETwhxn4mHXmTV9YavGI9ZMRm24lXfwOiaa
h8pLL87PKSvNRaFysZRCMruEKUFx1Ri+FoQTaHACFUAm8NQgEk9HFhiIYiNR
YiVIXXiZA4BjhDaIlxKexZcqQidG5EKLwe0+zlhFDUHdSNK3UczdNEs/lxzP
JSUCap+xaXFCYE6JFVCiQSJq1L8In128sJZDDIH4ZROCfRczEyGQw7mEMA4+
lIkNBvkgo06RECHQxE4e23Fkv+9Dtp07fV/xwzng3b75EzjCagY148Cu9UAY
3Lvw+c8nWzYu91u/fN+OtccObg47viPu1PZGB/+f//zbP3796qevXjy9NfLb
L+9/+eHdz1+9/vz1zQfXepvs/GaP6NZM6+3Lndcmm948m3356PKbZ9fuzY7U
mJndNRqHhkYpSjCyEDZc8jAztTnrZHnwhqaglX2BfxkOXzabuWcOHcVA5aUV
FeQgS/LR+AI8qYTCRjDFGJ4KKwTCYGANQagmCLREng81ka8iCdQkkZEsNpMl
NjzQFlswQosvW3hmMDZa6FjkjJF4ADVOWUtQQ3Q0kw3tVEsPm5TAJvhQ86mJ
XGo8l5rAJcfxyTF8cpSAFCUkR8ORT4wE03IIEWx8OAsXxsD7BCfwkI3zXa7P
wATRUGcoiAAozNkpx2DjCzyx+6j/tm1+K/fv3gBrBQAHux7cvcF3VUbgYbDx
qSNbg0/s2bV5FQTy3q2rgfmJ/ZuDD20LPbQlOfwItyTqs6eX/vnP//r737/7
5cc3f/v5qx++ev7d+/nv389//e7u7elGswTLIWZdHq+HdjEzUvPp/ekv3t1/
cHPg3txAnYXWYOdVmNkCfJaJhjBT8sfY8e15AZ7w9bVBq9pO/Xnw7IahnJMX
sKnCkozMovwCFDIXgykkkEvJTARTCJx9+SAy+AiLNCSRnizUkARKEl9BhqNY
SxYbKFIrWWIhia0EoRkrMC4mOVpgxfos7cQuWBqnqCKoakiaBoq+lWRsZxET
2YREDjEJUHPIiWxyHIcUyyPGcolRHEIklxCzeAJi48+ycBFMbDgdF07DhoHg
nIEByCF0dDAVGUhCnSSXnQ45tQNKBfQHiFnYNU4c3Q6Qt29d5bdxGaSH7xuN
netBpUkhmZEngo7uPQV74sFNQYc2Bx3ecvrw1tTIkzmRxzjouP/69cvv3s2/
fzb31dvZ797e/fn9o+8+v/9qfvraWO1Iq5lLzmThM66ONz2+MTLaZpkern79
6NLju8NjnbZqCx2Og21WkwBhZ+ZUSbEtqJDewlPesI2uoNUNAR92xWyvy42w
47IVuIIiREEeqrQAiy0iksooLCSDj+HKgTD4lijUUURaskRDFWtoYjVDqKAL
VXBOkeopMgsVUIvNBKERx9eDsDwDTmDBC61YkR1Q4yQegsxLUFQDaqKmgahv
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
BjbOjDpamBLCI+co2AiDgNBSqau1iqQshFJAFNLRAhoKJGZiJRwipEedS2GQ
kjH58Tnxp9u8SrMYpeXlDTaqOh20+5eaHlyo7fSymkwkIDzZotayspWUNDO3
1MLNMrDOGpjBZlaQiRVgYQWaOMFGlo8zhLOGFwN4tYIkje9G3UQYhXJapIIW
q2enejWl8L+aG616dWvkty8f/eP7R75B9s2jX9/N/fhq5tcvbv769vqPL85/
86jr52ejX95rezlpfztX/8WtpndXq356d/Xz2ap3VyuejBmuNPHeXvQ+n3aM
e9F3OgVPx42Ph+TPxowQzoAah/D5mVSWBOnh8zYSjA19L52CzfqDM4OYxyTl
g5lZ5CIWucBnZmrh2TP79+3fuXrtqqN7NuZH+8cF7EgM3pcZeRCm3pkDm8HD
4ORTu9emhe8jFUaxsJkydomMWQrhU2uX1NmEcj6KRy0Vc/FcKkLEROlEJJ2M
qZaw9HKORc2yKOkwl3OTArPjAqilCQ0m8mij8tHV1tsXqtudrCYb7UKHrkaH
d8nQGk6RSYCyS4qs3EAr+4yNGWhiBhs4gUZWiM/Y/HAD33cHjUYQr+TF+/oG
E2IkqUpX2lsjnR1yvbzT88vnN/7767v/+c29376+/dtn1797NvH988nvno7+
9GIK+sN3D/p+e3P1l+cj39zv+PJWw/f32r+arf7yRuODfuWTc5LHY6abrfzZ
Fm6bOrdBmt5nzOlX5054EBP2ksfDqifn1K+n7GDdxdBY5PzHOYQ2Cfk7ZzoB
NpS8RTEXRiGHXCxnofLTwo4c3r9m3drdfqtKk4LiT+9MC92fH38s/vTegN2b
Tu3fcHLfeugVqNwwCSNfxUWp+WVKbpmCjXZq2C4lFV4sGq4AJiCLUsohlZpk
jHKTwKBgq6VMo5JnkNMMEpyAnF+aESGmF/TUyy72e57eGro8VH6uTt5bI682
Uvn41Jz4MzRUolOJd0oyTJwgC+cMcLZwAsDPPsj8cAs/Qsc9q2SEgMDMFZrC
Li/t2jnry7kO8Orfv7gJwfv3r+5AGvwIdfezO4D3zdW2b+dHf3w99cvzsV9e
Xf7xyeCvL8f+9u7Kj/Ojzy84H49ob3aL54dNn067X132Pr5gbdXmDrvwPZbS
6XrWxUbWhRrKnV4xmPl6E+fNBefLGRfMR0iJxcSAI4QzOBmPSFkUCZ3xh5//
QO2bhpQCIbMUlRNz7NCuDZvW7tuzgZgfnRy0JyVoP/g29vSO0KPbgvy3nty1
Ji5ov4xXBrZ0mgReM1/KKpZw0TYtT85BoQuT8MgcJrmESSzmEotEHJxBybSr
hDopzahgOnUc6BsNNpFVhheTM9q8/JEu64U+d4ub1WQnNtsxlfoiEzcRn30i
Nsg/7OQBREaIgRnq5gWZOGcsvBALLwiOGnawihpg5EZ4VekjTcKb486nVxq+
fNgPPeGHJ70/Pp/49c2lb5+Offt85rtn4z+8mPju2di38xPfPhn59dX0T76f
Gf72weBns42vr5Tf7tc8GtbfHTVe65A+GLE+GrM9veB4PlU+26fsdhPPuYk9
LmKfgzBezRorp9zqFFxsoN3vV765XPXFneZnk7ZXl5z4snhfaCCT/lc+p+Cg
3aHSyL58zvoD9WI+w97NoRbCJh5+2n/9ulWwJrPQqYTskLzIQ8mhe6BpxJ7a
HXxoG3S2gzvX8mh5DgPbbRFWu6RGOQ4eqsQEERtJxBbk5yYW5yZyaAgeDcml
lcp4RJ2CZVJxDXIGyK5iNntlQ63GwTZ7U7m8pVJSa8K4BDEVkpgaWbSTH+Ji
B7m4gdXiYAUxPDroaNgp35ePGlqoWxxsZp/SMU4bWIE1ioyJZt7bWz3fzA//
9nrmb29nvnsw8P5RP/SEX15OAc8fXpz/6c30d/MD7+91gb6fH/rx6divn138
6l73/Ij5m4eDXz0aeHGp8tWNtheX697d6353q2mwHHdrQPFgTPv4vHKkjqwj
RQ070aPVdHL2qTYN0sNKmW0WvL9W8/Xt1hfT1vlx+8NR7WwzacSDBLy40oQ/
5iBEBxmRCuFMQqcDZzLGNwcBNR3n68+/74PkwrT4M/u2b0iJO63jo3LC/DPC
99KLImHXSw73P7Vv/e5NK9et+gBZGOdQknQSpElFN6oIRgXSqsRblFijAq1V
ULHo3Ky0aAELJ2AilVy8RkI3q3lWvRDiwqZmVlqFTdX6oQ5nb6OpwU6r1uTU
qmIa1XG18pgaSYxXEl4pCC0XhHh5gU5hYGlaUHp0QGZsUFZcMLMkyCOO6a2g
PJ6u/OrR4D8+u/Ht09HPbzZ986AXFmHI2++fQ2F48MtnV75+0PHjm4vfPjn3
w8uL//kVxMX466v190ddN3qU94YNr683vrnX+/CC9/55+8Mp64PzlgejhulG
zqALN1pD6jZmXahAW9iJQlSEnZeiwEUJkeEzFYxXM9Wf32h5dsFzvo4218lq
1hfqabEi9FluSfAiZ58Qv/t5oT+nQWiQURlwBPkiGpez+PkG9DFMQdzB3Rsy
EoPkQrSIkVMce5hcGIbJDo48vmPH+iXrV/515ZK/xEeetKvJBhnaKMcYlNDQ
sHYVyqnBlOsxXh3Ka8RphOi8rHixgCiT0NVyjkHLs2j4JiXLrGNXu7Qem6K9
TtFZQW6z5beYMloNCa2ahDp1fL0iulYWUS2JqBSfrRCHVEqCq2TBUlKkgV8C
NV6ITztfr35xueHnN9e+fHju6aTv/f7qSh30hJ9ejf32euibJ32wmv34YuSn
V+d/hux9Pf3zy/N/f33hxbWOPgv6dr/qfAXl/pjt5WzjiynHbJdo2I0adCPb
zcW18qx2U9H5SuLtPqFHmOgVJXqgDTLiMFmnaNmBgvzwSl7h/Hn3Z9cqIbrN
tGglNkJDjUKknSpOPpUZfrg4/hA4GVsSv4j6jwoNnImodOAMfl7MjX/15xw2
Lis6YH9mUjB0MzGjODc1GPbr6FM79m9bvvyDf1vy4Z+Wffyno/47VRKUWYkz
AWEVwabG2zU4p45QrsNW63FVRmytCVVhQGYlh6hEWIeJY9Fy7QauyyJzWlUe
p6LKKWt0ULoced22tC5rarslrc2Q3KKPb9bE1quiamSRNfKIGml4pTzcIw4u
5wdWSSJHa3jVKsSlXuM/3l3+7sWFd9cbnky43t9u+eFB5//95fFnc1WvZxxP
R/QP+wU3O/hXm+n3hzVQce/2Cue6pJNVtMlqzrPLtXdHzE8mnG9vNj+7aH96
wTJSjuvSZnWbix2MhApJxlg1ecBZVi9P11KiOMVBhQmHMPFHTZR0BzvrQoPo
waAaCPfbEUZ6amrInsK4gOL4o/mxx2FNy40OyEuJBsi/qyxhMah9obHA2Wfp
hQpNw2czcZlsXI6YVlSSHlqYFgoTTcoqLc6Nh1176Qd/WvvJh2uW/WXlkg9W
LvvrpnXLaLg0m5ZgkmGsKpzPyRpcuQ7v1eMqzYQaK6nGgq23otrdhJzkUDE1
s9uLbnagau3YGhvs2rhOF6LLVdxXntftye9x5nbZczttGa2WVLB0szahUZ3Q
oI6uUUZXS8+Wi8PqtcmjVaS5btWD8646ParTzYH59e2jc98+6vzqduOjMd3z
Yd2Li7X3+g2fzda/nPHe61O1a/OHvPjhcvStAc2nN1qfXm2D4fjubvOra547
I5q3c3WvZ+x3zinOOZBOeniFOMnBjKnXlth46QZWCjHzRH70fkJWQNyp7UUR
B19NOFts6MwzW9t1ZVPNdEr+qayzh7IjD+dEHSqMPlKUFJKXHFtSXIglMPFM
KaY45g/UUJ59FRqZSvxfnKkL+6DvV0eSCkglicXpEWJGKTRnNqVwx9aNH/31
39au/mDT6iVLP/y3VSs+/GTZn7MSA+0aglGKBT/blXgws0dHLjcQKo2EGjOp
1kKqt2AabOgeL5FUGospiDpXhe9wlHa5QIhed2F3eW6fp7jPXdjjzut15XS7
srscqV3mlHZDYqsutlkXV6eNq1ZENanj+uwFd4askLc/v7/xy7up++NOESr2
06vVn1+vnWvlDFnRTaKsMTf1Wof8yweDsFM8GlI+HDPf6FM9u1JxqUP+09sr
//yfb377/v6X99vf3aqBHfnhqPrxsGa2T94kz6wWJXXqi92CFDE2Ap8RiEk/
kxx8MPTYpsTA/cXR/rK8MxdqOA5JUfKZbSJMsltQiEw/CYtwWpg/bGe5qVHo
MgSOyCAzpWSujMiWo5gCbGE0oMaUxoMgOhbmoC83fv/8H5dFxS9+zp/FIeZA
qnBo+VAbpFxEZPCxjz/4P58s/4vf+uUrlvz7mk8+Xrb0g+P+W3yDT4Yxq7AW
Fd6pJti0OK9+ITFMxHrgbMU1ObCNVnRXBVGAT8pKDuquxLUCZ3sxqNtd0ucp
7fUW93mKAHWvJ7/LmdXtyIIAabWkt5qTGnSxtYqzQPjZpQpoDj+/mvr+5cTX
j4e+nh/++/tLg5XCsVr+/XHzbI/h/oDh+UzNk0nzXBtjflj3csr2csZzd0gL
nK+fk90eVr+62fBkxnNvRH2liXZ/yPBwSH2xnjxVQ+gy5pYLkttMRVxkRF7U
vvjTu5OC9qWHH4wL3h11ejsp/dSAtqxamJsd6R98YH1+7JncuJOxQbvOHvU7
e3J7RmwEqgRJ4cpIfDkQ9tmYxsfRBRgqB1cUgy+OJZTELZqZjEikIJPI6FQ6
ZuG7P2wam5DJJWfCssyn5App+QJqnpKDxBQlrl3+4YqP/wwpAaGxdOmfV69c
snblUvgjYGazHOtQYQGyS4N363AePdZrxFeZiGDmRhuh0YZrsGI7vAS7tCAh
4kirHdHpQnY6fHHR6y7yES4vWOCc2+XMGXDldlnSO6zpHab4Os3ZDms2+O3Z
dPWXTwa/ftz/5ZORL+50v7/b9+ZO+/yEBYx6pUvx7Gb7/EXPg3NKmIDvb7V9
Pdfy1c2md7Pel1crHo7qXt9q/PRa+Ww3+0avaNRZMuQsutLCudzEutzGHnIh
u0xFRkqEQ1koZGTEBG5NCt2ZGnoo8vTus/4bimOPAG0JOhqC98iOT04f2BAT
uDMhxD/l7Knk6EBEQRYWjWEKVAyBmsxWENlSgIxnCElsCZ4pItD5BIBcHEss
jQe8VFQyiI5JBVxsfBqXmCYkZ/DJGQJqhoSWLWPkwlonZxdJWAX+uzeBmcHD
m9cuW7n0P9YA6o/+T2zUcbuOaJaiHAoccIZkdmmxwBn8DKFRbcED5wYLGVC3
WDEdDkyjFRUdcswszustR3Y7SiA6ut1lA54ygHyuGuEVxFbSwvrtBUO16Ika
4sUO/tyg6tn1ts/u9b+50fTptZpn16pf3Ox497D99Y2qW/2yB6O6q1286TYu
ROVct+hqG/PxuPbBpPH941FY2eZH1M+nLNe7uLMd7GstvMlKwrC9pEGW0Wko
O+fBeiVJ5aI0IeIMszCIVhiuEpRkJZ1MCtkbdXJ76KHNp/asgu6aF3bg7JFN
u9ctObR9VdrZkwVpUQRkHotJF0p8V9/xJAaORE8WKEh8BY2nJHN9fqYLlECe
xldQ2EJCaQwJEUdB+DjT0UkMTDIXm8whpgBeESVTRsuW0rOlrFwFK0fFLlax
ioxiREpswEcf/QkSY+Paj1ct+wAEqLdvXKHkF9sUaKscAxXOoUYvmhmSucJA
Xghnoi+fbUQwc5MNA+ouJ0FuMMpiBiox7Y4y4NzjQfR7inpchX0VRZ3GktFy
ytUe+f1JK7zfL7cLr3Qpbw4ZppupN/uFV7sEd0dhQdPfG9PdOSe72sm+e05w
q4s9VU+61EyZa2ffH5B9/rj7zpAcfAt9bNSNHbCWtOny+5zIFmV2kyTdzkqU
4SIlqHAlMYpeFFCcdCwj8mBZdkReWlBs2N6gQxuDD/oF79sQfWxHccyJgN2r
Tu3dmBx5BlucxaCT1FqN2mCRG80SvZmrMnBkeqZYQxeqaSIdQ2Jgi3Vsie+C
XuAMGcIUKVlCObkshoGIoyLjWKgEJjaJT0wTENJEpAxoAjJGloKZqWTlaNh5
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
PYgd+hR+uen/Aslgbkw=
                    "], {{0, 150}, {120, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                    "], "RGB", "XYZ"], ImageResolution -> {434, 434}, 
                    Interleaving -> True, MetaInformation -> 
                    Association["Source" -> 
                    "http://en.wikipedia.org/wiki/File:Petroica_boodang_\
Meehan_Range_1_crop.jpg", "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset050/86e/\
86e5ac36df28e1906bb4d8332bd62260_v001s.jpg"]], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {57.99999999999938, Automatic}, 
                    ImageSizeRaw -> {120, 150}, 
                    PlotRange -> {{0, 120}, {0, 150}}]]]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.746391022179982*^9, 
                    3.7463910221810017`*^9}}, CellID -> 43597922], 
                    Cell[
                    TextData[{"Fact: this bird is way cooler: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
gvn/rq6u+Oe/Pp7+8y9X2Xx1S+fXeU1t+YWLkkPFh1cOHJT4G9mLajYmVOQz
xLmE4eCQBfhNv1esozHNcTatvuMQtyNGbREq6Dr93KOanf9mssJjCI0KEZ2D
kT8vlca+tlF8zFku2papC9N4LlPGfRQF739pM/L+NfJhbWVdVVAw/eQnn34+
1CQfzdZXLH48W1YuKXn37YXxffqY4jeKE+i5g6zdsWnAY/g5e5dYe9Dsehuy
I7yOpAhXcndjXtQ44jkU/T2i0Nc0P9SfIxz93UyoPRaBBDqHzTO6mDuRrhZq
Y+3o7iGYuiCd+NDfmw/yuWYzW7+SYsAnMhHZJRhKjcIUy8jgrLFHvFsk4j06
0P0j6Z637t/fTZyz6ltnTivA2pPiKbkosxJplVKpxoaNm4tZjq8F9oPN8Zm9
+94HBbE9ejB9wfxaXsfsprLF3KgknErbxGv9qhuIMRoNVtOhK+a1VdW5B1CR
uwvn9Dvqz6Pq9nCU6XZzlOv3cJQRLhCO52zGSJ/uooyQ7GoszNC5ZxgKFqZj
bpP5yEBoR3/y3QQuF0rSk2Po2sdzNqJCt4vuv6v2/jXtqtfW/F1YHDsZljIN
JAoWv0uq1GoN+VebS4gPaU3M0FT7XVZ2QfLZ50e7sjlGhVxRyWpo5bymX4JY
x/b4dOLzuEnxHoszWlRvo6+JU+hTK9bb1K8lYLWDh/8AJfz8C1nbMdrEB8v/
akg+OtXwsbIR9sMUkzC7PnVxGoIifaBQsmdlcwVKpPv3wxXiAbojYptub4fe
dJx9n/8O9g+YiygbX8jFHEwViz82v7pl96XLvzAb0mT5YPnzsvLz0v/758fj
23r78DUvbO6bceGmscXsqDG4lLUT1flvodJQ3PL6J5KNKnYdXQl+Z3VWt9Xi
sBi/IVSa6nQqdDsw3jdWlA/Sp2bER0eur9K4vuLxXyPkg51bsDid4nl3ivsk
UJDdtlNaIDdsKCoMO0h+D/Hcz+3tqKkXquLjqhifj12LyQHxsJIp2VxjFasR
f2XDpoMVFy8rmiMf5RfOSz7+9BPDqKSkm5bWVmJ9syDays5O/igcuhi/kt4w
8rpkUx1zCzm5xU3jryXWxx3Ctdx9yA4aCDnL7cmYf6VA+6h2yJs7CXPW5PC+
/mM+tKI9X5ElysfCbHj6u0MiSLjtcFfbY2bHJPys3y3WbDfCX6nI3o5lsWmw
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
D0s+yJ59lfIiIqx8RVtenw/b1sBHfXm5tf8Sf+cM2eXKvAP8vWhf0nMcGbkc
W8gPfiI6Gcl+8ejtGoEO9u3gb+FKcmBDeoz44esxpNxPE0xzFl2tfHCAbNS1
nP0Plw96HjZPHm7drh4fpK+Ij1Lig+2X37J9+R5Y+w1FpvfdHCBdRnpmCnFU
UEK2uRDn0rfgM7Lbbw5dgj2D5+LV/tOxvk8+VvXIJh8sma8vZ/skpAclwBCS
gFd656I0awvFLw/ZfuSLdSRDPbvCTK5m+9dyPhIGDLp0/MRpR+JD2lr5uIWD
vK6pWk+c6AoBrZiPY3MHyCcZmsL2wyrhXLF6+pvkG1zO2oXS1Nfx7YSXcSpt
A67liu/4+tPi+T8YX8x+sLVycyLHoI3GjtlAzkfikGEXz5VdkJ49d6FV6asG
wX3jmn68lScR9yqp844ilvvWMrB8QAn3E6pMaz14Po1x+hD9XQYWm/+SvQsb
yOfzs3Wv2TfW2KFjp9/37N2/5sTJUkfmY5W2YC/Rmnf0PSxU1cGt/x+qd6w1
gb3/853Ry9HV0b92jzBWOx3dqROOfflln7Lylr3LU9zz6BEaA5bfYXUDx3O2
YAjFSWyPF4VcfPdaWFhY5RfHjsa1dM985tM/QuPA35Wbfwil+duRHToYjoIl
f4cR4yM8PByfH+XvMGhR/uq5nlrUosetv5/t0TDqnX+X8x7U7x/0fe71u+di
c7kfOMinC2xVlnwOm/ERERGBr7/5pl9z5wVrEGTljkBCkAmB1u4IYLC6DaZj
9c697bsA6z9AS3/fWNRpb6B1w383eJ/G/M5abG+wpQv8rdrA2dwGarmidi9L
R0fH6oKCgrNHj33V61zZ+WbnFNn6AhlfoyqC7c0o5RAaRP1zGz7nbmjp7xsP
+W24T7+TSkW/Siaizv67lfb29jj85ltPVYh1cM2aHxTfgdYQ5H+Axp73oH7/
oO9z99/xOsfb9gCu4cPFxdX45pG3F7D3cjSXD7HeWIS0kWjq+ff79w8Tt7/3
ri4fzs4uID4WtoSP/wfjUt02
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJylkL1Lw0AYxh9bpaIVBR0cHCKIg1QUXQQXq0NRRCSt4NeSpEkqpGm4pEhx
dHDt4KLi4gf+B7qJ/4AgCOrkoM4OCiKIxOcaoSA6ecfd+8tz7/vm7unVS6oV
A+A3c1O19bQQWiXbwY8F11+zXTM/7QambYoxvYFiVeYiVnWMot84DBTdQKiZ
SWVxaVlJPCCBJsQxjiHN8L30/Pws/hxvN5ANcT0oe/2d9+tozZu+ATTIS48Z
ngjIE+S59cCTXCV3GQUtTz4ipwQvSL6Suh7xk2Q74nfJIqdO8W1JsmJHnJKs
RyzfohgFUSQ75L6iUza+7yNfkjTdhSxjT235UJHBJBToKGMNDgIMMrr07Pe6
kVrdHEqsMbh7qECwwkaBtSmqZXY1GS3qJqfDDA7p/U9PfWt0JPpDcgZoegzD
1wEgsQd8boXhx0EYfh4C8TvgYrteX9qmnc/Uq3Wtbx9o3wROz+uafgyc0ePu
e08TWk2Kc8UsC3g5AdqWgE563bLy3/PI7+9zHN4CuQ1g9hLY2QX6md+++gXJ
74G4
                    "], "RGB", "XYZ"], Interleaving -> False], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {73.33333333333329, Automatic}, 
                    ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}]], 
                    CellChangeTimes -> {{3.7463910039639883`*^9, 
                    3.7463910175865955`*^9}}]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.7463910228045287`*^9, 
                    3.74639103391722*^9}}, CellID -> 277434961]}], 
                    "ExampleNotebook" -> NotebookObject[
                    FrontEndObject[
                    LinkObject["5ufyx_shm", 3, 1]], 201], "ExternalLinks" -> {
                    Hyperlink["Bird", "https://en.wikipedia.org/wiki/Bird"]}, 
                    "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
74e/74e60450-d5b6-4ec5-8d2d-bc72fa93466b/download/DefinitionData"], 
                    "ShortName" -> "BirdSay", "SymbolName" -> 
                    "FunctionRepository`$74e60450d5b64ec58d2dbc72fa93466b`\
BirdSay", "Usage" -> 
                    "\!\(\*StyleBox[RowBox[{StyleBox[RowBox[{StyleBox[\"\
ResourceFunction\", \"ResourceFunctionSymbol\"], \"[\", \
StyleBox[\"\\\"BirdSay\\\"\", \"ResourceFunctionName\"], \"]\"}], \
\"ResourceFunctionHandle\"], \"[\", StyleBox[\"thing\", \"TI\"], \"]\"}], \
Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\) ask a bird to \
say \!\(\*Cell[BoxData[StyleBox[\"thing\", \"TI\"]], \"InlineFormula\", \
Rule[FontFamily, \"Source Sans Pro\"]]\).", "VerificationTests" -> 
                    HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
74e/74e60450-d5b6-4ec5-8d2d-bc72fa93466b"]}]]], Selectable -> False], 
                    RawBoxes[
                    RowBox[{"ResourceFunction", "[", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/e59a5636-8791-\
4dc9-b62c-8bdd0403574e\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"], SelectWithContents -> True], "]"}]]}, 
                    "ClickToCopyTemplate"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "\"\"", 
                   StyleBox[
                   "\"Wed 5 Dec 2018 14:43:06\"", FontSlant -> Italic, 
                    FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
                    StripOnInput -> False], 
                   TagBox[
                    ButtonBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                    ButtonFunction :> (Symbol["System`ResourceFunction"]; 
                    FunctionResource`DefinitionNotebook`Private`deleteMe[
                    "c11756aa-c6f9-4c4f-bc60-e2e0dc52c2ac"]), Appearance -> 
                    None, BoxID -> "c11756aa-c6f9-4c4f-bc60-e2e0dc52c2ac", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Center, Right, Right}, 
                   "Rows" -> {{Center}}}, AutoDelete -> False, 
                 GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.35], 
                    Scaled[0.35], Fit, Automatic^2}, 
                   "Rows" -> {{Automatic}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               OpenerBox[
                Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                Automatic, AutoAction -> False, ContinuousAction -> False], 
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   TagBox[
                    GridBox[{{"\"ResourceFunction:\"", 
                    TemplateBox[{
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "74e60450-d5b6-4ec5-8d2d-bc72fa93466b", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "Version" -> None, "Keywords" -> {"birds", "party bird"}, 
                    "ContributorInformation" -> 
                    Association["ContributedBy" -> "Rick Hennigan"], 
                    "Documentation" -> Association["Usage" -> {
                    Association["Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"BirdSay\"", "ResourceFunctionName"], "]"}], 
                    "ResourceFunctionHandle"], "[", 
                    StyleBox["thing", "TI"], "]"}]], "Description" -> 
                    TextData[{"ask a bird to say ", 
                    Cell[
                    BoxData[
                    StyleBox["thing", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], "."}]]}, "Notes" -> {
                    Cell[
                    "Some birds can say words.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.746383232110336*^9}}, CellTags -> "TabNext", CellID -> 
                    533233984], 
                    Cell[
                    "This bird can say anything.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.746390791274925*^9, 
                    3.7463907912759266`*^9}}, CellID -> 181442125], 
                    Cell[
                    TextData[{"Look at this bird: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Wi4ppaJcJJIKeSGXY7IOwDI2bKzTtgE/s461vBSAn8G5kPOknUnDHFXUflXp
aUkzeg2jB9L1bqyWBSf3ZTIDudxQPj9cLALpeLVKVKtNkE1lrFIdAXAIwAuF
kWx22EkP2RZQQ+OGNanjbjqzWsajpefU9LzsLEhOQHBCWBXbK9gLvOXljQVO
n2O1WVZbgARtHuJ0L6v6IF7xMYqXlhdYCStRSgpAlBxOSaGk6I+zCzHGG6Hm
IHjbRT0M1MnEYCoxkkiNJ6kJmp1mCGcPJ8zz4gJoYxWVkKRHZIuSbU52SG4o
WV0vWEgJsLUrGaKyQ/ZYKwW9WtKrFbVchqWRHkKhBM5cxmHTuuBojKMzWRsl
ks9mVhYDjbqvUlpAKcw6M2lr3DQGdK3PVY9p9BGZvZbVZ5s9mXR/NjuYzw4V
8yNQpTReq0w26kT1+iRQ19+oVh0nJi+M5vOjucwIUKftYTs9gWrrZMn3E6zc
vJn1GFmflvNr2bCSiciZIPmQzg5Itl+0fIS26ReMoGiGJCsMyXZEtCOCEeL1
4NWqBjgtwGoRWgnRcpRSYyklgk1KCCZ5XytJ4pQH6U1QIz3iqIlDqeRkip6m
uFlAZoUFCIRdP/sIZy0mmSklLSoZFVJzBjgb5Yxdy6er2RZqwrmUtSolo1bV
6lW1VCXRUcxzuUKLM+cYrS97cHkH18VicXUp2Gz4kc8tzhl7Im2OWPqABbxa
v2X2g3A6PZBJDwJyPjdQyA2DXrk0AgEmkDYbU4vNaajprhAhX53ALaiWxkuF
8UJuLOdAE/nsTC7vyRXms/i7iv50wW8VfFY+aOSjQK1mIir5bC3e2ihOmMwL
5GFKzdBaltKzlJqmSGebTsh2HEEqWTHBjDM6lIBYI4k9aMPYcHWKm0/QkDdK
e2LUFHqPSGw4lhhN0FMpbo7h5znRK4gBiJe9ogzIAQkjhZ6UDAqcZUdBaLh+
TpuVLDg7tdynfjbLeaNa0Go1rdbQKhXi50JZKhSkXB7uFbKW2wqSKolUEcsl
5PNSw1ev+Mr5BcIhOwkgWXvEsQfT1gBWEM46Q3lnuJAdKuWHysUxhAMIQ+AJ
qkuLM9Dy0uzS0uzyomdl0bPUmF6sTzWqU7XyWLU4WSpMFHOTpfxMpThfLnrR
rpfLgUolmCsFMqVwphhJF+JWLm5mEmo27h6URbE30YcWWLPAG0XJKMpmyVVB
1HO8lmU0hybM0wnJTvJWijNpzqb4NM0YFGGuxEiACAtJ1oMMIeJm0ZaANryd
Yjw0t8CIPl4KiUqEeFgNSjLWqKQlAFk0OdGWxLQiObqSNfVCBlTT1aJdyRHB
yeWsUS2Z1arhclarVa1cU4oV+FbK5cBZzNlS3pIKWaS3Vikr1fLaSmC5GWxU
vdWSp1yYBZBidqzkjOadEeDNZYbz2ZFCZqQIG+eHqqVRoINXm7XJFmTghVaX
5taWPWvLC6tL8xtLC2tNz0p9eqk6Xa9M1svTjeJ0tThTK883qn6iWgBDaLUa
KlVC+XI0V4xmijEnn7TzCSOXMnJJM59yCnS6xDsVOV3VXZmQVTHMkmIVJZ3Q
ZvXMFW0JhC2qdYzGmixQc1qK0sKU7E+J3qQYBHPX4cEE56fZAMUFaD7ICCFO
ikhKHBL0mKwm4GRRT0kWL1iSaMtiWpMyaTWf1Yt5o1Kxq1UEBTKZxHKlCMh2
vWHVF40GtKzVFpVKTSxX3FLoSPm0XMrIFZLeyHClWtxYC60u+xfr3nrFUytN
VwqT5fxEJTdWzI62VMqPQLXCWL04vliZWKpOgiG03JxZWbwivLG6sLWysLns
XV/xbi4urC/Or9RnV2pTzdp0szq7WIY8zZpvqRFaaYSXm+HFRqRej9Rq0XIl
mi/F8iXypUuwdQpMJs9kS0K2Kjl11WmYmUbGqWedupOupdMV2ykbVlk1yjA2
b+Y40NYcVrYZwaaFNIcOgRxd2jyww9W0lqS1OKvGGY2FKDVBSbGUGKXFGC1G
GCkqKHFZTRLpKUVnVJOWTVYyRdFSCWTHlLNZOZ/XSmX41qzWXANXgQ5xodfr
dmMp3Vw2mysQOKvVJlAjJYAakwv6PXCG1XVSJfNrS/61peBK07tY8zQqM43S
RLM8CaS1wgTWltyL40uVMaBbbcysNWeh9cU5gAXe7VX/zppvbyOwsxbYWfFv
rfhwfaM5v97wrDbmoeXK3ErVs9bwrzYjq0vR1cX4SjO21IwBdbUaq5QTxUqi
UKELFT5b5RFy2YqSb5iFhp1fzOQWC7lGPtd0Mo20U7PSUFW3S7KVg6slIy9o
GVHOcOS7cI6IdpcMwhlFdGTe4TiLc4/lRc6WeEviDJ5WKcDnNJpTKE6J82pC
0pKKQckmLVk0egwSy5Yk2QSyknHkfAFC/Jq1plWrw8AQ2NqNFWtpzV5aSy+v
p5c27cUNo76q1Ze0BkGNrCDNXrWMxIDzjVJBLeVXF30rTf9awwsgK3W832eX
q5OLpcml8lRrhXCFEK5PrjVm1pdmNpY8EGCC8O56cG8jtL8ZhMh+Lbi7GsD1
rSUY27e+6F1v+vDLr7QYXl+Jry8nVxcTK834ciPWrCWaVapWYyo1oVyTS3W5
WLuCXFp0SovZ4lIhv5TPLebyzVy2nsk20pm6ka5qxNVFGVILopYX1LyqugcR
cimNYBTyJsoQSpiMFTmZNZC0SAPBYDmVBXBW53idgXBFNnnFEkiDYctQC7Ls
pJG0cr6klppqZQkYrfoyCFuLy+nlVeDNrGxn1nYyG7vO+o69umUvb1pLG+bi
ul5f0qtVNy5IYuiVvFHKuZy9S/X5tSUfcnVjyYdoXWtMgepKbYKwrc2u1qdx
Zb05uwEDL81ur3i2Vj2ujQE2vL8ZPdx+o83IwUb0YDUM2vsroZ2V0PZycHMp
tNkMbi76iZYi28uJzZXUxlJqbSlBXN1INBt0o8HVGlIF/6CmDpWW0uWlTHWl
UFrJg3NhuZBfKcDbhUVi7Cy0aKdBu27YFc2sqGZZx4CmVdJqyUEDplWKYiWv
lLNypUCGtXIW0zFQw+ScJYAwBNqCygkag5In2wLwqmlFdlQIdwSxLGdh5rxS
KGvlRaW6pDfWzMWN9Mo25KztZtf3oNzmUWbzJLN55mycOmuH9squtbxlNtZa
HQjMrJXhZPK3ywVnczUI1CB89a5fngdMFyzBu9Wc2V6c3V70bC55QHh3bX53
bYFo3b+3ETnYih1tJ493kyc7yZO91PFu/GgrfrgZO3aBH65F99YiREuRveUQ
0WpsdyW+u5LcWaE2lpNrzcRqk15a5JaaUmNRayxZCLzGcq62nKuv5Otrhcpa
sbRaKq1WiJaLxZUiIb+Sd/MEymWb2cyik14sQFa9ZDZKeqOiN+tqvQZJtTJS
1KzXpXKeVP+0LFgib3LwMK/SEDhLBuGMp0BYyWhyxpAzFmIZZlYKRTTGWrmh
VZeNxQ1reQcwnY3j3OZJfvM8u3We277Ibl/mdm5jxcP0+pG5ums115HVhHOp
pBRzIAyh/TjYCOOdDsKAc7geOFjz7q8u7C57oO2lmd2l2b0lz97Swv7y/OGq
92jNd7juIy/bDB5tRU924md71Pk+DWFD9jups+3k2WbiZDN+vHGlo7UEmB+s
Ro7WUgfrEL27Sm+tUhtL9PoSu7oirq0Yy6v28np+eb0ILa6Xmhu12noVqq5V
ymvV6ka9ularrNdK6+XiRqWyWa1u1XAL8stEdtkys3I6I2ayop1R81WnXC3k
6pXC6lp6ZUutLaJb0IppNMOkxqFn0wlnEiAqKxqCZEqtwiendQLZwStJYqBP
Uyou5Oa6vbRnrR6lN86yW4Rtfud2buduYe9+du9eZp8ou3cH3k6v7iA6WpzV
YhG9CnlfZB3RMY934L3wyVb4dDuE9XgzcLjhBcyD9YW9Vc/B6vzBygJ0tO49
3vAdrwdPNgJ4zel2xIWcvHPAtnR5yN3eZwD89i59sZ0C6tOt5PlW6nSTOtlI
ATV0skEfbzGHm+z+Oruzzmyt0Jtrwsa6srFhrm9m1rYL69vlje3i2lZ1cbu5
uL3U3FqsbzWrm8369srS7vrS/tri7nJtvW7lNFGOc0yQpgMC5VU4v0jNy8y8
RHtsOZjXonkzWjZizYq8vVnd2F2z6hUhb6MfFm2BRDTqoEY4MxrH6CJrSLyh
8pYi2DqSWcpkpFxRLdRcyCt6c9Nc2rVWj+318/T27czufaK9B9n9h/mDR1Du
4El2/zGuOFtnf825XFPdXhoRJDo2b+tn+/GT3ejJbvjyIHq+G4GOt7zHW/6j
TR+AE7auTjb9p1uB083g+U7oYidysReHgPf+sQA9OBGx3j3kcOXuAUF9uUNd
7GLDXOywZ1s0aBPs2wx0ss0ebXHE1evc7qa4u6XtbKV3tvPbu8XtvdrObmN7
t7mxt7K2t0xo76wsH2zW15cyWUtWGEVMJkOzkYWRZGAMbPmUJ2slskZcYRdU
wWeocTY5rQvBWp6vZGgwz+pwjn37qFas2IKjka7DpBmNZlWKVRhaZWlNoA0R
tDlTBmcxbYgIjXxFLjURy1ptXVvcMVcOrZVTa/N2eueBs/sws/cos//UOXyW
PXiWO3iWP3xOOO/et9dPzZV9HblRXUbaYEIkvyqN+2twtnJ5lLpzmLh7THTn
KH65F7nYDQPm2XYQYM+3/EQ7AYIX92IvAt3ej94+SEL3jngQfngqPTonK1Df
O2bvn3D3DziXOXd3X7izx0MADvKXO+BPg/zxFne4zu1vSvtb6v62ub+b398r
7+3XdvcX9w6Wd/dXdvbXNg82VvfXVw+26qs1WDe0MBz2DsWDY0JiThdDOTOR
ViO2Ei5o8YwewyajxotWypSCPFBLgXqOb+a4op1cLEu39ysXO/nNtZzsSIDM
yDQgUxqTwqqKjCqxGlyt8JbGOZaQLYgFVOUVtbqmN7e15f2Wme2tO284PwFn
QIawyew/c3YJZ2vtRF/a1VAHqyukehYr8LNoW6Klc6b44IyCHp5SD05S944S
dw5iLdS3d0OXO0FXYay3dyO4cmcvenc/dvcwfu8gcf+AAtJHZ/KTM+XxqQw9
OpEenQoPT3iiYxG6dyTc25cB/M4eC13u0Zd7cDh/vM0fbQn7m8LBtna46xwe
lnYPKnuH9f2jxd3j1Z2jte2jra3Dra2DndWdVRsjXnRWYkky2FokrUcNMYCI
gIdB1eD9oGpLkbQW1wW/wQc1IQirs9HprBYrWjTuSM2mS5nk7qpdLpHWjtc4
SqEpJYU1pXC0qlCKTOsqbZq8k+HzZQmUKqtyfVNv7CrLB/r6EQmN9bvW1j0X
9WPCeecpgDt7T9K7jyF7856xcqI2d9X6ulpZJpwLZcXljLeJYKuPLhjo8Tnz
6IxuoQbGOweRBwdR6P5+6O6Bq/3YvQPgjT84SrpKPTxiHp4Jj8+VZxca9PRM
eXIuPb2QsT4+E13s8sNj6eGxcv9QunfAu5wZYuld7mRHON4Ujrelwx39ZN85
OigdHdYOjpcOj1cPj9cOzrb2z3d2jre3D7bK1bRI+2TKo/EBUK3lWCithoFa
432m6Ad2W42l1ZghhlQ2yCWmDSlsSmE6OmUp8UaBzSrBvWXreDu/2xB++oef
lSpGhI2itWOUVEqmIErlCWrDoG2bz+T5Qg1mVmobcn1baezIS4fa6pG+dgo/
E85AuvMovQu8T9zNY2vvsbX9yNi4oy8fg7NW2wRndN2kkqJpwbCTthH7Ty5Y
QG5xhqvvH8fvH8agR0fRx8exh4eRlnDlwRF56tFJ8uFx4uFx6tEJ/fiMB9jn
t9UXdzSszy4VrM8vlGfn8lNickh7dKI+OJKvOO9ybnSwpzvC0a50uquc7hjn
B9mzo9LRSePwZPn4dP3wfHvvZG3naGN3b6NRNPnkHB2bFqk5Q4g4WhRRgAKX
kUO4goe2FIIyarRgJ7E6Why3Q0h5VM4L5goTKGdQ6xaenq/82e//2u/8k5/5
q7/8P3/way9UR0J3h4hOSWxS5VKqSGlayjRTtsNlK0KpKdU2pNqWVN+R4efm
gbaEho3ks719P73zCHidnWfWHjg/doE/Nrce6uu3taUTpbGrVjeU8pJSbLQ4
a7m8ms1BTy7oFmfoyRnz+DTVIvnkJAo9Ogq3gLtKQE9PU0Qn9JMz9tm5CKov
b2sv7+qv7hlYsceV53D4ufrkDNKBGq6+dyAiq92Upi+2uPNt7nSbcD7ZM08P
MuB8fFQ7Ol05Ods4OtncP1o/OFpfamZNOSImZ0kvkfKpnF/nAmBryaGMniDp
wftNzmuyvrQQhLctMZi3Y1ktATMzsemod5SNzdXzzI9834PzTfO3fuUb/+//
85//8v/61//+z//33/z1b56eb0W4OOogSQxNSul6yrCpdI7NVbnykljdFKpb
Ym0bqMXmPiytr52bLueWh50d4ufM7lOy2XnU4qwsnyj1fbW2LZdXkDxSsYGI
VoslvQBVWk6GWpyfnFEt1E9PgTT29CzaAu4+TD07ZZ6dUc/PaWyennPPL6QX
l/KrOzr8/N5dA8IeqF9c6gT1mfb0VHU5K+B8e5cj7cc2dbnFEM47wtmecrar
X+w7l8els5PGyemymxsbiI6szScCExK9wMU9qcg0iNGRmVhgvNVjKLwXScLH
p0k4C35bCQGyws5njST8jBiPBUY9k73J0Pjzs8bXP7n4hR99+U+/9eX/9Bd/
9t/+y7/9q//67//rf/zXL17djQhxtBluMuuUQb5ERKeLbL7GlVaE2iZX2xIa
exA4w8/66qW19cDeJkUQhIHX2Xua3XsG1PbWI3Pjgb5+V10+VxePtfoOMkep
raGMYmDX3RHXrCy24uLRKfNZztCzsxZql/ZpAg9B+MUFIKdeXDAvAPmSf3Up
vn9HbRF+/575/0d9rsPSJDdczug6kBjgfLHNXG7zl8iNbQmczw8y58fFs9Pm
+dnK+ena+cXW+kpOZgMx31gyPJWIzEJsfEag5jUhjCjQuFDeSDkiYQvIuCKz
vpJDweqUf4IKTiX808P9bYO91wb6rofnRunAeE4O/8gn9/7qL//Nf/vPf/5/
//kf/7t/9cdf+8rHlC6gc+ZMlbMsykzDzHSmxOYbbHGVr2zy9W0QFpqH4uKR
snKqrt3Rth4gh63dZ/bec0C29p+n91+kd58RM2/c19buqKu35cVTtXGgNPfU
5h5qqF7fMuobVnMrvbQFyA9PaML5jHVRU64Y8HTZJp+fAzJFbHxKvThPvDyn
Xl3QLy/ZV5fC69vy67vK+/d0QMZ6Bfz2X1sanEkdPJLvuA0eOJMWeotEx8WO
SPx8gNxwLo6K56d1cL643NxZK3KUn4oilj1syp9KwJzjdGQOLoWZ/XNDwdmR
RGAKPkdrgXauWWRyRmSpLEVnR3yT/d1t795697tH+q5fe/u7Om99vqfjne6O
a/HA6Bceb/7LP/iHf/En/+Tffvs3/tN//Hff/KkfRlwwloXaR74G4OQpp8hk
K3R+kSmtstVNrrELyMLSkbRypqzeVjceapuPjO0n5s5ze+9lev+VefC+ffAK
D63tJ8bmI239rrZ6V1m5VJbO1NULbeVCXz41Fw+spcP0ynF2/RSQHxxTD07p
lqWfntNPz1no+RkL1NDLSxoGBvAXZ6kW5Pcumffu8O/fkT64K39wp8UZkDVX
xM8vLtWriD5RHh+r4Hy35eddxAXp68D5cls825HP94yLwyw4Izcuz5Y31wpc
whf1TaZiHj7pZ2K+VGw+EZqOBSZlOgjywblh3/QAMgEKe8dAW+d8DYdZLopT
vW/1dNwanJj7ju/4jvH+m7OTff3d7w723uy8+fbMaG/JSP7er/3Ef/mLP/n2
7/3Tf/EH//yj9x+mFIHPZjmnwDk5JlumsxUmVyeQS+tcbYdr7sHJgCyvXMpr
99WNx/rWU33nmbHzkmj/fXv/dfrgtbH94g3ne+raXRgbMjYfQNbG3fQGhvR7
UH73HiDfP6EeHDPgjN4DenbBPL3gn1+yEPYADveCsCvmU86v7wgtzh+84fzq
jvryNsqigtB+cSaj63h8gr5OQr9x9xD9BoOIBmSEMymFW9Lljn6xa1wepM8P
CxfHtcOdEkIgEZqUGXRl84GFsbmZASo+750fmZ4YDHlG/DODC9O9gdmB2eGu
vvZ3+ntuLEyNRP1jCutDdxEY7/r7/9N3/J3P3fi7f+d/QIAkg5Ojg22D/Te6
2t/t67wRmZ/8xldfffsPfh1TucOHG3kjU8oJmSz5r9nZCpupMbkmVVhmy2tM
ZYNt7AuL++LiibByIaxdSuuEs7b1XN15oe+9Z+29b4LwwWuyAfNtRMdjoIbM
zaf29nNkC+lDtjG8PM3vPS8cvSgcv7x/BD8zV5zPOejZbR56cVt4cZtroYaf
X16mXkEXNOF8h3c5Sx/eUz68q35wT30NJ99TXt6RoBe3xZeoj2do7aQnp6SF
vn8okH5jl28N4y5q4WJLON9VT/eN0730+X7x4qia1SnXhNfbr3++r+saEA30
3ox4J9i4d6T31tRY98xoNwJhcrh9fKCjt+M6XuMZ6/dNDc5P9Xln+gILo9hP
DNyKzo8kQuPgHw1Odbe/3d7+TseNt4Z7rnsmuwt6TIpNHK2oX3i6dbjfNPNa
drnJ5irJTJ3KNWFmrrKO0GBre1ydJLO4SiDLG49anLXdV/rua3P/Q+vwA6Kd
96zdV7A3sfrWU2QI9vbu+5nDDzKH7yO98wevSsevy2evqxcfEsin7KNTEBae
XojPLoXnt8XndwBZBGoUO6BGdFxxvky1kvk9hHMrN1rRcUeG3rvdgiy8OOef
nwnPTvlHx/xDjIQHXIuze+7BwsmnO9zJlniyI7fq4L2zKoa4nq63+7re6et5
d2SobXy4Y3K8e3qiH298z8xwwDc+OzU43Ncx1HcLmhjpHhm41dPxFlyNWzA2
1AnmIDk30RPBu2C8d7T/RnBmYHKsfaTn2mDXzfD8qMXO183gyZr+Qx8e/PRX
L37ky3e+9j33fvJrT3/yqw+/+mKzvlZJ5Sp0mUBGp8HXd/nGAbd0JqJb23wo
bz0BZH37BTgjMayDj9LHH9lHHyI6YGmgtrdfmuSp99J7r53DD/OnX8iffgIV
Tj8pX3xP5fb31u995eEJ+wBAXM5Qi/OLu6JrTvFTV7+6zbhBTbWajVcX/Pu3
xfc+IwIfP4g+5Ix7dso+PeGgB4esy5lvNc/Q+SZ7vsmfbLME8qZ4ez99+zDL
pWZAVaC8TGwBSoZmA3Mjc1P9iIvJscG+7psDvW193deHB9onR3vQS3Tcehuh
0dX+dnfHDRCG+rtu9tx6q/3Gd7e3v9Xb/c7MVN/0aOdo383BzrcHO96JeIYt
3nd/N/P4sLC/ZDWsSE2PrRV4KzEnxaYrFnW6lXdqJSQGX9lm65tM/UBquqGx
cVfdeqRsP4fAWd8jMEG4xRmWNt30sPbeI8xh46OPMidfzJ19qXD5pcrtL5fu
fLl29yuN+99ff/i1h2ccGZ/PeNfPPJxMCN+TXt2V3rsnY3155yqrX14Zm21x
BtjPCjZuCZyfnjBPjunHR9T9w+T9A+bePnt3/2roRlN3tsFcbEkn6/zlobG5
JI6P3OrpegvFjkrMRYPTiI7B3uvQUH/bxGjPzCRs2Ts61Dk62uuZGQ16J3Gl
s/NaR+e17u5r3e2fh/9B/ua7f//a5/8eyONXofzNTPR0dLx9493Pvf3Wd/b0
XMd9wYsXZofQk08MtU2P9MwvTE9Mjc4sTM+F4l6KjRkZsdTEhCI1tsUaMbOA
Crh+B2YmkHfh5JetCghLpw8+yB5/DN8CLPYtwpYLH5ALF18uXn5f5e731+7/
QOPhDzUf/fDi4683n3wdZnY5iy3OMDBs/Oqu3IIMtdLj2QX3GdqsC5aHwPzT
DYThBXMiOD86TD08SD7YT907pLDe3qGImXfI6ejJRup0nb53qNULcbz3J0Y6
qPB0cH5kdrJ3fLhrbKhtoOttcAZwkPHODfk8I57pAaAe7Gufmhrq77/V0X69
7da1thtvI357O0kjd+vad3bdegd5PjHWdfPad8+MdE6NdLTdehdW7+r4PN4R
w4O32q597ua178RrZufGeFUUHVso5uXKolxdFcuLbHEZiSHWt7jGNtoM9Gnq
1gN9+6G+90LbfwUnIxkgWBfhALyEM6Lj6ENsnJOP0ycfA3L+/HvLd75avfe1
+oMfbDz+keWnP77y7CeWn//E2oufJAebZ4IbGtzTS+5Tzq6TxU8ho9NDQXx2
SYZBRMer2xx6D+jFGd0i/NJNjMdoDjEqEs7JhweJ+3vxO7uJu9vJOySZaXLs
v5E43aTu7EuWPPPWW38XEAAZoeqdG4ZvA3NjbGIhGZxGs4Fwnp7sBbfZyQHw
R/Mw0tsOk48OtwO7b2bEvzAxOtQ91NuOrMZ9ab/5OTAf7Lt1452/NzneNdBz
A23exGA7biUCHIEP8+PegfzYWB8rpDhD5x1yoMHnqkKxLpQbUmldrq6Lizuk
B8bcsfvE3n/fPHyBVhktHPbWPumc0/vvO/vgjJT4kBj75GPn9JPs2RcKZ18C
5PK9H6g/+OH6I3j4R1defGP15U9C6+/9NDlSu8oNDuFMCtkdEs7g7BbBK8iY
XNBaY2ZpzYNup/eG8xlJEmyeuZAfHlNIDEB+sJ+4vxO7uxO93E7c3klebCXP
NpMw9skGy8ZG4C60Fohlz3Q/Clx/zy3f7CAVnGETnrh/fGF2EPkMzUz0LkwN
+edH0T+ISU9Wi2Huk6mFmH9kerx7eKAbXR9+ELcD+Qyk4DzQeWOghyR2R8e7
aDYmRjrnRns8M724C3A1SufMzIii8rKjKBlHKFTkAuEsletKdVl2x0B5+cTY
uovpzz54Zh2+Zx2iun3QQg0zZ9xih47COXidO/4od/JJ5vST3PkXW3FRuf+1
FuSlZz++4hLeeO9nN9//OXJKfypA7uGb+JygbrUZwmchE84nNKbCp6eEs+tq
4m1y6OFOi/Dw02MKcUHOpYmZk/f3knd34ne3Ine2Ixdb0cuNxN09aqsWSwSG
YDMwxL89sDCB5gGBAKPOzwwEvWOYPuam+uBhNHKgNzU+4J8dZqKzHO3lUx6Y
Hxkb9Y4GPaOAj85kfryPS8zC/7NjPfiRtrbPX7/+3bduvYW2BJMgEsMzMTA+
0r0wSRq/zs63urreXZgZk1ROTGucY4jZAl8sgbNcWpQqK1JtA36WV46Ujdv6
zqP04UvC9uA1LE1cffge9sALztigf8u6nGHm3MX3lG5/pXL3hxoPv958/ONL
T7/RMvP6q28C8tYHP0ty44T/LGcIeJ9d8E/dvHUjl5zjPTmmIIAl50hkHm9t
KHJ2d0wEJ987SEB395K3d6MQCF/uRM43iXCxZHpmx7snh7o8EyDZB54gg3c9
Vt/MEHj6PMORwCSaDfQVKIJ4jXd6MDQ/5p8biHkncXFkoB0P+dQCR8+HfBPI
Ezo6kVXCGS2yMN2P2wSwb739nd0d7/Si0xtoh5nxN6K79k71BueHBodujvR3
IjdogSJf50hbXMYRc0WxUOcri3xlWaitoxQqy0f65h1z9zE5yjggfnY5v26x
JYnhKn/4IfycP/6ENHIX34PQqN3/IZgZkJef/eTqi59ee++b6+//7Nbrb0H3
D/n7R6yLmrR2z87FK7bn3OMzOJnoMabyE6oloHZdnXAPlyhkBQg/OKTvH6Va
hAH2cid8sRO72A5Dl5sRrCdrUSE1PDHcOzXWOzuNQBgEanQFiIXpkS6gwKzt
XsGzfSODXaTZGOnGiydHuyaHOtCNwP+w/dhwFxOf5xPzsD1+cH6qR0h5bMG/
XmRWS8zOotGsyMPDndc+/10Yt6dG2jCkU5HJsHco7B0REjMBzzDu6fhQX4KK
gDNlKlzG5jNFOd9AKRRrq+CM6FBXjs3Nu+SEee+5ffDKJlM24QzgxMNHr7NH
JDeIjkl0gHPp4kvEz/d/EJwXn/7YyvOfWnvv5zZe//zG69b68+D84EhoWZqg
PuUfn5Byhr0r5tEJMaqrFPT4iBjbPYuOPTlJPnWfJZwPGEC+txsjBt4KnW0G
sB6vRZEYGxXv2PBNTHCYI2BRWBdIF6YGwBD/6vnJfv8c+ophGBgYRwY7urvJ
JAg39vW1uQHbLdIBtBkjbv+Me+GdHEDkYrI2+CC637rDNhzq44dr3/z+Rz/3
Aw9+4esvvvre8VZF1CkPbsTCZE8kOIph0DvV758a8M4MTA12hYILii27n3E7
Qi4n5GtKeUmtb5LPUJp72qqbz3tPnIOXaTefreMP7COi9DFq30eQc+RyPvow
f/Jx8ewLZbdhRj6jCJIK+Ibz+vvfwgYrhogW6gfHnCt3Bge9E5icxeYznKkH
R0lwRi8BAXUrSR4ckUxG9l7uxsEW7j3fjIHz4aof+3VAHsCgcXNmqtc/PYI4
RTiALfHVcBfJh5FuFLL5yUFkcv9gGwYQt4Vo7++9huI4PNCJ1i7qn8BwjcTA
i6fHe8b6b4U8Qyqz0CyIh6vGl14df/Rg7Ue/cParP/P6t375az/28ek/+P77
/+FXv/Rbzwr3LW9osi8+P5DwDAFy0DuOv7Gr6/r8zCThbMiSY4r5vFSqqdU1
pbGjLu6rK4fG+pm1dS+z/yx3+Cp3TPoK5+SjK7wnH7ubj7MnH5AiePxR8fiK
c/X299Zufx+iY/Hxj5Je7uXPgvDqq59BRG+89627+xzkjsYcAe6ifnjEtIC/
wZsiMDF0uITRS0Au7avr9/ZTBPJ29GwrcrwePF0PnawFT9b9Ow2ff7bbM0EM
PD83tOAhxOjInGd2EKUfxEAbTka0Tg13jg129/beQK7C0qODGLFv4KfwTkeZ
45NzXGyGtHOe4dDCsM6HK1k2I4eO1jNferHz819/D07+5W988Ju/9H1/+M++
+ce/80sXm/ovvFr7Dx8X/v1h8OvO1JHsO0hNbIQGlnw9Td+wNDXgmRoTdIF8
+dYhX1bUK03y+enSnrFyZK2dOZt3nN2H5DsDRy8Lpx/kTz4sHn9I5mg0bydX
M3X27KPCKfRJ6eSj4tnHxfMvYsSuX34vBsDFhz9EOmdY+uXPQITzq2/e2WNv
7xNhg6mNAD9kkAPkY9YjpgWZkESBw9Cx74bwfhz69AriAma+2EvCxqebwaO1
wPFq4GjFf7waEpKTC7MjM6MwYbfbRfRREQ8TnsEG9sYbH50DFyfFEQmMLhdN
L+l1RzuH+28ifsEfrTUf8xiMP+6fxFPoSfwzg3xs4Xi98PLu2sOT+g9+ePLT
X3v8G7/4lV//n7/vn/zSV37zV3743/3L3//RLz96tJP+ndfrf3oU+z+aw7/Y
8P+jRvxbiWu/HPn8PxS7fyk9/71mxHLIF2PQ2mn5ol5Z0pubxvKBtXbibF7m
du7n9h7nD58Xjl+WTt8HaggwS5dokr+QOydr8YKcXUCl80+whypnn9QuP2nc
/nLj7leXH38dqFeff4Nwfvkz4Ew+s9sjwuYKNeHMukJiwLHExhg3bu8l7uyT
DdnvENQuYfepneT5dvxkI3K0EjxcJTpbCxZMbzQ4NTfdA4ykwE32xRbGqeAU
pjwMHfHglM2HClpclwIAHvONDffc7Ou7OTXcPYtwGO5AemO4wDAY800IiTmU
M9/UIGwf8A6rbJgJTjWyaHiaX3t99A9+8oPf/oc/+O3f/cU//q1v/a//+Bu/
9+s/9fu/8XMf3Vv/iZcH//RE/q3iwD8vjvyaPfw70rU/lNv+EX3rt/XBP1rh
V/IKD865jFEsG9VFc3HDXtkn3+zavpPde5Dff1I8flk+fa9y+rp68hpr+ezD
6sXH5YsvQKWL7wHS2sUXK5dfBOfS+UdYq2ef1C8+aVx+D1A37/1AC3XL1Zvv
/Sw5Dd5hyXeH4Gqg3qXv7DF391vAqZaTgRSQL3eT57uJy+0YRNqJnRiyorW5
2EmcbsSPViP7S8GD5fDhcmCt7It4h/CuR9sGobkNzgxEPMNo3mBXOJPMHdSc
wfsxfUTnR9A/oMcAZzh5aoz0GJPD7fB8LDSDKDZFvyEGQDtvpBKBqeWiuLWk
FfTY9706+taPPf/dX/v6t//gl//0j371D3/zZ779h7/y27/2o//oW1/6+R98
/gOvj751v/aPd9lfL4//amb8j/T2f7M4/Y8T3/WrVNu/aMQfllQhbeg5B5zt
2rK9uJlZPcxsnre+OFc+fFI9elE5IahrZ+9VTt6rnr5fO3tdv/iocfmF6u0v
ADJUPf8C4NfOP663/HzxRXBu3v7S0p2vrDz4gdXHP7L2FEM3GVVOtvmzLfJx
Uot26ytDt0F7H9MxqW6wa4snHAudbcU+Veuh+5XFmAs5BM57i4G9JZ/KzsCH
qPKdneRAHrlKx2Z9Mz2+2f6JkY7poU4qOpMzU0xsena0I7IwEvAMDnS+M9R9
bbTvZn//jeGe65ivyedW4YlmUbh3WFktCgfLmQdHjUqGfnZ75ZMnm68frf72
//ITf/Rb3/zj3/y5P/uDf/Dnf/p7/+pPfuN/+91f+fbv/jIy5Ee+cIHK+EMX
pX92L/+r9blviD2/zLb/xfL07xltvxj823+Ymfrhuig55P/4aJWyWWu2OGe3
LvK790p7D6qHT+vHz6Hq8bP68dPaydP66Yvm+avF89dLFx8tIh/OPwHeyun/
x8RbR8d1YNnef3zzeqa7A8aYbZnZltmWLZbFzIzFzMzMTCoxM1tsyZKMkpll
ijGJw5zunpk3/Z2S0nmz1l533arIWfavdu2zT9W9cpUK7AiR03cudgN2AA6c
sbJanLKepG0hGTtJ5l6IDt/1KtQEMR0UJ6L5LsqS+vT7NXKL+v26REq4iBIu
pIZCPvCpIYBXSIsQUCP4lHAuKZSND/VBxgVwcIHI3ICoiGOQBrCLbd+yBt7+
8Gb3fRR/eBekKwQvmPbM0Z35aREB/tuO7/M7dmDjnm2f7N666sCOdbs3fwIL
8o5NK4NPHyYiU10a0oPZgaleN8y7GjPLribX2PnDHdb2cuF4m/WzF3Nvn8+9
nb/07vnsu5c3Pnt1c7BZO91fce18PQuVZJRi64WlLeTEAVxMRfiGttD1DzJ3
PMjdeyH04/uZe65gEkt8N7pmZ5aW+q7Px1DySbxiuqyUo0LwNBi+DivQYwU6
nECHh3PewolQTxBb8BInQeb20Ra7UAJ7Kd/q87zYBfJBlngxsgqsvBo4EzXN
REMH2dhDs5zjUeJ5lAQBLVHISBBSY0Q0n70BuNinyEWJqGeFlAgBORz6MPh2
UfBw4ZkwLjEcIDPwIUwMFAyfirJCIiNOwBSDWIYKsW/XemjOx/23QamDEIYY
OQx4D2w+dXAr5PD+7Wt3+S3fs2315g3Ltm5aAZaGF+Lwro05qSHj3RU/fPn4
x69f3p5qeHx98PHV4ae3x+9c7L06WjPZ64JYhriAdjF/a/CzT2+8eDz9xas7
w22mVo/4wrlqPjmLR8wt55e5EOETwhxn4mHXmTV9YavGI9ZMRm24lXfwOiaa
h8pLL87PKSvNRaFysZRCMruEKUFx1Ri+FoQTaHACFUAm8NQgEk9HFhiIYiNR
YiVIXXiZA4BjhDaIlxKexZcqQidG5EKLwe0+zlhFDUHdSNK3UczdNEs/lxzP
JSUCap+xaXFCYE6JFVCiQSJq1L8In128sJZDDIH4ZROCfRczEyGQw7mEMA4+
lIkNBvkgo06RECHQxE4e23Fkv+9Dtp07fV/xwzng3b75EzjCagY148Cu9UAY
3Lvw+c8nWzYu91u/fN+OtccObg47viPu1PZGB/+f//zbP3796qevXjy9NfLb
L+9/+eHdz1+9/vz1zQfXepvs/GaP6NZM6+3Lndcmm948m3356PKbZ9fuzY7U
mJndNRqHhkYpSjCyEDZc8jAztTnrZHnwhqaglX2BfxkOXzabuWcOHcVA5aUV
FeQgS/LR+AI8qYTCRjDFGJ4KKwTCYGANQagmCLREng81ka8iCdQkkZEsNpMl
NjzQFlswQosvW3hmMDZa6FjkjJF4ADVOWUtQQ3Q0kw3tVEsPm5TAJvhQ86mJ
XGo8l5rAJcfxyTF8cpSAFCUkR8ORT4wE03IIEWx8OAsXxsD7BCfwkI3zXa7P
wATRUGcoiAAozNkpx2DjCzyx+6j/tm1+K/fv3gBrBQAHux7cvcF3VUbgYbDx
qSNbg0/s2bV5FQTy3q2rgfmJ/ZuDD20LPbQlOfwItyTqs6eX/vnP//r737/7
5cc3f/v5qx++ev7d+/nv389//e7u7elGswTLIWZdHq+HdjEzUvPp/ekv3t1/
cHPg3txAnYXWYOdVmNkCfJaJhjBT8sfY8e15AZ7w9bVBq9pO/Xnw7IahnJMX
sKnCkozMovwCFDIXgykkkEvJTARTCJx9+SAy+AiLNCSRnizUkARKEl9BhqNY
SxYbKFIrWWIhia0EoRkrMC4mOVpgxfos7cQuWBqnqCKoakiaBoq+lWRsZxET
2YREDjEJUHPIiWxyHIcUyyPGcolRHEIklxCzeAJi48+ycBFMbDgdF07DhoHg
nIEByCF0dDAVGUhCnSSXnQ45tQNKBfQHiFnYNU4c3Q6Qt29d5bdxGaSH7xuN
netBpUkhmZEngo7uPQV74sFNQYc2Bx3ecvrw1tTIkzmRxzjouP/69cvv3s2/
fzb31dvZ797e/fn9o+8+v/9qfvraWO1Iq5lLzmThM66ONz2+MTLaZpkern79
6NLju8NjnbZqCx2Og21WkwBhZ+ZUSbEtqJDewlPesI2uoNUNAR92xWyvy42w
47IVuIIiREEeqrQAiy0iksooLCSDj+HKgTD4lijUUURaskRDFWtoYjVDqKAL
VXBOkeopMgsVUIvNBKERx9eDsDwDTmDBC61YkR1Q4yQegsxLUFQDaqKmgahv
YROSgbOPNikJvA0xwiHF+TgTYjj4aDYuCsTCLiqShQlnoCNANIxPPuboUBoq
hIYKAsIkZFBp1gnY16Abw6TbtGEpLHQH9/tBwdi5dfWWjcsgPY7t94sM2JMa
eij8yLaQw9tP+28EyAH7N5zYvT782J6ksMMxZ/bGB+5ptPG+fD337Pq5N4+m
YORRShL59EIBtUArLIPOTMekCmnFZgWpv8X65O75iR5nZ5Wko0IKXbrOzumo
kndUyJqc/Jlez6iNaiOmIs/ssMf7V0RucAStKz/5YXPCXic6m4rMKSnNL0MV
FaJLi/D4EjIFQWehWUIsTwZxAaalinU0ICzV0KU6hlTLEquYIjVdomVIDEyZ
jS63A2qKxEIUgvP1OBiUPB1eYALagBpGJF7swUvLsfJKvKqOqGlik1I4xBQW
MZlBAtrxLLwvRkAcfAwTH03HRzFwUXRsJAMXScOcZaDP0lERFFQYQKaiIyiY
cDinIsIoZaFERCCl7BSEBjS0wBN7N6xZAjYGHdy/edfudcB5+2bf10zRpw8n
h/hDAgcf2R5wYCPo5D5AvTni+N7wE7ujA/aXZpztqTd/9ebmL18/7ak1ZkSf
DD7sW9vhjQALO7Iglk/PL0wLReXEyBlFHbW6rz97OHuhua1K2eQWNLm4VWZa
uYbkNdDg/P5M65NBexsntzD8AOPkeqgcnjOrXMc/qkg5ScJmliHSi8tyy1AF
hZjiUgIeQaai6FwsR0wUyAlCJUWkBsIUqYYlVbOlOjgyJSqOVMORa1kyE0th
ZSjsNJkNjE2SmEhCyyJq/IK3gTaIILItNkCcooKormcSkgAyHOm/nySw8HE+
e+NiGdgYOiaaho4CwiAAS0dFgoA2BRUOD8nIMBDYmFwWSCg7gy8JLEw/dfrY
zq2bV0Iab9+8eqvfqoP7tu7atmb/znXQok8c3JIecTT8+A7gHHJsK9j42L4N
pw9tDw/YGxdyIC3yuEXBeHZ/6vNnV3/9al7Bwu/csDTkxAHfNQa7N2WnhJJR
GQXp4RoJTKxEZE4M7N1dVfKv3j14eHu02c2rt3Hg4YU+11CLrr9Bdb7VePN8
7ZVG8QAvX1oYiz20pDF6kztwtfvYR6rUM8UlSajiVAQiF4HOR2FLSwgoBIWE
ZXAIXOAspQiVVJGKLlEt2tgnqZojV3Nlaq5Cx5UbADVDYaUrHDQZWNrsm4zC
hfrH1WB4GiiBvk4oMkPZxkjdWLkXBiITn+wTIYmBTwTI/zpJYuLiGdg4OiaW
ho6hoiL/EPiZgY7ymRkFZg4nI0OhYIDIpcH4sqCSrKDDB7Zs3Lhi1461G9Yu
3bZ59b7dfpDSuxeub4kPPpAcfjj6zIHAg1tAoUe3RZzckxh2NC3qBJeQNzNc
9/7t7aEW23irm1KYvG3DhycObYUiHR548GzwEVxZmtfM55PyxIxip5bMp+S3
VWsuDVZ/eh+q3fhIu9mpxpWryeMdttEOa4ODPVAruzZc1WOh15FSqig5lGMr
y89utgevtR77gJsRiChLQpWlohDZSGROGbYIgUcgKTgcg0nmCchCCV0kAzHE
cpZYwZLI2FI5R6bgypU8uYav0PPkBq7cSFcAajtdboP0oInNFJGeJNDiuSoQ
0MbytXiBASe2YaROrMxDVNYAZBo+BQQnDFzS78InMrAJi1rgHL0ImYJcyA3k
WeqCqwEyJAa5NIRYFkIqCYLcLswM3eLng7x7+/pN65fv373x4C7fx8ibN6yI
DvbPjQ2IDz4IiRHkvz3s+K64oAN5sScVzNLOOuOLhzMzg43s/CglvYhUkHZ6
j98Jfz8o1X4bVgeeOpCfFsZApw+0Ouwqek5KUGe9ttYlbK1UXR1rmb85PjfZ
2Neg8uoJnVWigWYVDEGbFD3YpJ/p9yip2ZqyaDciRh3uZwrbYj+9yhbwCTsn
GI1MxpSmIlHZUDTKsAVoLAJDxuAZZDKXQxOJmGIJ4GWKpRyJHCDzZEqeTMGX
q0AC1SJqHUuuZ8ks4GpIDyo0EKglfKjZSgJHQeCoCFytL0BEZkANNRsnL6fi
06j4FCou8f9B9imFjksALXCOA9SQHmBjgEz/F3AaEjiHLcRIFKE0iIoOp5Se
hXxYu3YJDEEoG/4Htuzfu2nxm+ig47uRacHFyaExATujA/fGBB4MOOAHD3sb
7C/uTV0bbdSzixKPr+ehEpmYbERGWFb8yfCAQ5EhR5G50ai8GBY2U85Cllt5
VTYBn5zTUaO+frG7r8k40ed+fHvs0ezQRI+tv0p0e6ruxnjNRLcVhmB7hWii
yyGg5FIzQjRJh2SB6+UnVgFn62k/Rn4EGpmIR2Zg0dlYdB4Kk4fBFxPIKDKD
SOfRGUIeUyziSuVcn419nOFEKFOJFjgLFTpADQHCkeqYMj1TblqIDuOin6Fj
47kKLFeF42l9WS00YUVWrASC2kkhpNFIGRRcKg2XRiekgrHphP9l7H9xZqBi
GAuoF2hHkhFAOxpQA3AuJYWBj4e6EhG4f82KjyCWYemANfDwwR1QOWAHATMH
Ht/mFBUJ8RnIzNCsqBOxZw4qBNjbVwZvT7abWcUF4XsyAjeLcClyRgmjOFqA
T4gN3Oe3emVGQoicgxCxSrJTglPiTmcnhUgYhdA9vDrqjZmWp7cnJvsrB1qM
Y53m6XOOmW773HjlVJfx1lTDcKsennx0tVdBL6Jlhsojd2qCNwmOrTScWWOM
OkApjcYjE4iYDAI2G4/NxeOh0xWSyWV0JobNI7P4TLaQy5FKeHIZVy7jiWXA
mS9XChSqBalBPKmaK9HAfGTI9FS5FaYhWWyC4kHka3A8NQiy2lf2BL+jxoit
VGI6nZhFx2fS8ekMYhoTnwoCwr7Qxvo40zHxICY6noWOZaJj6choEECmoBfD
JJqCipOyCymYlLWf/HXHllXb1y/ftH6ln98Kvw0rIDrWrVv+yfIPooL3TVSw
xMWhrMIwCS51tN1592JblQJFSjqcH769NOFw1tlD8SH+SeFHur3ioQYlF5NO
Rqc7dYz+dmeVlc/EpmUlBxFL4oxSrNvIONdsuH+t/9GNgaFm41Czob9Bcemc
t7tKenXY9WSu48Wt4b5a1ZWhyiYHT0YtoGeF8SJ2WULXKk4tM59ZL0sPIEAS
ouMp2EwSPpdMyieRiyjkPDqlhMVAcrh4DpfKE7L4EoFA5kMtkCrAzIuQxUql
SAEPlYCdK9NyZHoaBLXcRlPYyFIzSWSC1oH/F2qwNMg3E/lmtMBMI2QysBlM
XCYImj8bn8aGrMYm+SBjEv/gzMIksFA+2mBvKiaOho2noGPhbwv/iYyI5lGy
4iNPblj114BDfrD9rV/3yca1SzetW7Zh7fJ1q5euXPbnKi3m2Zj6cquo145v
VBcNeig2aiIibn9Z4pGS+ENxZ3bDGg5bYeiRHSxEPDr9LL4oxqok97fYr15o
nZ1u76jWm2VkHR8lZebBa9rhVT25O/nk/gTEcqtbeKHfcnW0crLLOn+56avn
M701yp5qydXRao+KxEIkc4ri2GFbrWHrLAFrTBG7WWXh4BMKNoFEyKAQc2nU
fAYjn8YoYtGLuawyDgvN4ZD4AoZQwhVIxCIZJIYSBB4GwmK5T4sBAsUDIpop
tyxypsnMJLGZKDYuFDw1hqP8l9RorhHJM9JwGSDwM4OQBZwX/czEpixypqMT
aJgEOPqYYxLZ2CTfQ2wi/D2ZuEQ4AcHQJJRG7d28au/WT9Kij0JEr1/9McTF
1o2rVy//cPmKj47u3fZgUD3sRHdqy7oMJW26QjU2nFlwmphxqjjOP+jQxn3b
Vu3ctCJw/0Y9K4+UH+n3yYfhpw8QS5PtauL5vqrbV89dGm1o9YikzAJKWSoV
kdbslb17cfPqRGObizPebrl/uf3ZnbHBBvHzuf4n1/vKVciuStntC83gZz2z
UFkarwzd6A7b4AjcpM08wYQtABvj61TkDBYth8MqAnHZxXxW8eLtdTw+XiCg
iMRskZQnkouFcrlAKRMofXjBz2KlXKTSQPHgKfUMpZElt7MUZp+flRZYxoki
E+zsUO0AL5YtQ7HkIDjH8A3gZ9BibtAW8hmG4KKANg0DYJPo2OTFZ3wnGMiT
NAhzX7ZgF36MlF6aERZ8bPeZY9vTIo+AgVevXAJOXr1m6fLlf/3wz3+S0XLu
tLLbNHkduoJWdaGBEMnMPikoCS9NPHZs9wbfB0pbV505uImNToQlZbffmpjQ
o6GnDgQe2VlvF1yfbn1wa+Th3NBwm0ErRIrI2VJawfhA5f1r53prVWNtxndP
Lj6/M9Tuoitpqb0VotFGdaUW31Uhn2g11ksQbn6ZOCvQG7u9MmyDJXy7CBXG
xob5llzYfGkZfJbvEncxv1TAKxFwigTsEiGMAz6GLyAJRHRALZUJFjgrBCpf
PguVaqFa46scSjVHaWSoLHQlQLaAKFDw5FbYWWBnR3OVOI4SBiKaI0GwlaVM
RQFdR8Vm0nBZC65OWxiCvoHIwKbBbsvApNLQKb4TbBpYnYXPWsiWLMgZiHQW
IY2JSwcxCBllWVG7tqzISzwdcXrf2lVLViz/aO2aFWvWLF214sOo4KM3erVT
FajJCmq3Ot9DSxCWnBEWh0FiwCa4b9uaQ9tXBh/eEnR0z77NGzat+mDfjrUn
D2yLDzlsVdBvTnfcmml/env000cXJgecDXZeu0cy0KAbbTMPtxhvTTa+fTz9
1cvZKyMVk13mwXpZq4M6WCuvN5KarJxqCaqKkVnOLaaEb7NFbHCF+WkLTwtI
oXxCqIAUJaAl+i695uZI+IUSQQmgFvGKhJxSEbdMwkeLBXiJiCoWMyUSlkAm
gsTw5bNKI1IbhCq9QA0y8tRmrtLKVFvpahtdCe3OSlXYwNI+P3OUZXRJCVFY
RBZjWHKh0lZRUUVDZVIwGRQMgE0HpL4M8Z38PwHVxQCn47NBNHwOgIW3AJuQ
zSRmQ9pwqfl7t6+JPL1bRs3a6rdm+ZK/frJyycY1yyE3ju7bbBMWVknzLzcw
Zxs541a0lxlXzk3DZ56KPLn38K71R3auCT22c9fGlXv8Pjm8Y23goe2RgQdI
Jck9Tbr5u8MvH196/nBmdqKl1spwqQgDTfrbF9uuTzXCHOyslD2Y7Xp2d+je
TOvcRNWtqaaxZvnsOedAjWiwTtNXpdCWRFVR0mqY+bJwP3f4Jn3mUTE1REYM
klIiJNRoGSNJyk4TcTIl/AKZoFTKL/PdI8MtA+ASPlImxMnEJJmEIfH1aKFI
JgXUkBtCpUak0Qk1BpHawlPZWGozQ+Vgq90sjYuhdpJlVqxAh2QrsSyxSKWt
r6u8dL7n5YOZ397M/f3tJRjrIBo6jYxO/Z02Kg0eghYfAmSAzyDkMIm5DGIu
i5gPeFmkPC4pn0HKZFFyYVM7sGNdtQpRmhL48Ud/XrbsL0s+/suOTasgQKLO
7HELCnEpRwYrWHcG1BMVxFYDokpHwOSEhR/ecvbkzsy4ExFHt53Yufr0ET+Y
of471idFBcjZJaNdzie3zr9+enX+9uT5TqeGV2STE3qrVU/vTdy+2tvk4o62
Gl7cHb0z3Xip1zk/13vzfPX9qfqHl1rbrOSJNlODhijPDXDiU935AZ6YXZbk
fWpyqIYW4rvYjxYho0fLmHFSToqUmyHl54GlpfySBZVJBOBnpFSAlYrwUjFN
JKGLJRyxVCSUyhbHH0+p5qp1fKWZqzLxtBaWyk6W2EhiK0VqF2udnorayfEh
2Lm+f3v9/373+H++f/qP9ze+vtv5/dNxEiYVCMORiE6holL/EHD+w8+Q3gB5
URxiHkBmk3PZpAIWKUfMKM1LD+OjE1v1JQH7t61Y8cGyZf+xctmHmzeu2rDm
o9TQ/RpyCjLhmIyYPFEnqJaWMQvCUdlB2ZGHs6OOFCWdjDyxJebE5qTAnVEn
dh7aue5s4GEKPlsvQI53QdPoHO323LzYfnHEO9hksilw9Vb2jcnGgUa1R0vo
r5FeGfb21snG2w0vbp97frP39b3BDhfbyMjscDAtlCxa3D5x2kl7hr850d+E
DTSzQvTMcA07XMmIlC/8wgoFJ1HGTZXzs2SCfKmgUMYvkvFL5IJSmQABqMUL
9zNCevClbL6Eyxf7UPMlviLNU/g+UKKJdDSJXqSxOaoaBwYG782OffP00n99
fe8/v5j97eWFn95c+/HVlV/ezv7yevqXT0d/eXsZzEzE+DiTUCkgIjKZgvQB
pyF/R+3LDUIO4F0kDOJQfIThyCMXgKt1IlSnGa2jJW/esGzpsg8ANfTnVSs+
PuO/JfHMNkJeKDU/ND/yQKWeKMQmY7OC08MPRh3fkRS0L+bE1tSwvSlhB0/s
XXfm4I7s1Eg2GUFC5TiNvN4ms06EmRmqnr8zfudaX3+juqdONdKivzHROtNf
MdCka7CxYO8b7zTfulD76s7Qy7tD010GeE81GokWVp6gIBQdtlOZ6G9PPmYq
PmPiRpjYoUZOuJYTAZwVrJiF7/TjVNwkNS9Lyc9WCvKUggKloEglKFEIS+TC
MpkIKRX70kMspgvEUKd5PDGfJxLS+UIKhy+QyF0ux/R4z9sH03//8sZ/f3Ht
P7+e+/XdlW+ejPz8aub75+O/vrv2ty9u/e3zaz+/ufLN/MAPTwcJyDQiMpWA
9PkZTijItN85o9Oo2PSFZM5eDA02wednNjkf2HLIhXwKKJ9LLdRwCo3UWFR6
yF//4/9bueSDTeuWrFzxMeyAhQmnwKiZEQc0jBwRITMhaG/wwU3h/puCDvmF
Ht0aeWxravCBkwf99mxenR4fzKOhSegCKjZfySeXW0UiaklzhXKy3wvGHmzW
Njv5s2MNty80PZwdGG4x1TkYg/WK6T7LpT7rtRH3F4/GoDlf6tRMdRgq5Uhu
SQw98Ygk7Wh5QagTEe7kRtm4oWZOhJF9VsfxQVayY1Uc3y8JUfOSNbwMDT9b
K8jVCAvUoiKNuFQpLlKLSpQihFKMVsiICilNLmUKhGwWlwYrjNWomBlqfXNv
9O+f3/nH55d/eTH+y2fXfng2+bcvboJ1f3g68NOTsR+fjvz4ZOBvby7+/Grq
i9sNX95s/vZRlw8yIoWASAKRET4zg6XB2IucF2cfcAYB50XCPHIe4AXOMAH5
tBJy1mkJJh5wLf3o3zes+3jpkr8u//hPebHHC6L8ww5ujD627fTe9Ye3rzy6
a22Iv1+4/+bgg36RJ/wijm05uH1NyPF9fFKBVkAQMNBkVIGQgZRzicSyLK2E
XOeQQoWzSlBtHsFoq2luvHr+asd4l82rwvdXic7VCoHw3ZmmR1eaHlxq6LQR
+8qZfeVsGzeXlBogyTptLY12U5LsnFAnJ8TCDTdxQ8ycSA0nagHy4oVA8Wpe
olaQqhNk6IXZWnGeTlCkE5foJaU6cZlejNRLUYAaMkTEwail1OYqw9PrI//4
6v4/Pr8CbH/98v6Pn04A2+8fD349P/zji7Gf5ge+vN3+3aP+r+80fX275bun
g1/OVb6frfpyrvr7h/34smQQsTQR5KONSl7kDKENnKHy/cF5MZwhK4SkPAG1
CMzMoxWBvV1SRGrY4eXL/7x+/RJYsTevXZJwZhclO0hMSMSlB0IOJwUfPHti
T9CRzSCfpY9uOrl/XcABP2xulFtFq9RzJRwkEKbjCwWUUjiii9LZ5FJiSQoD
naliFdRaaTYpEprbnZnWaj2xt1I63CQdqOS9vDP69EbfYA2vSl7olRR0OZhN
BqKemqlCJRjQ8bBvmrkhFnYwmNkXGtxIPS9SxYtWcKI1vDiArOPGaXgJak6S
lp8OnHXCXL200CIvNsuAc4mSl6/mFpql6LYKyY3zDV/On//vbx/9z29vf3l/
67c3s7+8nPn+2Qj49ofnoz6qd5q+utv6xZ2Wbx/2fP24/+31ppfTFW+veD+9
4nk545mfNN7uYOPKknE+1Ikg4AyQF129WD8WqvXvqIHzYjj7omPBz8BZxESQ
C+P3bF2zaeOaNSuWQPFICzuQHrwnNWQXNiOAmHc2O+oYBMXJvetO7N0QuH9D
2KFN4cd3FCSHwCtllZDq7RLYr7VcnJSDZRGKZVwMFV9AQuXhyzKVPIxNTScW
J6NzYwSEtEdXurqrpB0ezkidtNtFeTrX+9njifOtaj0jtVFPGKyT1KqxVk6O
jVdqoGVJMTFgYBPjtJkVaGEHmbhhEM4GTuTifXZqXoKWk6DlJ+oECTq+7zfh
+CzNydJwMjXcbIMgr1JP7q/X3jnf+P7+yH998/CfPz7+7f1N6Aw/PBn95dn5
v39572+fz339aPir+XOA9+t7bV9cb3g72/jmcsX7G02PRlSPhtTPx00vp6yv
Lrrv9UvnWqj3Ovm40iQsqCxhkfPvQoGl03y9GptJxfk6M4hJ+L1pMAE1pQBQ
C5nFsB3771m/a++2pcv+cmLvppyoI2mhe5ODdkEsJ4XsP+Pvd3jHJyf2rIXm
BjbOjDpamBLCI+co2AiDgNBSqau1iqQshFJAFNLRAhoKJGZiJRwipEedS2GQ
kjH58Tnxp9u8SrMYpeXlDTaqOh20+5eaHlyo7fSymkwkIDzZotayspWUNDO3
1MLNMrDOGpjBZlaQiRVgYQWaOMFGlo8zhLOGFwN4tYIkje9G3UQYhXJapIIW
q2enejWl8L+aG616dWvkty8f/eP7R75B9s2jX9/N/fhq5tcvbv769vqPL85/
86jr52ejX95rezlpfztX/8WtpndXq356d/Xz2ap3VyuejBmuNPHeXvQ+n3aM
e9F3OgVPx42Ph+TPxowQzoAah/D5mVSWBOnh8zYSjA19L52CzfqDM4OYxyTl
g5lZ5CIWucBnZmrh2TP79+3fuXrtqqN7NuZH+8cF7EgM3pcZeRCm3pkDm8HD
4ORTu9emhe8jFUaxsJkydomMWQrhU2uX1NmEcj6KRy0Vc/FcKkLEROlEJJ2M
qZaw9HKORc2yKOkwl3OTArPjAqilCQ0m8mij8tHV1tsXqtudrCYb7UKHrkaH
d8nQGk6RSYCyS4qs3EAr+4yNGWhiBhs4gUZWiM/Y/HAD33cHjUYQr+TF+/oG
E2IkqUpX2lsjnR1yvbzT88vnN/7767v/+c29376+/dtn1797NvH988nvno7+
9GIK+sN3D/p+e3P1l+cj39zv+PJWw/f32r+arf7yRuODfuWTc5LHY6abrfzZ
Fm6bOrdBmt5nzOlX5054EBP2ksfDqifn1K+n7GDdxdBY5PzHOYQ2Cfk7ZzoB
NpS8RTEXRiGHXCxnofLTwo4c3r9m3drdfqtKk4LiT+9MC92fH38s/vTegN2b
Tu3fcHLfeugVqNwwCSNfxUWp+WVKbpmCjXZq2C4lFV4sGq4AJiCLUsohlZpk
jHKTwKBgq6VMo5JnkNMMEpyAnF+aESGmF/TUyy72e57eGro8VH6uTt5bI682
Uvn41Jz4MzRUolOJd0oyTJwgC+cMcLZwAsDPPsj8cAs/Qsc9q2SEgMDMFZrC
Li/t2jnry7kO8Orfv7gJwfv3r+5AGvwIdfezO4D3zdW2b+dHf3w99cvzsV9e
Xf7xyeCvL8f+9u7Kj/Ojzy84H49ob3aL54dNn067X132Pr5gbdXmDrvwPZbS
6XrWxUbWhRrKnV4xmPl6E+fNBefLGRfMR0iJxcSAI4QzOBmPSFkUCZ3xh5//
QO2bhpQCIbMUlRNz7NCuDZvW7tuzgZgfnRy0JyVoP/g29vSO0KPbgvy3nty1
Ji5ov4xXBrZ0mgReM1/KKpZw0TYtT85BoQuT8MgcJrmESSzmEotEHJxBybSr
hDopzahgOnUc6BsNNpFVhheTM9q8/JEu64U+d4ub1WQnNtsxlfoiEzcRn30i
Nsg/7OQBREaIgRnq5gWZOGcsvBALLwiOGnawihpg5EZ4VekjTcKb486nVxq+
fNgPPeGHJ70/Pp/49c2lb5+Offt85rtn4z+8mPju2di38xPfPhn59dX0T76f
Gf72weBns42vr5Tf7tc8GtbfHTVe65A+GLE+GrM9veB4PlU+26fsdhPPuYk9
LmKfgzBezRorp9zqFFxsoN3vV765XPXFneZnk7ZXl5z4snhfaCCT/lc+p+Cg
3aHSyL58zvoD9WI+w97NoRbCJh5+2n/9ulWwJrPQqYTskLzIQ8mhe6BpxJ7a
HXxoG3S2gzvX8mh5DgPbbRFWu6RGOQ4eqsQEERtJxBbk5yYW5yZyaAgeDcml
lcp4RJ2CZVJxDXIGyK5iNntlQ63GwTZ7U7m8pVJSa8K4BDEVkpgaWbSTH+Ji
B7m4gdXiYAUxPDroaNgp35ePGlqoWxxsZp/SMU4bWIE1ioyJZt7bWz3fzA//
9nrmb29nvnsw8P5RP/SEX15OAc8fXpz/6c30d/MD7+91gb6fH/rx6divn138
6l73/Ij5m4eDXz0aeHGp8tWNtheX697d6353q2mwHHdrQPFgTPv4vHKkjqwj
RQ070aPVdHL2qTYN0sNKmW0WvL9W8/Xt1hfT1vlx+8NR7WwzacSDBLy40oQ/
5iBEBxmRCuFMQqcDZzLGNwcBNR3n68+/74PkwrT4M/u2b0iJO63jo3LC/DPC
99KLImHXSw73P7Vv/e5NK9et+gBZGOdQknQSpElFN6oIRgXSqsRblFijAq1V
ULHo3Ky0aAELJ2AilVy8RkI3q3lWvRDiwqZmVlqFTdX6oQ5nb6OpwU6r1uTU
qmIa1XG18pgaSYxXEl4pCC0XhHh5gU5hYGlaUHp0QGZsUFZcMLMkyCOO6a2g
PJ6u/OrR4D8+u/Ht09HPbzZ986AXFmHI2++fQ2F48MtnV75+0PHjm4vfPjn3
w8uL//kVxMX466v190ddN3qU94YNr683vrnX+/CC9/55+8Mp64PzlgejhulG
zqALN1pD6jZmXahAW9iJQlSEnZeiwEUJkeEzFYxXM9Wf32h5dsFzvo4218lq
1hfqabEi9FluSfAiZ58Qv/t5oT+nQWiQURlwBPkiGpez+PkG9DFMQdzB3Rsy
EoPkQrSIkVMce5hcGIbJDo48vmPH+iXrV/515ZK/xEeetKvJBhnaKMcYlNDQ
sHYVyqnBlOsxXh3Ka8RphOi8rHixgCiT0NVyjkHLs2j4JiXLrGNXu7Qem6K9
TtFZQW6z5beYMloNCa2ahDp1fL0iulYWUS2JqBSfrRCHVEqCq2TBUlKkgV8C
NV6ITztfr35xueHnN9e+fHju6aTv/f7qSh30hJ9ejf32euibJ32wmv34YuSn
V+d/hux9Pf3zy/N/f33hxbWOPgv6dr/qfAXl/pjt5WzjiynHbJdo2I0adCPb
zcW18qx2U9H5SuLtPqFHmOgVJXqgDTLiMFmnaNmBgvzwSl7h/Hn3Z9cqIbrN
tGglNkJDjUKknSpOPpUZfrg4/hA4GVsSv4j6jwoNnImodOAMfl7MjX/15xw2
Lis6YH9mUjB0MzGjODc1GPbr6FM79m9bvvyDf1vy4Z+Wffyno/47VRKUWYkz
AWEVwabG2zU4p45QrsNW63FVRmytCVVhQGYlh6hEWIeJY9Fy7QauyyJzWlUe
p6LKKWt0ULoced22tC5rarslrc2Q3KKPb9bE1quiamSRNfKIGml4pTzcIw4u
5wdWSSJHa3jVKsSlXuM/3l3+7sWFd9cbnky43t9u+eFB5//95fFnc1WvZxxP
R/QP+wU3O/hXm+n3hzVQce/2Cue6pJNVtMlqzrPLtXdHzE8mnG9vNj+7aH96
wTJSjuvSZnWbix2MhApJxlg1ecBZVi9P11KiOMVBhQmHMPFHTZR0BzvrQoPo
waAaCPfbEUZ6amrInsK4gOL4o/mxx2FNy40OyEuJBsi/qyxhMah9obHA2Wfp
hQpNw2czcZlsXI6YVlSSHlqYFgoTTcoqLc6Nh1176Qd/WvvJh2uW/WXlkg9W
LvvrpnXLaLg0m5ZgkmGsKpzPyRpcuQ7v1eMqzYQaK6nGgq23otrdhJzkUDE1
s9uLbnagau3YGhvs2rhOF6LLVdxXntftye9x5nbZczttGa2WVLB0szahUZ3Q
oI6uUUZXS8+Wi8PqtcmjVaS5btWD8646ParTzYH59e2jc98+6vzqduOjMd3z
Yd2Li7X3+g2fzda/nPHe61O1a/OHvPjhcvStAc2nN1qfXm2D4fjubvOra547
I5q3c3WvZ+x3zinOOZBOeniFOMnBjKnXlth46QZWCjHzRH70fkJWQNyp7UUR
B19NOFts6MwzW9t1ZVPNdEr+qayzh7IjD+dEHSqMPlKUFJKXHFtSXIglMPFM
KaY45g/UUJ59FRqZSvxfnKkL+6DvV0eSCkglicXpEWJGKTRnNqVwx9aNH/31
39au/mDT6iVLP/y3VSs+/GTZn7MSA+0aglGKBT/blXgws0dHLjcQKo2EGjOp
1kKqt2AabOgeL5FUGospiDpXhe9wlHa5QIhed2F3eW6fp7jPXdjjzut15XS7
srscqV3mlHZDYqsutlkXV6eNq1ZENanj+uwFd4askLc/v7/xy7up++NOESr2
06vVn1+vnWvlDFnRTaKsMTf1Wof8yweDsFM8GlI+HDPf6FM9u1JxqUP+09sr
//yfb377/v6X99vf3aqBHfnhqPrxsGa2T94kz6wWJXXqi92CFDE2Ap8RiEk/
kxx8MPTYpsTA/cXR/rK8MxdqOA5JUfKZbSJMsltQiEw/CYtwWpg/bGe5qVHo
MgSOyCAzpWSujMiWo5gCbGE0oMaUxoMgOhbmoC83fv/8H5dFxS9+zp/FIeZA
qnBo+VAbpFxEZPCxjz/4P58s/4vf+uUrlvz7mk8+Xrb0g+P+W3yDT4Yxq7AW
Fd6pJti0OK9+ITFMxHrgbMU1ObCNVnRXBVGAT8pKDuquxLUCZ3sxqNtd0ucp
7fUW93mKAHWvJ7/LmdXtyIIAabWkt5qTGnSxtYqzQPjZpQpoDj+/mvr+5cTX
j4e+nh/++/tLg5XCsVr+/XHzbI/h/oDh+UzNk0nzXBtjflj3csr2csZzd0gL
nK+fk90eVr+62fBkxnNvRH2liXZ/yPBwSH2xnjxVQ+gy5pYLkttMRVxkRF7U
vvjTu5OC9qWHH4wL3h11ejsp/dSAtqxamJsd6R98YH1+7JncuJOxQbvOHvU7
e3J7RmwEqgRJ4cpIfDkQ9tmYxsfRBRgqB1cUgy+OJZTELZqZjEikIJPI6FQ6
ZuG7P2wam5DJJWfCssyn5App+QJqnpKDxBQlrl3+4YqP/wwpAaGxdOmfV69c
snblUvgjYGazHOtQYQGyS4N363AePdZrxFeZiGDmRhuh0YZrsGI7vAS7tCAh
4kirHdHpQnY6fHHR6y7yES4vWOCc2+XMGXDldlnSO6zpHab4Os3ZDms2+O3Z
dPWXTwa/ftz/5ZORL+50v7/b9+ZO+/yEBYx6pUvx7Gb7/EXPg3NKmIDvb7V9
Pdfy1c2md7Pel1crHo7qXt9q/PRa+Ww3+0avaNRZMuQsutLCudzEutzGHnIh
u0xFRkqEQ1koZGTEBG5NCt2ZGnoo8vTus/4bimOPAG0JOhqC98iOT04f2BAT
uDMhxD/l7Knk6EBEQRYWjWEKVAyBmsxWENlSgIxnCElsCZ4pItD5BIBcHEss
jQe8VFQyiI5JBVxsfBqXmCYkZ/DJGQJqhoSWLWPkwlonZxdJWAX+uzeBmcHD
m9cuW7n0P9YA6o/+T2zUcbuOaJaiHAoccIZkdmmxwBn8DKFRbcED5wYLGVC3
WDEdDkyjFRUdcswszustR3Y7SiA6ut1lA54ygHyuGuEVxFbSwvrtBUO16Ika
4sUO/tyg6tn1ts/u9b+50fTptZpn16pf3Ox497D99Y2qW/2yB6O6q1286TYu
ROVct+hqG/PxuPbBpPH941FY2eZH1M+nLNe7uLMd7GstvMlKwrC9pEGW0Wko
O+fBeiVJ5aI0IeIMszCIVhiuEpRkJZ1MCtkbdXJ76KHNp/asgu6aF3bg7JFN
u9ctObR9VdrZkwVpUQRkHotJF0p8V9/xJAaORE8WKEh8BY2nJHN9fqYLlECe
xldQ2EJCaQwJEUdB+DjT0UkMTDIXm8whpgBeESVTRsuW0rOlrFwFK0fFLlax
ioxiREpswEcf/QkSY+Paj1ct+wAEqLdvXKHkF9sUaKscAxXOoUYvmhmSucJA
Xghnoi+fbUQwc5MNA+ouJ0FuMMpiBiox7Y4y4NzjQfR7inpchX0VRZ3GktFy
ytUe+f1JK7zfL7cLr3Qpbw4ZppupN/uFV7sEd0dhQdPfG9PdOSe72sm+e05w
q4s9VU+61EyZa2ffH5B9/rj7zpAcfAt9bNSNHbCWtOny+5zIFmV2kyTdzkqU
4SIlqHAlMYpeFFCcdCwj8mBZdkReWlBs2N6gQxuDD/oF79sQfWxHccyJgN2r
Tu3dmBx5BlucxaCT1FqN2mCRG80SvZmrMnBkeqZYQxeqaSIdQ2Jgi3Vsie+C
XuAMGcIUKVlCObkshoGIoyLjWKgEJjaJT0wTENJEpAxoAjJGloKZqWTlaNh5
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
PYgd+hR+uen/Aslgbkw=
                    "], {{0, 150}, {120, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                    "], "RGB", "XYZ"], ImageResolution -> {434, 434}, 
                    Interleaving -> True, MetaInformation -> 
                    Association["Source" -> 
                    "http://en.wikipedia.org/wiki/File:Petroica_boodang_\
Meehan_Range_1_crop.jpg", "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset050/86e/\
86e5ac36df28e1906bb4d8332bd62260_v001s.jpg"]], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {57.99999999999938, Automatic}, 
                    ImageSizeRaw -> {120, 150}, 
                    PlotRange -> {{0, 120}, {0, 150}}]]]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.746391022179982*^9, 
                    3.7463910221810017`*^9}}, CellID -> 43597922], 
                    Cell[
                    TextData[{"Fact: this bird is way cooler: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
gvn/rq6u+Oe/Pp7+8y9X2Xx1S+fXeU1t+YWLkkPFh1cOHJT4G9mLajYmVOQz
xLmE4eCQBfhNv1esozHNcTatvuMQtyNGbREq6Dr93KOanf9mssJjCI0KEZ2D
kT8vlca+tlF8zFku2papC9N4LlPGfRQF739pM/L+NfJhbWVdVVAw/eQnn34+
1CQfzdZXLH48W1YuKXn37YXxffqY4jeKE+i5g6zdsWnAY/g5e5dYe9Dsehuy
I7yOpAhXcndjXtQ44jkU/T2i0Nc0P9SfIxz93UyoPRaBBDqHzTO6mDuRrhZq
Y+3o7iGYuiCd+NDfmw/yuWYzW7+SYsAnMhHZJRhKjcIUy8jgrLFHvFsk4j06
0P0j6Z637t/fTZyz6ltnTivA2pPiKbkosxJplVKpxoaNm4tZjq8F9oPN8Zm9
+94HBbE9ejB9wfxaXsfsprLF3KgknErbxGv9qhuIMRoNVtOhK+a1VdW5B1CR
uwvn9Dvqz6Pq9nCU6XZzlOv3cJQRLhCO52zGSJ/uooyQ7GoszNC5ZxgKFqZj
bpP5yEBoR3/y3QQuF0rSk2Po2sdzNqJCt4vuv6v2/jXtqtfW/F1YHDsZljIN
JAoWv0uq1GoN+VebS4gPaU3M0FT7XVZ2QfLZ50e7sjlGhVxRyWpo5bymX4JY
x/b4dOLzuEnxHoszWlRvo6+JU+hTK9bb1K8lYLWDh/8AJfz8C1nbMdrEB8v/
akg+OtXwsbIR9sMUkzC7PnVxGoIifaBQsmdlcwVKpPv3wxXiAbojYptub4fe
dJx9n/8O9g+YiygbX8jFHEwViz82v7pl96XLvzAb0mT5YPnzsvLz0v/758fj
23r78DUvbO6bceGmscXsqDG4lLUT1flvodJQ3PL6J5KNKnYdXQl+Z3VWt9Xi
sBi/IVSa6nQqdDsw3jdWlA/Sp2bER0eur9K4vuLxXyPkg51bsDid4nl3ivsk
UJDdtlNaIDdsKCoMO0h+D/Hcz+3tqKkXquLjqhifj12LyQHxsJIp2VxjFasR
f2XDpoMVFy8rmiMf5RfOSz7+9BPDqKSkm5bWVmJ9syDays5O/igcuhi/kt4w
8rpkUx1zCzm5xU3jryXWxx3Ctdx9yA4aCDnL7cmYf6VA+6h2yJs7CXPW5PC+
/mM+tKI9X5ElysfCbHj6u0MiSLjtcFfbY2bHJPys3y3WbDfCX6nI3o5lsWmw
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
D0s+yJ59lfIiIqx8RVtenw/b1sBHfXm5tf8Sf+cM2eXKvAP8vWhf0nMcGbkc
W8gPfiI6Gcl+8ejtGoEO9u3gb+FKcmBDeoz44esxpNxPE0xzFl2tfHCAbNS1
nP0Plw96HjZPHm7drh4fpK+Ij1Lig+2X37J9+R5Y+w1FpvfdHCBdRnpmCnFU
UEK2uRDn0rfgM7Lbbw5dgj2D5+LV/tOxvk8+VvXIJh8sma8vZ/skpAclwBCS
gFd656I0awvFLw/ZfuSLdSRDPbvCTK5m+9dyPhIGDLp0/MRpR+JD2lr5uIWD
vK6pWk+c6AoBrZiPY3MHyCcZmsL2wyrhXLF6+pvkG1zO2oXS1Nfx7YSXcSpt
A67liu/4+tPi+T8YX8x+sLVycyLHoI3GjtlAzkfikGEXz5VdkJ49d6FV6asG
wX3jmn68lScR9yqp844ilvvWMrB8QAn3E6pMaz14Po1x+hD9XQYWm/+SvQsb
yOfzs3Wv2TfW2KFjp9/37N2/5sTJUkfmY5W2YC/Rmnf0PSxU1cGt/x+qd6w1
gb3/853Ry9HV0b92jzBWOx3dqROOfflln7Lylr3LU9zz6BEaA5bfYXUDx3O2
YAjFSWyPF4VcfPdaWFhY5RfHjsa1dM985tM/QuPA35Wbfwil+duRHToYjoIl
f4cR4yM8PByfH+XvMGhR/uq5nlrUosetv5/t0TDqnX+X8x7U7x/0fe71u+di
c7kfOMinC2xVlnwOm/ERERGBr7/5pl9z5wVrEGTljkBCkAmB1u4IYLC6DaZj
9c697bsA6z9AS3/fWNRpb6B1w383eJ/G/M5abG+wpQv8rdrA2dwGarmidi9L
R0fH6oKCgrNHj33V61zZ+WbnFNn6AhlfoyqC7c0o5RAaRP1zGz7nbmjp7xsP
+W24T7+TSkW/Siaizv67lfb29jj85ltPVYh1cM2aHxTfgdYQ5H+Axp73oH7/
oO9z99/xOsfb9gCu4cPFxdX45pG3F7D3cjSXD7HeWIS0kWjq+ff79w8Tt7/3
ri4fzs4uID4WtoSP/wfjUt02
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJylkL1Lw0AYxh9bpaIVBR0cHCKIg1QUXQQXq0NRRCSt4NeSpEkqpGm4pEhx
dHDt4KLi4gf+B7qJ/4AgCOrkoM4OCiKIxOcaoSA6ecfd+8tz7/vm7unVS6oV
A+A3c1O19bQQWiXbwY8F11+zXTM/7QambYoxvYFiVeYiVnWMot84DBTdQKiZ
SWVxaVlJPCCBJsQxjiHN8L30/Pws/hxvN5ANcT0oe/2d9+tozZu+ATTIS48Z
ngjIE+S59cCTXCV3GQUtTz4ipwQvSL6Suh7xk2Q74nfJIqdO8W1JsmJHnJKs
RyzfohgFUSQ75L6iUza+7yNfkjTdhSxjT235UJHBJBToKGMNDgIMMrr07Pe6
kVrdHEqsMbh7qECwwkaBtSmqZXY1GS3qJqfDDA7p/U9PfWt0JPpDcgZoegzD
1wEgsQd8boXhx0EYfh4C8TvgYrteX9qmnc/Uq3Wtbx9o3wROz+uafgyc0ePu
e08TWk2Kc8UsC3g5AdqWgE563bLy3/PI7+9zHN4CuQ1g9hLY2QX6md+++gXJ
74G4
                    "], "RGB", "XYZ"], Interleaving -> False], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {73.33333333333329, Automatic}, 
                    ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}]], 
                    CellChangeTimes -> {{3.7463910039639883`*^9, 
                    3.7463910175865955`*^9}}]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.7463910228045287`*^9, 
                    3.74639103391722*^9}}, CellID -> 277434961]}], 
                    "ExampleNotebook" -> NotebookObject[
                    FrontEndObject[
                    LinkObject["5ufyx_shm", 3, 1]], 201], "ExternalLinks" -> {
                    Hyperlink["Bird", "https://en.wikipedia.org/wiki/Bird"]}, 
                    "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
74e/74e60450-d5b6-4ec5-8d2d-bc72fa93466b/download/DefinitionData"], 
                    "ShortName" -> "BirdSay", "SymbolName" -> 
                    
                    "FunctionRepository`$74e60450d5b64ec58d2dbc72fa93466b`\
BirdSay", "Usage" -> 
                    "\!\(\*StyleBox[RowBox[{StyleBox[RowBox[{StyleBox[\"\
ResourceFunction\", \"ResourceFunctionSymbol\"], \"[\", \
StyleBox[\"\\\"BirdSay\\\"\", \"ResourceFunctionName\"], \"]\"}], \
\"ResourceFunctionHandle\"], \"[\", StyleBox[\"thing\", \"TI\"], \"]\"}], \
Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\) ask a bird to \
say \!\(\*Cell[BoxData[StyleBox[\"thing\", \"TI\"]], \"InlineFormula\", \
Rule[FontFamily, \"Source Sans Pro\"]]\).", "VerificationTests" -> 
                    HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
74e/74e60450-d5b6-4ec5-8d2d-bc72fa93466b"]}]]], Selectable -> False], 
                    RawBoxes[
                    RowBox[{"ResourceFunction", "[", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/e59a5636-8791-\
4dc9-b62c-8bdd0403574e\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"], SelectWithContents -> True], "]"}]]}, 
                    "ClickToCopyTemplate"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "\"\"", 
                   StyleBox[
                   "\"Wed 5 Dec 2018 14:43:06\"", FontSlant -> Italic, 
                    FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
                    StripOnInput -> False], 
                   TagBox[
                    ButtonBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                    ButtonFunction :> (Symbol["System`ResourceFunction"]; 
                    FunctionResource`DefinitionNotebook`Private`deleteMe[
                    "c11756aa-c6f9-4c4f-bc60-e2e0dc52c2ac"]), Appearance -> 
                    None, BoxID -> "c11756aa-c6f9-4c4f-bc60-e2e0dc52c2ac", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Center, Right, Right}, 
                   "Rows" -> {{Center}}}, AutoDelete -> False, 
                 GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.35], 
                    Scaled[0.35], Fit, Automatic^2}, 
                   "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
               PaneBox[
                TagBox[
                 GridBox[{{"\"\"", 
                    StyleBox[
                    TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Cloud object:\"", 
                    TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/e59a5636-8791-4dc9-b62c-\
8bdd0403574e\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/e59a5636-8791-\
4dc9-b62c-8bdd0403574e\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"], SelectWithContents -> True]]}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Visit web page:\"", 
                    TemplateBox[{
                    TagBox[
                    "\"https://www.wolframcloud.com/objects/e59a5636-8791-\
4dc9-b62c-8bdd0403574e\"", Short[#, 0.75]& ], 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "74e60450-d5b6-4ec5-8d2d-bc72fa93466b", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$74e60450d5b64ec58d2dbc72fa93466b`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]]],
                     Selectable -> False], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ResourceObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"birds\"", "\"party bird\""},
                     "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"74e60450-d5b6-4ec5-8d2d-bc72fa93466b\"", 
                    "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "74e60450-d5b6-4ec5-8d2d-bc72fa93466b", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$74e60450d5b64ec58d2dbc72fa93466b`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True]]}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                    GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
                ImageMargins -> 0]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
          Automatic, ImageMargins -> 0, BaseStyle -> {}, DefaultBaseStyle -> 
          "OpenerView", BaselinePosition -> Baseline], Deployed -> False, 
         StripOnInput -> False], 
        OpenerView[{
          Grid[{{
             Grid[{{"Published to the cloud", 
                Hyperlink[
                "\[RightGuillemet]", 
                 "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"]}}, Spacings -> 0.25], 
             Grid[{{"ResourceFunction:", 
                RawBoxes[
                 TemplateBox[{
                   InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[
                    0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "74e60450-d5b6-4ec5-8d2d-bc72fa93466b", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "Version" -> None, "Keywords" -> {"birds", "party bird"}, 
                    "ContributorInformation" -> 
                    Association["ContributedBy" -> "Rick Hennigan"], 
                    "Documentation" -> Association["Usage" -> {
                    Association["Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"BirdSay\"", "ResourceFunctionName"], "]"}], 
                    "ResourceFunctionHandle"], "[", 
                    StyleBox["thing", "TI"], "]"}]], "Description" -> 
                    TextData[{"ask a bird to say ", 
                    Cell[
                    BoxData[
                    StyleBox["thing", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], "."}]]}, "Notes" -> {
                    Cell[
                    "Some birds can say words.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.746383232110336*^9}}, CellTags -> "TabNext", CellID -> 
                    533233984], 
                    Cell[
                    "This bird can say anything.", "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.746390791274925*^9, 
                    3.7463907912759266`*^9}}, CellID -> 181442125], 
                    Cell[
                    TextData[{"Look at this bird: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxsuwesbGtanmnNCM2ME9B9w0k755xr78q5Vs6xVuVcO+ecT87h3nNTN03T
TROa1ISGBjEYDGNjGzBxAM80A5LtwYGxRza2ZDTSzPuv2udyNUJ6z6+/VtXe
R+dZb73f9/1Vp6u8rtb/u7/1t/7W9v+IRS3tR7e2Sofad+GBsba92FirVZm1
nVqjtrVQ/u9x8UP8OcAfst86WFrbrS1t5RorZrkm54qclU0q6ahs+iR1XlJn
JGNGseZMay7tLNhZbzrnc4qBdMFv531WxmNmZvT0pGKPyuawqPezahfEq92c
0sVIUA+U4LpiXGeEaQ8kbvpiUNtC5Lo38u5C+B1v+Lo33OaPtvkit3yRG63V
H7v+RtcgX/yaP3E9mLgZSt4KpdrCVGeY6g6keqBgojsQ7/LHOr2RjoVwuyfc
uRAb8MSGFxLjC4nJ+fjYQmzYGxvwJ4b8CawDwURfKNkTTnaFUl1BqjfKDcX5
saQ0m1Dmk+pCSvWl9CBtJWibYzISnVWonMLmDa6Y5spZupRji3kql0mknUQ6
G3PyLSUypXi+lsw16Mwim1uWS4tmZTlfW64trW1sbB1ub1/sb9w73tzaq61t
lRbXnPqiXqqJ2QJr5yjFCbuc58BZMWZVe9ZIe6zMAtg6+WCmEHDy3nTeY+dm
AdnITKjWuMu5l9c6AbnFmZU7WbmbFjsTXEeMaYtQbS3O3ugNghecQzewupxv
XnGOXsNTvui7rq5hBedA/HpLwcSNUPJmONUGShBotzj7oi7k4C2icLcnQlDP
x0cgLxQd8sUHA8nBULKXQKa6o1RPlO6PsAMxfjghjKeUGVr10nqA0vyUEWLs
JJvh+LzM5lWuoHEFXSiZfNHi8g6TT6ccO5m2k1Y66eRAm6zZYjJbTmarVKaa
cGp0tsHnm1ppya6tFpqr9aXV1ZXmzvri1m5xZT3fXLarTaVYFTIF2nDixM/G
vKhMS9q0as60OBMzF/xO3p/JLWQBOT8NGdlJzRnX0mOKNdTizKkdgPyGcyct
tqf4dnAOp24EU+B8fcF18nzo7fkgUF8D3kDsCnILrzfyDtSi/Ybzu1AofgMC
bXg7GG+DArF2vDtwpxZCt+Z8N2b91+cCN+dCXQvRfhjbGx/2tfwchY37ATmS
6gTkODMQZwfjwnCSH05KY+BM6QucEQRqxgjz6aSQYcWCJOYVsagKBQ3ic5DB
ZU02Y1COnbJtAjntEDmFVLpAZ0p0ppxMl+NOM5FZTGYW+fyKWlxOV5fylXq5
WtnYyi2vpWFmhEa+zDn5JOFsBSV9FpxlfUazZnV7xnTmWpxdyPOZ/AwEzlZu
Ss9M6M6oYg0IRjevdYAzIay0Q4zcRok3k8Ktz3KeJ5DfAudWbhC8seveK8jv
+uHwyFuQC/kqOgA5mLgWgq443wjGrgciN/3hG7hT88Hr8/4bHt/1Of+7c/7r
cLU33OOL9PujA4HYYCDeG4qDcC9EIFPdCbY/wQ2lhBGIkSdoxcNoPlb3cpqf
tYJcOiZmKCnHC3mRoM4rfE5gsyKbUThHA2rC2UmDMGiTNZ2jnCI4U9lSIlOJ
ZxrJ3GILdcquM05VytaMfGN9M7u0nK41VJg5W2TSmaRuhxUjJGozgnrlZ3C2
0rO2M4dAzmTmMjlX+Zl0dsLMjhuZES0zrKQHBbOLNzo53UVNOLcx8i1autXi
HKFugg+ozkfeBueF8NtvHEui+LOc/dG3iQjhK85XqKHY9WDsBnE4Xh9+1xt6
Zz7wlsf3tsf37pz3nTnvW7MLn8dmPnDLG+z2h3uDMQI5nPwMZ6YnCcj8MCWM
0PIIrU6ymoc3fBAH2SE+HRaySTFHS1lWzHJcloW9eYfhMgQ1TfxsJmwrbtlY
IXBmnBKUyhQRHYAczy1FM82IVQvppYheiJmFpFVa28gsrljVhporsU42YTsJ
zYrIupdw1qZanE3CeRqynRnHmU1nZp3srJ0Zt7PDVmbQyA7p2RHZ7hOt7ivU
WiertTPqFecEf/OKc4xkLzIBkLG+YXjdF7v+JpCvXUEmnD99waeob7icXdTR
677wOwvBt73+zy/43p73vtWSh3B+C/YmsR/pBORgvCuU6HZRd7uc+1pmpsRR
Rh5n9WneWBCsAGcHsApORMhE5XxSzMbFbFJwUpydwCpmGCHDs45EpxXKVhOW
FjO0lGkkTBOWppw8nSmAM1KacM40Yk49ZJaDWt6vZANqDsBX1p3mskkqYDFp
Z+O6HVVNv6R7RHUKkrRJzZg0rEnTJrLSU7YzbWcm7cwoINvZISPdTzg78HO/
bPWIRpegE0u3OFPyzZR4M8G3RZhbyA14ssX5rxMYhOPIjZugSpI5BjN//m/i
TDwPzi5qIn/kWsvMC77PfZZzS7jiDV7zh28Fo51QKNYRjne6nLtiqa4E35cQ
h8CZVSZ5bRZOFqyQaAfFTFjKxuR8ApJyCcI5kxDSSZLYWQbFkbYFyhJShggl
DCmhK0lDT1pwdRquTtr5ZLoYT1ejVjlilkJ6wa86ATntl2zQXlq1a4tqscw6
uZjtxNzQ8InanKhOtKTqE7o5YVgThj2GFSXPTA+bzoCV7ceqZwZb0px+xe6V
zG7R6G5xppVbFMws3oq7nIOp6/7EuyAJtQocNgvx6/N4GHddHSctXCD2lkv4
nTec3RUNSfQKOJwMIdjn/e94/J+f831uzrUxIbzwjsuZkPcH3wmGb4TCbeFI
eyTWFo23h+Pt0WRnLNWX4AdS4hBN/DzBaFPws2iBR0DNRuVcVCkkIQnKU2LO
dbJD8xmacVhwThocbfCMzlM6F1e5pK7A1cgQeDRmpGNWNmbmwmY2ZGT8etor
2z7R8nKWT0wvrpqVhpwv0uBspEOaFUKnQdpmeVJQRgWthXpMN8d1a1S1B4nS
/aBqZvrAWcv2qVlwBvABOd0t2V2iBT+3Ec5qe0puTwjtMe4WOAeS17zJd4Ea
rgY94HV1DahJHXRpE33q5Dga6WtBN6K9CHbi+StXoznxhm+C85tAfouEs+9z
4IygRkFcCFwPhK6DMwolymWLcyzRQTjTvUluIMUP0uIwI43B0qw2K9g+KR1S
MhE9H1cJ55RSZMQiK+R5McfyOc41M0dZfNJgKZ0ooTNxjYGr46YeN4yooUcN
M6pZUTMTMZyQZvsUa0EyvILp5TUvqzaX1EqdyxXjdiak20GY+U1oTPDyGC+P
gLZsjMnGqGoMqgZM26dZvXq6R3N6QVvLDhA5/Wq6T7EJZ4g32t9wdv3scg5R
6DeugzZQ+wleIp8bzkB6BZkY+52/Lnau/O4L/PF2jDMwNppAsgmj0t3w+t+Z
9b3V4kzC2feu13eNhHPwVjB0C2Ymfo7eisRuRuO3Isk2cI5TfzNn2QnDz1ox
pRdptcgoRU7Kc+AMyEyGY9I8ZbEpkwNh+oozm9D4VnokdC2iKWFNjehGBE5V
jICkLQjqPKd6WIWIketNuVhJ5XJRywnrVuBNaEwJyrggDUOcPCioQ4I2IBl9
qtmrmwSySjj362Du9LeEK+DsWrpDMDuAmtHaKaUtKbWBc5RtC9M3P4P6ujdx
HU5umbmV0rjY4tzK4U8hk32iIxDvxtwHoa4FsIl2ACZ8O+d/m0B2nQzC88Gb
/kBbINgWDLUjMVqhEYu1w8+RRFeU6gPnFPs3cBYzQSUf04qJFmdIyjPoN0hT
5wjgjNAAZ/gZK5EhuyktENSaHFXEsCoDdUjVArLiFyQvJy0wsoeR5mhphhKr
TalQjmdzIcvy67pP1jyCPMXLEyDMiwMQJ/Szci+n9Ehqj2J0q1aXZncT9zpQ
j5EeMIixe1UXvup0yelORAdQI6WvOPNtMa6dRDRzM0Df8FPXIV/yBlBfQW65
mnB+xx1JcC9uXAn7RJs/2e0jox+Z/lqDti/SjtnEE7gBzq2saEFeCLb5Qx3B
UEco3BGJdgAvSYx4VyzeE0v2J6jBJNOfYofQ1AFyi7Ogz+HNDT+7nImf9SKr
FXklz0tZDm1GCzIJZ4tL2Txli3RaomwZWQ1XJ3UhoYkxVSKWVpSILAUF3stx
HpqepZk5iptLCR5KrNfZYgljelC3FhR9XlamRWlMEIaAl+F6Ulw3LfRyYhcv
dYpqZ4szhJLX4gwnG043yZDM1eqi7m6lNEohOEcFcIalb4bYG0Hmegs1GAIs
SYyrWHAfJojbMZKg0/4UdSjVEU71fvY0wz3QaEfnBrCeAAmKBf8t9MyAvBDs
8IW7AuHuSLQ7GiMKx7ujyd5kaiBFESWZQXBmhFEWTZ08zitTouGRzHnSFJB8
ThoFSiswQK3kWcltnlmbIZwdgpdxZNaRGRvdnegam0+aaD/kuC5GNCmqyBGJ
D3C0n2EWUqm5ZHImSc1Q9BzN1+oUOGdzQdOaV7VZUv6QFcIgzXZTTFeS66CE
DlZo5+V2Ue0gnI1O2QJJwrnlYcI2061ne/RMH1byMN3TSmm0dqQUui1HC3WE
uQHOboDcbHH2k1i4eaUkmfXC5MiICK8JJdrJcQTVE6H6wuQIiPTDUOvoyZ24
bwCvN9S5EO7EbLIQIuNJINoDzrF4bzTRB8VTAwm6xbkPnCluGJw5aZxXJ8mM
oM8q5oJiezXHr2WjLdSQkqMwGKLZ4CyGnCw5MpdVIUwrTFoCedYSGJMH6laA
xDQuLnFhkQlwKR+TcjknPKnULBFdq6eInzN+y5zX0GZIYy7kHortSDHtFNtG
sTcZvo2T2sBZ1tEet6N5g5/d6OhRWzZ2evVc72c5w9KIDtaN6JTYFhduxvgb
Ue76G863AtQt1EE0Ei0hHILJW1AoiU67jRwWUWQTSZEOIcr0gjMGOnDG0OFG
dKssdiBAYGAyZYf7vaEBX6gPm0CkD5zjiT7YmECmBltmBmeGHWa5EeJncYzE
ozKJWUzR51RrHpxVNAPZhJaDknI2JaZp9M+cTXFpDCkyh9E7IzMZiUmLjMXS
JkMZdEpjaIPUR9J+KGxE4UIS42MpL0UBNVlpGhlSqycKxZCd9prWnKaNSdII
xw0wMDPbkaSupejrSfp6SriOsU5QCGfZ6JBsYHzTcuS6gJdsQDg7QFydJdfd
6GhHRL/pOm4AdZi7HuZuoiACcijV5kvehAjnZJs/1R6gOoI0OfOM0F0RugMK
0T0gHOf6Y8wAFKX7W5xd1B2ohkThTrjXHxnyRwf8oSECOTRIOEd6wTmRBOr+
FOEM9VFMb4szL4xx0igaKpR7wpmcSXo0x6u4qNVMhKDOUlKG4jMpwWF4B9VQ
4tMyZ4uIayQJY9G0nqKMFGMwLQF1SuPjqhCVhZDIBXjOz7EQshqq1cKFUsBx
FkxzVlUnRXGQ43tppoNlblLMjRR7LcXcYISbnHyDU9sx60n6Lckk0QHfIpmt
bK+R+2szY29k+9UMUqUVHZ2IjoRyMyndRHq0LI2IBmo/fcufugXOwWQ7EhiE
g1RviO2NsH0AizXK9WODGRmK8ViHo9xgmOkPp/owTRMBeKwrEOkIRvsD0eFA
dMQXHgRnKBgeCMf6kBuJZP8bJw9Q9CAgQxw/6nIef+PnSdmc1iwPLK2mfXom
YGTCei7mWpqWsjQ5vssogqOANu9wfJrmbRYmZ6wUbSZZk24JGUKZUspQ45oa
U9WILAclKSyJYUHwCVy1FiwU/On0vG7MyOqYKOJ297BMG81eh5kp7jrNE868
chO5wWsdb3KD1Dsz00U4Z/uN/ABZc71mvs/MYWbpQ57gNRjDWe1Wyp2+4ecI
f4uUQrotQsG9hDMEG8O3IBxmByM8UZQfjgsjcWGYHF26nCFcibIjEWY4zAwA
dSTZF070YpqGpYOx3kBsEJZGbnjDfeT4KNIXivZG4v3gDD+DcEs0M8TQQxw7
IggjgjguShOoR4o6qRjgPOtyXkB66Jgz0EvnkmqelXO8mBVczrKQEUWHF9Ic
HC6QMKG5FnOLITFii5StUpaJsSWmm1BUM2JqqwMRGrXQFWdzyuU8CM4c3dby
Mzi3wllQ2gGZyOhscYafARkCWIhwzvZb+UEIwPGsksYrO1uWJgO40I7GA6Uw
zLUhE8J0W5BuhwJ0d4DtD/FDEXEsLo4npLGYPJGUp5PyZFIaJUfE/HAKEkZj
3GiUHQPqKD0UoQaJkn3k9D4xGIwPtfzcsnSAcO7/lHPLzFec2RGeGxV4JOQY
IMvKlKxPgbNqz2r2whvOES0TRx1Ea6fkJDmvQFJOFrOSlCECbRLdoJ3mwBk+
J0cfBLKetM2klY6bDoZxAI9rWlRRwoRzuFj0OY7HsKYVbdzl3EX87Irl29Bs
CHKXa+ZO18+dSGk9TWRmelqEiY3zfSCcLg7bhSHs9WwXafCsLlbvZJR2SmpP
ih1AjZkFvXSY7QgxWDuhINMTRCAIoxFpMu7iTSgz8SvOY3H3lNjlPALOMW7c
RT0apkegSGo4nBwKJ0dC8dFgbMQfGSZB7UZHi3PM5YyUbkUHOLME8rgojEsi
MTMmMhLO5hxyA7MyUTqoOjE1k1JyjJIXCOScruSNFmo5C4noq+UMR7ydEYW0
gJU0e2nThWwl007CyiRMwjlpGAlVRWLDzy7nWdOcVNVRURoAZ45tpzkiTuwA
5BZnSetsre6o0onxxEQmZ0hQWIV+CJCd0ghZCwNmnhRE2J63MLC0wdK03JEE
Z7Y9xhG8Ea4rzPVEIB6Qh6PSeEyZBuGUMkWps0l1llKnU9Ik7E2Jo5Q0nBBH
Y8JYjJ+KcZNQi3YkNQrILbVQI6iDyOrIUCgyGI4NoKkj48kVZ1ia+JljiZ9b
qOFnVZvR0G8YHt3y6XZQS4dVJ644lJzjlIIsFWWpoIt5Xc5pQK3klBZqJctj
A4cjUqQsOf+nM2ly8m+RNWGnk1YGe8qyUroO1M16sFT25bMeOz2l6aOSNMTx
3Qx3i+E7ODhZ6cB4An0KGWZWTAIZ0jMkMeBeuzgAttnSUK48ihX7dJ7ENRo8
MoNr7rESOItQV4LvSQr9MbE/LvbHhD6EcEKaSGrTCW0WK6VOpvQZQMYGlgbq
lDxOS2PwdlKcigvTcRd1lJuOMlNRagyoW/qUdgt4KDYSjg61LN2aBFucaWaY
oOZHP7W0os5gcEBrp5l+zQq0OKMCwsxKQZWLmlQwxJwJ1EpeV4uamle1gtLK
EyGn4jqe5bNp2nGodCbh4iWc7WyKyIbJKcNYaoYr1UAxP+9kZgxzXJVRjrtZ
rkPgO2WpS1I6ZbVL1rtBGBHd4oy524Xch8Swc32gmikOZksj+cpIoTqaKw9n
C4O4iKdIE2L3YboRdPKJIS31pKRuSuyjpMGkPIg1IQ0ghOFhGDilzYEwrU0R
KdPkYouzNMnIE6BNyTNJcSbRQs3PRrmZCD0Zo8dj1GQ0NRFJjkPhxFgoThSO
jYXjo5HESDQBV6OLHkrSIxQ1As4poObHeAHpMSFKk4I8IyqzsuZRDZ9qBlUr
ojhJOcPCtPAw2Lb8LOY1tWBoRVO/ko6HuAVS0ZELWS6fZXJZ2smmnAzwArL7
wRb5bCuVtui0trwYqVR9xfxcJjtrWhOaMswLPTzXIQpdstSjKl2K1itrvZJ2
xVzVu1ucERoEcq4/VxzKl0bzxfFCeQTKl4ZxBSKos0NWelA1e0WjW1R6BbmP
kftpeYBSRhllGKLUYVqdYPTZlOFhdS+jexhjinnDmZKnAJl2lZRmicCZn4WS
wlycm4nTU3Fmgqz0dIyaCVOTodREKDUVTE4GY+NAHUlAQ1A0NZighiEaqOlR
lh3nuQmBRx87LchzouIRFI+s+xUjpJgROY0JhUG9k7PqVTgXiQjkkmWUbbNs
6yVbK1pKMSMXCxBfyIEzk8kANVwNEcK2TdsEMm3JK4uhes1bKfnAGdGhakOC
2MvxnaAtSj2y2qPqULeidcmqa2azy7B7LKcnnSWQYd1icbhUIk4uV4ZbqAnt
yggcDtRWekCzYGnyqyRliNeGWXL6N8ar46w+wWjjAMva86zl5UwPZ85yxgyr
TwM1ILfEKtNYGcJ8uoWa5mdSHKFNsXNJdoYA56finCfGzEdomHwmmgLwqRAx
+UQ0MRGNjyQSg+g9YtQQlRoGZxf1JMdN8dIsOMuyR5QXJMUvq0HFjIGz5LBS
RpDecFYLplYwjJJlupCB2ihiTauVnFLKK6WSUCjw+TxczWcJbcqxGctCXNCm
iT4EJXJlOdioBcrF+Xx2Dpx1Y0SSeyWxW0Ttu+LcTTysEtSArFvdltOXzg5k
8kPZwjDcWy6PVipjpeoYVuyLlVGsLWPjBenMkGkP6Gafqvcp2oiEEmCOyeak
ZE1DgjXNW3MEsu0TIOzt2RZt4mp1EsYGZ06dIRt5llY8lDzHiPO04EmJHoqH
FuDtpOBJCgspwR/nvYiUCD0F2uHUbNiNlGhyPApLJwYSidF4CukxlmLGXc4z
LD/Lix5ZnBckyCupQdmIKjbxs+iIxM8ZTcubsC7AWpU0BM5W2TFLab3qaNW8
Wi4ppaJcJJIKeSGXY7IOwDI2bKzTtgE/s461vBSAn8G5kPOknUnDHFXUflXp
aUkzeg2jB9L1bqyWBSf3ZTIDudxQPj9cLALpeLVKVKtNkE1lrFIdAXAIwAuF
kWx22EkP2RZQQ+OGNanjbjqzWsajpefU9LzsLEhOQHBCWBXbK9gLvOXljQVO
n2O1WVZbgARtHuJ0L6v6IF7xMYqXlhdYCStRSgpAlBxOSaGk6I+zCzHGG6Hm
IHjbRT0M1MnEYCoxkkiNJ6kJmp1mCGcPJ8zz4gJoYxWVkKRHZIuSbU52SG4o
WV0vWEgJsLUrGaKyQ/ZYKwW9WtKrFbVchqWRHkKhBM5cxmHTuuBojKMzWRsl
ks9mVhYDjbqvUlpAKcw6M2lr3DQGdK3PVY9p9BGZvZbVZ5s9mXR/NjuYzw4V
8yNQpTReq0w26kT1+iRQ19+oVh0nJi+M5vOjucwIUKftYTs9gWrrZMn3E6zc
vJn1GFmflvNr2bCSiciZIPmQzg5Itl+0fIS26ReMoGiGJCsMyXZEtCOCEeL1
4NWqBjgtwGoRWgnRcpRSYyklgk1KCCZ5XytJ4pQH6U1QIz3iqIlDqeRkip6m
uFlAZoUFCIRdP/sIZy0mmSklLSoZFVJzBjgb5Yxdy6er2RZqwrmUtSolo1bV
6lW1VCXRUcxzuUKLM+cYrS97cHkH18VicXUp2Gz4kc8tzhl7Im2OWPqABbxa
v2X2g3A6PZBJDwJyPjdQyA2DXrk0AgEmkDYbU4vNaajprhAhX53ALaiWxkuF
8UJuLOdAE/nsTC7vyRXms/i7iv50wW8VfFY+aOSjQK1mIir5bC3e2ihOmMwL
5GFKzdBaltKzlJqmSGebTsh2HEEqWTHBjDM6lIBYI4k9aMPYcHWKm0/QkDdK
e2LUFHqPSGw4lhhN0FMpbo7h5znRK4gBiJe9ogzIAQkjhZ6UDAqcZUdBaLh+
TpuVLDg7tdynfjbLeaNa0Go1rdbQKhXi50JZKhSkXB7uFbKW2wqSKolUEcsl
5PNSw1ev+Mr5BcIhOwkgWXvEsQfT1gBWEM46Q3lnuJAdKuWHysUxhAMIQ+AJ
qkuLM9Dy0uzS0uzyomdl0bPUmF6sTzWqU7XyWLU4WSpMFHOTpfxMpThfLnrR
rpfLgUolmCsFMqVwphhJF+JWLm5mEmo27h6URbE30YcWWLPAG0XJKMpmyVVB
1HO8lmU0hybM0wnJTvJWijNpzqb4NM0YFGGuxEiACAtJ1oMMIeJm0ZaANryd
Yjw0t8CIPl4KiUqEeFgNSjLWqKQlAFk0OdGWxLQiObqSNfVCBlTT1aJdyRHB
yeWsUS2Z1arhclarVa1cU4oV+FbK5cBZzNlS3pIKWaS3Vikr1fLaSmC5GWxU
vdWSp1yYBZBidqzkjOadEeDNZYbz2ZFCZqQIG+eHqqVRoINXm7XJFmTghVaX
5taWPWvLC6tL8xtLC2tNz0p9eqk6Xa9M1svTjeJ0tThTK883qn6iWgBDaLUa
KlVC+XI0V4xmijEnn7TzCSOXMnJJM59yCnS6xDsVOV3VXZmQVTHMkmIVJZ3Q
ZvXMFW0JhC2qdYzGmixQc1qK0sKU7E+J3qQYBHPX4cEE56fZAMUFaD7ICCFO
ikhKHBL0mKwm4GRRT0kWL1iSaMtiWpMyaTWf1Yt5o1Kxq1UEBTKZxHKlCMh2
vWHVF40GtKzVFpVKTSxX3FLoSPm0XMrIFZLeyHClWtxYC60u+xfr3nrFUytN
VwqT5fxEJTdWzI62VMqPQLXCWL04vliZWKpOgiG03JxZWbwivLG6sLWysLns
XV/xbi4urC/Or9RnV2pTzdp0szq7WIY8zZpvqRFaaYSXm+HFRqRej9Rq0XIl
mi/F8iXypUuwdQpMJs9kS0K2Kjl11WmYmUbGqWedupOupdMV2ykbVlk1yjA2
b+Y40NYcVrYZwaaFNIcOgRxd2jyww9W0lqS1OKvGGY2FKDVBSbGUGKXFGC1G
GCkqKHFZTRLpKUVnVJOWTVYyRdFSCWTHlLNZOZ/XSmX41qzWXANXgQ5xodfr
dmMp3Vw2mysQOKvVJlAjJYAakwv6PXCG1XVSJfNrS/61peBK07tY8zQqM43S
RLM8CaS1wgTWltyL40uVMaBbbcysNWeh9cU5gAXe7VX/zppvbyOwsxbYWfFv
rfhwfaM5v97wrDbmoeXK3ErVs9bwrzYjq0vR1cX4SjO21IwBdbUaq5QTxUqi
UKELFT5b5RFy2YqSb5iFhp1fzOQWC7lGPtd0Mo20U7PSUFW3S7KVg6slIy9o
GVHOcOS7cI6IdpcMwhlFdGTe4TiLc4/lRc6WeEviDJ5WKcDnNJpTKE6J82pC
0pKKQckmLVk0egwSy5Yk2QSyknHkfAFC/Jq1plWrw8AQ2NqNFWtpzV5aSy+v
p5c27cUNo76q1Ze0BkGNrCDNXrWMxIDzjVJBLeVXF30rTf9awwsgK3W832eX
q5OLpcml8lRrhXCFEK5PrjVm1pdmNpY8EGCC8O56cG8jtL8ZhMh+Lbi7GsD1
rSUY27e+6F1v+vDLr7QYXl+Jry8nVxcTK834ciPWrCWaVapWYyo1oVyTS3W5
WLuCXFp0SovZ4lIhv5TPLebyzVy2nsk20pm6ka5qxNVFGVILopYX1LyqugcR
cimNYBTyJsoQSpiMFTmZNZC0SAPBYDmVBXBW53idgXBFNnnFEkiDYctQC7Ls
pJG0cr6klppqZQkYrfoyCFuLy+nlVeDNrGxn1nYyG7vO+o69umUvb1pLG+bi
ul5f0qtVNy5IYuiVvFHKuZy9S/X5tSUfcnVjyYdoXWtMgepKbYKwrc2u1qdx
Zb05uwEDL81ur3i2Vj2ujQE2vL8ZPdx+o83IwUb0YDUM2vsroZ2V0PZycHMp
tNkMbi76iZYi28uJzZXUxlJqbSlBXN1INBt0o8HVGlIF/6CmDpWW0uWlTHWl
UFrJg3NhuZBfKcDbhUVi7Cy0aKdBu27YFc2sqGZZx4CmVdJqyUEDplWKYiWv
lLNypUCGtXIW0zFQw+ScJYAwBNqCygkag5In2wLwqmlFdlQIdwSxLGdh5rxS
KGvlRaW6pDfWzMWN9Mo25KztZtf3oNzmUWbzJLN55mycOmuH9squtbxlNtZa
HQjMrJXhZPK3ywVnczUI1CB89a5fngdMFyzBu9Wc2V6c3V70bC55QHh3bX53
bYFo3b+3ETnYih1tJ493kyc7yZO91PFu/GgrfrgZO3aBH65F99YiREuRveUQ
0WpsdyW+u5LcWaE2lpNrzcRqk15a5JaaUmNRayxZCLzGcq62nKuv5Otrhcpa
sbRaKq1WiJaLxZUiIb+Sd/MEymWb2cyik14sQFa9ZDZKeqOiN+tqvQZJtTJS
1KzXpXKeVP+0LFgib3LwMK/SEDhLBuGMp0BYyWhyxpAzFmIZZlYKRTTGWrmh
VZeNxQ1reQcwnY3j3OZJfvM8u3We277Ibl/mdm5jxcP0+pG5ums115HVhHOp
pBRzIAyh/TjYCOOdDsKAc7geOFjz7q8u7C57oO2lmd2l2b0lz97Swv7y/OGq
92jNd7juIy/bDB5tRU924md71Pk+DWFD9jups+3k2WbiZDN+vHGlo7UEmB+s
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
//ITf/Rb3/zj3/y5P/uDf/Dnf/p7/+pPfuN/+91f+fbv/jIy5Ee+cIHK+EMX
pX92L/+r9blviD2/zLb/xfL07xltvxj823+Ymfrhuig55P/4aJWyWWu2OGe3
LvK790p7D6qHT+vHz6Hq8bP68dPaydP66Yvm+avF89dLFx8tIh/OPwHeyun/
x8RbR8d1YNnef3zzeqa7A8aYbZnZltmWLZbFzIzFzMzMTCoxM1tsyZKMkpll
ijGJw5zunpk3/Z2S0nmz1l533arIWfavdu2zT9W9cpUK7AiR03cudgN2AA6c
sbJanLKepG0hGTtJ5l6IDt/1KtQEMR0UJ6L5LsqS+vT7NXKL+v26REq4iBIu
pIZCPvCpIYBXSIsQUCP4lHAuKZSND/VBxgVwcIHI3ICoiGOQBrCLbd+yBt7+
8Gb3fRR/eBekKwQvmPbM0Z35aREB/tuO7/M7dmDjnm2f7N666sCOdbs3fwIL
8o5NK4NPHyYiU10a0oPZgaleN8y7GjPLribX2PnDHdb2cuF4m/WzF3Nvn8+9
nb/07vnsu5c3Pnt1c7BZO91fce18PQuVZJRi64WlLeTEAVxMRfiGttD1DzJ3
PMjdeyH04/uZe65gEkt8N7pmZ5aW+q7Px1DySbxiuqyUo0LwNBi+DivQYwU6
nECHh3PewolQTxBb8BInQeb20Ra7UAJ7Kd/q87zYBfJBlngxsgqsvBo4EzXN
REMH2dhDs5zjUeJ5lAQBLVHISBBSY0Q0n70BuNinyEWJqGeFlAgBORz6MPh2
UfBw4ZkwLjEcIDPwIUwMFAyfirJCIiNOwBSDWIYKsW/XemjOx/23QamDEIYY
OQx4D2w+dXAr5PD+7Wt3+S3fs2315g3Ltm5aAZaGF+Lwro05qSHj3RU/fPn4
x69f3p5qeHx98PHV4ae3x+9c7L06WjPZ64JYhriAdjF/a/CzT2+8eDz9xas7
w22mVo/4wrlqPjmLR8wt55e5EOETwhxn4mHXmTV9YavGI9ZMRm24lXfwOiaa
h8pLL87PKSvNRaFysZRCMruEKUFx1Ri+FoQTaHACFUAm8NQgEk9HFhiIYiNR
YiVIXXiZA4BjhDaIlxKexZcqQidG5EKLwe0+zlhFDUHdSNK3UczdNEs/lxzP
JSUCap+xaXFCYE6JFVCiQSJq1L8In128sJZDDIH4ZROCfRczEyGQw7mEMA4+
lIkNBvkgo06RECHQxE4e23Fkv+9Dtp07fV/xwzng3b75EzjCagY148Cu9UAY
3Lvw+c8nWzYu91u/fN+OtccObg47viPu1PZGB/+f//zbP3796qevXjy9NfLb
L+9/+eHdz1+9/vz1zQfXepvs/GaP6NZM6+3Lndcmm948m3356PKbZ9fuzY7U
mJndNRqHhkYpSjCyEDZc8jAztTnrZHnwhqaglX2BfxkOXzabuWcOHcVA5aUV
FeQgS/LR+AI8qYTCRjDFGJ4KKwTCYGANQagmCLREng81ka8iCdQkkZEsNpMl
NjzQFlswQosvW3hmMDZa6FjkjJF4ADVOWUtQQ3Q0kw3tVEsPm5TAJvhQ86mJ
XGo8l5rAJcfxyTF8cpSAFCUkR8ORT4wE03IIEWx8OAsXxsD7BCfwkI3zXa7P
wATRUGcoiAAozNkpx2DjCzyx+6j/tm1+K/fv3gBrBQAHux7cvcF3VUbgYbDx
qSNbg0/s2bV5FQTy3q2rgfmJ/ZuDD20LPbQlOfwItyTqs6eX/vnP//r737/7
5cc3f/v5qx++ev7d+/nv389//e7u7elGswTLIWZdHq+HdjEzUvPp/ekv3t1/
cHPg3txAnYXWYOdVmNkCfJaJhjBT8sfY8e15AZ7w9bVBq9pO/Xnw7IahnJMX
sKnCkozMovwCFDIXgykkkEvJTARTCJx9+SAy+AiLNCSRnizUkARKEl9BhqNY
SxYbKFIrWWIhia0EoRkrMC4mOVpgxfos7cQuWBqnqCKoakiaBoq+lWRsZxET
2YREDjEJUHPIiWxyHIcUyyPGcolRHEIklxCzeAJi48+ycBFMbDgdF07DhoHg
nIEByCF0dDAVGUhCnSSXnQ45tQNKBfQHiFnYNU4c3Q6Qt29d5bdxGaSH7xuN
netBpUkhmZEngo7uPQV74sFNQYc2Bx3ecvrw1tTIkzmRxzjouP/69cvv3s2/
fzb31dvZ797e/fn9o+8+v/9qfvraWO1Iq5lLzmThM66ONz2+MTLaZpkern79
6NLju8NjnbZqCx2Og21WkwBhZ+ZUSbEtqJDewlPesI2uoNUNAR92xWyvy42w
47IVuIIiREEeqrQAiy0iksooLCSDj+HKgTD4lijUUURaskRDFWtoYjVDqKAL
VXBOkeopMgsVUIvNBKERx9eDsDwDTmDBC61YkR1Q4yQegsxLUFQDaqKmgahv
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
BjbOjDpamBLCI+co2AiDgNBSqau1iqQshFJAFNLRAhoKJGZiJRwipEedS2GQ
kjH58Tnxp9u8SrMYpeXlDTaqOh20+5eaHlyo7fSymkwkIDzZotayspWUNDO3
1MLNMrDOGpjBZlaQiRVgYQWaOMFGlo8zhLOGFwN4tYIkje9G3UQYhXJapIIW
q2enejWl8L+aG616dWvkty8f/eP7R75B9s2jX9/N/fhq5tcvbv769vqPL85/
86jr52ejX95rezlpfztX/8WtpndXq356d/Xz2ap3VyuejBmuNPHeXvQ+n3aM
e9F3OgVPx42Ph+TPxowQzoAah/D5mVSWBOnh8zYSjA19L52CzfqDM4OYxyTl
g5lZ5CIWucBnZmrh2TP79+3fuXrtqqN7NuZH+8cF7EgM3pcZeRCm3pkDm8HD
4ORTu9emhe8jFUaxsJkydomMWQrhU2uX1NmEcj6KRy0Vc/FcKkLEROlEJJ2M
qZaw9HKORc2yKOkwl3OTArPjAqilCQ0m8mij8tHV1tsXqtudrCYb7UKHrkaH
d8nQGk6RSYCyS4qs3EAr+4yNGWhiBhs4gUZWiM/Y/HAD33cHjUYQr+TF+/oG
E2IkqUpX2lsjnR1yvbzT88vnN/7767v/+c29376+/dtn1797NvH988nvno7+
9GIK+sN3D/p+e3P1l+cj39zv+PJWw/f32r+arf7yRuODfuWTc5LHY6abrfzZ
Fm6bOrdBmt5nzOlX5054EBP2ksfDqifn1K+n7GDdxdBY5PzHOYQ2Cfk7ZzoB
NpS8RTEXRiGHXCxnofLTwo4c3r9m3drdfqtKk4LiT+9MC92fH38s/vTegN2b
Tu3fcHLfeugVqNwwCSNfxUWp+WVKbpmCjXZq2C4lFV4sGq4AJiCLUsohlZpk
jHKTwKBgq6VMo5JnkNMMEpyAnF+aESGmF/TUyy72e57eGro8VH6uTt5bI682
Uvn41Jz4MzRUolOJd0oyTJwgC+cMcLZwAsDPPsj8cAs/Qsc9q2SEgMDMFZrC
Li/t2jnry7kO8Orfv7gJwfv3r+5AGvwIdfezO4D3zdW2b+dHf3w99cvzsV9e
Xf7xyeCvL8f+9u7Kj/Ojzy84H49ob3aL54dNn067X132Pr5gbdXmDrvwPZbS
6XrWxUbWhRrKnV4xmPl6E+fNBefLGRfMR0iJxcSAI4QzOBmPSFkUCZ3xh5//
QO2bhpQCIbMUlRNz7NCuDZvW7tuzgZgfnRy0JyVoP/g29vSO0KPbgvy3nty1
Ji5ov4xXBrZ0mgReM1/KKpZw0TYtT85BoQuT8MgcJrmESSzmEotEHJxBybSr
hDopzahgOnUc6BsNNpFVhheTM9q8/JEu64U+d4ub1WQnNtsxlfoiEzcRn30i
Nsg/7OQBREaIgRnq5gWZOGcsvBALLwiOGnawihpg5EZ4VekjTcKb486nVxq+
fNgPPeGHJ70/Pp/49c2lb5+Offt85rtn4z+8mPju2di38xPfPhn59dX0T76f
Gf72weBns42vr5Tf7tc8GtbfHTVe65A+GLE+GrM9veB4PlU+26fsdhPPuYk9
LmKfgzBezRorp9zqFFxsoN3vV765XPXFneZnk7ZXl5z4snhfaCCT/lc+p+Cg
3aHSyL58zvoD9WI+w97NoRbCJh5+2n/9ulWwJrPQqYTskLzIQ8mhe6BpxJ7a
HXxoG3S2gzvX8mh5DgPbbRFWu6RGOQ4eqsQEERtJxBbk5yYW5yZyaAgeDcml
lcp4RJ2CZVJxDXIGyK5iNntlQ63GwTZ7U7m8pVJSa8K4BDEVkpgaWbSTH+Ji
B7m4gdXiYAUxPDroaNgp35ePGlqoWxxsZp/SMU4bWIE1ioyJZt7bWz3fzA//
9nrmb29nvnsw8P5RP/SEX15OAc8fXpz/6c30d/MD7+91gb6fH/rx6divn138
6l73/Ij5m4eDXz0aeHGp8tWNtheX697d6353q2mwHHdrQPFgTPv4vHKkjqwj
RQ070aPVdHL2qTYN0sNKmW0WvL9W8/Xt1hfT1vlx+8NR7WwzacSDBLy40oQ/
5iBEBxmRCuFMQqcDZzLGNwcBNR3n68+/74PkwrT4M/u2b0iJO63jo3LC/DPC
99KLImHXSw73P7Vv/e5NK9et+gBZGOdQknQSpElFN6oIRgXSqsRblFijAq1V
ULHo3Ky0aAELJ2AilVy8RkI3q3lWvRDiwqZmVlqFTdX6oQ5nb6OpwU6r1uTU
qmIa1XG18pgaSYxXEl4pCC0XhHh5gU5hYGlaUHp0QGZsUFZcMLMkyCOO6a2g
PJ6u/OrR4D8+u/Ht09HPbzZ986AXFmHI2++fQ2F48MtnV75+0PHjm4vfPjn3
w8uL//kVxMX466v190ddN3qU94YNr683vrnX+/CC9/55+8Mp64PzlgejhulG
zqALN1pD6jZmXahAW9iJQlSEnZeiwEUJkeEzFYxXM9Wf32h5dsFzvo4218lq
1hfqabEi9FluSfAiZ58Qv/t5oT+nQWiQURlwBPkiGpez+PkG9DFMQdzB3Rsy
EoPkQrSIkVMce5hcGIbJDo48vmPH+iXrV/515ZK/xEeetKvJBhnaKMcYlNDQ
sHYVyqnBlOsxXh3Ka8RphOi8rHixgCiT0NVyjkHLs2j4JiXLrGNXu7Qem6K9
TtFZQW6z5beYMloNCa2ahDp1fL0iulYWUS2JqBSfrRCHVEqCq2TBUlKkgV8C
NV6ITztfr35xueHnN9e+fHju6aTv/f7qSh30hJ9ejf32euibJ32wmv34YuSn
V+d/hux9Pf3zy/N/f33hxbWOPgv6dr/qfAXl/pjt5WzjiynHbJdo2I0adCPb
zcW18qx2U9H5SuLtPqFHmOgVJXqgDTLiMFmnaNmBgvzwSl7h/Hn3Z9cqIbrN
tGglNkJDjUKknSpOPpUZfrg4/hA4GVsSv4j6jwoNnImodOAMfl7MjX/15xw2
Lis6YH9mUjB0MzGjODc1GPbr6FM79m9bvvyDf1vy4Z+Wffyno/47VRKUWYkz
AWEVwabG2zU4p45QrsNW63FVRmytCVVhQGYlh6hEWIeJY9Fy7QauyyJzWlUe
p6LKKWt0ULoced22tC5rarslrc2Q3KKPb9bE1quiamSRNfKIGml4pTzcIw4u
5wdWSSJHa3jVKsSlXuM/3l3+7sWFd9cbnky43t9u+eFB5//95fFnc1WvZxxP
R/QP+wU3O/hXm+n3hzVQce/2Cue6pJNVtMlqzrPLtXdHzE8mnG9vNj+7aH96
wTJSjuvSZnWbix2MhApJxlg1ecBZVi9P11KiOMVBhQmHMPFHTZR0BzvrQoPo
waAaCPfbEUZ6amrInsK4gOL4o/mxx2FNy40OyEuJBsi/qyxhMah9obHA2Wfp
hQpNw2czcZlsXI6YVlSSHlqYFgoTTcoqLc6Nh1176Qd/WvvJh2uW/WXlkg9W
LvvrpnXLaLg0m5ZgkmGsKpzPyRpcuQ7v1eMqzYQaK6nGgq23otrdhJzkUDE1
s9uLbnagau3YGhvs2rhOF6LLVdxXntftye9x5nbZczttGa2WVLB0szahUZ3Q
oI6uUUZXS8+Wi8PqtcmjVaS5btWD8646ParTzYH59e2jc98+6vzqduOjMd3z
Yd2Li7X3+g2fzda/nPHe61O1a/OHvPjhcvStAc2nN1qfXm2D4fjubvOra547
I5q3c3WvZ+x3zinOOZBOeniFOMnBjKnXlth46QZWCjHzRH70fkJWQNyp7UUR
B19NOFts6MwzW9t1ZVPNdEr+qayzh7IjD+dEHSqMPlKUFJKXHFtSXIglMPFM
KaY45g/UUJ59FRqZSvxfnKkL+6DvV0eSCkglicXpEWJGKTRnNqVwx9aNH/31
39au/mDT6iVLP/y3VSs+/GTZn7MSA+0aglGKBT/blXgws0dHLjcQKo2EGjOp
1kKqt2AabOgeL5FUGospiDpXhe9wlHa5QIhed2F3eW6fp7jPXdjjzut15XS7
srscqV3mlHZDYqsutlkXV6eNq1ZENanj+uwFd4askLc/v7/xy7up++NOESr2
06vVn1+vnWvlDFnRTaKsMTf1Wof8yweDsFM8GlI+HDPf6FM9u1JxqUP+09sr
//yfb377/v6X99vf3aqBHfnhqPrxsGa2T94kz6wWJXXqi92CFDE2Ap8RiEk/
kxx8MPTYpsTA/cXR/rK8MxdqOA5JUfKZbSJMsltQiEw/CYtwWpg/bGe5qVHo
MgSOyCAzpWSujMiWo5gCbGE0oMaUxoMgOhbmoC83fv/8H5dFxS9+zp/FIeZA
qnBo+VAbpFxEZPCxjz/4P58s/4vf+uUrlvz7mk8+Xrb0g+P+W3yDT4Yxq7AW
Fd6pJti0OK9+ITFMxHrgbMU1ObCNVnRXBVGAT8pKDuquxLUCZ3sxqNtd0ucp
7fUW93mKAHWvJ7/LmdXtyIIAabWkt5qTGnSxtYqzQPjZpQpoDj+/mvr+5cTX
j4e+nh/++/tLg5XCsVr+/XHzbI/h/oDh+UzNk0nzXBtjflj3csr2csZzd0gL
nK+fk90eVr+62fBkxnNvRH2liXZ/yPBwSH2xnjxVQ+gy5pYLkttMRVxkRF7U
vvjTu5OC9qWHH4wL3h11ejsp/dSAtqxamJsd6R98YH1+7JncuJOxQbvOHvU7
e3J7RmwEqgRJ4cpIfDkQ9tmYxsfRBRgqB1cUgy+OJZTELZqZjEikIJPI6FQ6
ZuG7P2wam5DJJWfCssyn5App+QJqnpKDxBQlrl3+4YqP/wwpAaGxdOmfV69c
snblUvgjYGazHOtQYQGyS4N363AePdZrxFeZiGDmRhuh0YZrsGI7vAS7tCAh
4kirHdHpQnY6fHHR6y7yES4vWOCc2+XMGXDldlnSO6zpHab4Os3ZDms2+O3Z
dPWXTwa/ftz/5ZORL+50v7/b9+ZO+/yEBYx6pUvx7Gb7/EXPg3NKmIDvb7V9
Pdfy1c2md7Pel1crHo7qXt9q/PRa+Ww3+0avaNRZMuQsutLCudzEutzGHnIh
u0xFRkqEQ1koZGTEBG5NCt2ZGnoo8vTus/4bimOPAG0JOhqC98iOT04f2BAT
uDMhxD/l7Knk6EBEQRYWjWEKVAyBmsxWENlSgIxnCElsCZ4pItD5BIBcHEss
jQe8VFQyiI5JBVxsfBqXmCYkZ/DJGQJqhoSWLWPkwlonZxdJWAX+uzeBmcHD
m9cuW7n0P9YA6o/+T2zUcbuOaJaiHAoccIZkdmmxwBn8DKFRbcED5wYLGVC3
WDEdDkyjFRUdcswszustR3Y7SiA6ut1lA54ygHyuGuEVxFbSwvrtBUO16Ika
4sUO/tyg6tn1ts/u9b+50fTptZpn16pf3Ox497D99Y2qW/2yB6O6q1286TYu
ROVct+hqG/PxuPbBpPH941FY2eZH1M+nLNe7uLMd7GstvMlKwrC9pEGW0Wko
O+fBeiVJ5aI0IeIMszCIVhiuEpRkJZ1MCtkbdXJ76KHNp/asgu6aF3bg7JFN
u9ctObR9VdrZkwVpUQRkHotJF0p8V9/xJAaORE8WKEh8BY2nJHN9fqYLlECe
xldQ2EJCaQwJEUdB+DjT0UkMTDIXm8whpgBeESVTRsuW0rOlrFwFK0fFLlax
ioxiREpswEcf/QkSY+Paj1ct+wAEqLdvXKHkF9sUaKscAxXOoUYvmhmSucJA
Xghnoi+fbUQwc5MNA+ouJ0FuMMpiBiox7Y4y4NzjQfR7inpchX0VRZ3GktFy
ytUe+f1JK7zfL7cLr3Qpbw4ZppupN/uFV7sEd0dhQdPfG9PdOSe72sm+e05w
q4s9VU+61EyZa2ffH5B9/rj7zpAcfAt9bNSNHbCWtOny+5zIFmV2kyTdzkqU
4SIlqHAlMYpeFFCcdCwj8mBZdkReWlBs2N6gQxuDD/oF79sQfWxHccyJgN2r
Tu3dmBx5BlucxaCT1FqN2mCRG80SvZmrMnBkeqZYQxeqaSIdQ2Jgi3Vsie+C
XuAMGcIUKVlCObkshoGIoyLjWKgEJjaJT0wTENJEpAxoAjJGloKZqWTlaNh5
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
PYgd+hR+uen/Aslgbkw=
                    "], {{0, 150}, {120, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
                    "], "RGB", "XYZ"], ImageResolution -> {434, 434}, 
                    Interleaving -> True, MetaInformation -> 
                    Association["Source" -> 
                    "http://en.wikipedia.org/wiki/File:Petroica_boodang_\
Meehan_Range_1_crop.jpg", "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset050/86e/\
86e5ac36df28e1906bb4d8332bd62260_v001s.jpg"]], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {57.99999999999938, Automatic}, 
                    ImageSizeRaw -> {120, 150}, 
                    PlotRange -> {{0, 120}, {0, 150}}]]]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.746391022179982*^9, 
                    3.7463910221810017`*^9}}, CellID -> 43597922], 
                    Cell[
                    TextData[{"Fact: this bird is way cooler: ", 
                    Cell[
                    BoxData[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
gvn/rq6u+Oe/Pp7+8y9X2Xx1S+fXeU1t+YWLkkPFh1cOHJT4G9mLajYmVOQz
xLmE4eCQBfhNv1esozHNcTatvuMQtyNGbREq6Dr93KOanf9mssJjCI0KEZ2D
kT8vlca+tlF8zFku2papC9N4LlPGfRQF739pM/L+NfJhbWVdVVAw/eQnn34+
1CQfzdZXLH48W1YuKXn37YXxffqY4jeKE+i5g6zdsWnAY/g5e5dYe9Dsehuy
I7yOpAhXcndjXtQ44jkU/T2i0Nc0P9SfIxz93UyoPRaBBDqHzTO6mDuRrhZq
Y+3o7iGYuiCd+NDfmw/yuWYzW7+SYsAnMhHZJRhKjcIUy8jgrLFHvFsk4j06
0P0j6Z637t/fTZyz6ltnTivA2pPiKbkosxJplVKpxoaNm4tZjq8F9oPN8Zm9
+94HBbE9ejB9wfxaXsfsprLF3KgknErbxGv9qhuIMRoNVtOhK+a1VdW5B1CR
uwvn9Dvqz6Pq9nCU6XZzlOv3cJQRLhCO52zGSJ/uooyQ7GoszNC5ZxgKFqZj
bpP5yEBoR3/y3QQuF0rSk2Po2sdzNqJCt4vuv6v2/jXtqtfW/F1YHDsZljIN
JAoWv0uq1GoN+VebS4gPaU3M0FT7XVZ2QfLZ50e7sjlGhVxRyWpo5bymX4JY
x/b4dOLzuEnxHoszWlRvo6+JU+hTK9bb1K8lYLWDh/8AJfz8C1nbMdrEB8v/
akg+OtXwsbIR9sMUkzC7PnVxGoIifaBQsmdlcwVKpPv3wxXiAbojYptub4fe
dJx9n/8O9g+YiygbX8jFHEwViz82v7pl96XLvzAb0mT5YPnzsvLz0v/758fj
23r78DUvbO6bceGmscXsqDG4lLUT1flvodJQ3PL6J5KNKnYdXQl+Z3VWt9Xi
sBi/IVSa6nQqdDsw3jdWlA/Sp2bER0eur9K4vuLxXyPkg51bsDid4nl3ivsk
UJDdtlNaIDdsKCoMO0h+D/Hcz+3tqKkXquLjqhifj12LyQHxsJIp2VxjFasR
f2XDpoMVFy8rmiMf5RfOSz7+9BPDqKSkm5bWVmJ9syDays5O/igcuhi/kt4w
8rpkUx1zCzm5xU3jryXWxx3Ctdx9yA4aCDnL7cmYf6VA+6h2yJs7CXPW5PC+
/mM+tKI9X5ElysfCbHj6u0MiSLjtcFfbY2bHJPys3y3WbDfCX6nI3o5lsWmw
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
D0s+yJ59lfIiIqx8RVtenw/b1sBHfXm5tf8Sf+cM2eXKvAP8vWhf0nMcGbkc
W8gPfiI6Gcl+8ejtGoEO9u3gb+FKcmBDeoz44esxpNxPE0xzFl2tfHCAbNS1
nP0Plw96HjZPHm7drh4fpK+Ij1Lig+2X37J9+R5Y+w1FpvfdHCBdRnpmCnFU
UEK2uRDn0rfgM7Lbbw5dgj2D5+LV/tOxvk8+VvXIJh8sma8vZ/skpAclwBCS
gFd656I0awvFLw/ZfuSLdSRDPbvCTK5m+9dyPhIGDLp0/MRpR+JD2lr5uIWD
vK6pWk+c6AoBrZiPY3MHyCcZmsL2wyrhXLF6+pvkG1zO2oXS1Nfx7YSXcSpt
A67liu/4+tPi+T8YX8x+sLVycyLHoI3GjtlAzkfikGEXz5VdkJ49d6FV6asG
wX3jmn68lScR9yqp844ilvvWMrB8QAn3E6pMaz14Po1x+hD9XQYWm/+SvQsb
yOfzs3Wv2TfW2KFjp9/37N2/5sTJUkfmY5W2YC/Rmnf0PSxU1cGt/x+qd6w1
gb3/853Ry9HV0b92jzBWOx3dqROOfflln7Lylr3LU9zz6BEaA5bfYXUDx3O2
YAjFSWyPF4VcfPdaWFhY5RfHjsa1dM985tM/QuPA35Wbfwil+duRHToYjoIl
f4cR4yM8PByfH+XvMGhR/uq5nlrUosetv5/t0TDqnX+X8x7U7x/0fe71u+di
c7kfOMinC2xVlnwOm/ERERGBr7/5pl9z5wVrEGTljkBCkAmB1u4IYLC6DaZj
9c697bsA6z9AS3/fWNRpb6B1w383eJ/G/M5abG+wpQv8rdrA2dwGarmidi9L
R0fH6oKCgrNHj33V61zZ+WbnFNn6AhlfoyqC7c0o5RAaRP1zGz7nbmjp7xsP
+W24T7+TSkW/Siaizv67lfb29jj85ltPVYh1cM2aHxTfgdYQ5H+Axp73oH7/
oO9z99/xOsfb9gCu4cPFxdX45pG3F7D3cjSXD7HeWIS0kWjq+ff79w8Tt7/3
ri4fzs4uID4WtoSP/wfjUt02
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJylkL1Lw0AYxh9bpaIVBR0cHCKIg1QUXQQXq0NRRCSt4NeSpEkqpGm4pEhx
dHDt4KLi4gf+B7qJ/4AgCOrkoM4OCiKIxOcaoSA6ecfd+8tz7/vm7unVS6oV
A+A3c1O19bQQWiXbwY8F11+zXTM/7QambYoxvYFiVeYiVnWMot84DBTdQKiZ
SWVxaVlJPCCBJsQxjiHN8L30/Pws/hxvN5ANcT0oe/2d9+tozZu+ATTIS48Z
ngjIE+S59cCTXCV3GQUtTz4ipwQvSL6Suh7xk2Q74nfJIqdO8W1JsmJHnJKs
RyzfohgFUSQ75L6iUza+7yNfkjTdhSxjT235UJHBJBToKGMNDgIMMrr07Pe6
kVrdHEqsMbh7qECwwkaBtSmqZXY1GS3qJqfDDA7p/U9PfWt0JPpDcgZoegzD
1wEgsQd8boXhx0EYfh4C8TvgYrteX9qmnc/Uq3Wtbx9o3wROz+uafgyc0ePu
e08TWk2Kc8UsC3g5AdqWgE563bLy3/PI7+9zHN4CuQ1g9hLY2QX6md+++gXJ
74G4
                    "], "RGB", "XYZ"], Interleaving -> False], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSize -> {73.33333333333329, Automatic}, 
                    ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}]], 
                    CellChangeTimes -> {{3.7463910039639883`*^9, 
                    3.7463910175865955`*^9}}]}], "Notes", 
                    CellEventActions -> {
                    Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
                    SelectedNotebook[], After, Cell]; NotebookFind[
                    SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> 
                    True, WrapAround -> True], Blank[NotebookSelection] :> 
                    SelectionMove[
                    SelectedNotebook[], All, CellContents, AutoScroll -> 
                    True]], PassEventsDown -> False, PassEventsUp -> False}, 
                    CellChangeTimes -> {{3.7463832307053843`*^9, 
                    3.7463832468978844`*^9}, {3.7463907919809217`*^9, 
                    3.7463908575864997`*^9}, {3.7463910228045287`*^9, 
                    3.74639103391722*^9}}, CellID -> 277434961]}], 
                    "ExampleNotebook" -> NotebookObject[
                    FrontEndObject[
                    LinkObject["5ufyx_shm", 3, 1]], 201], "ExternalLinks" -> {
                    Hyperlink["Bird", "https://en.wikipedia.org/wiki/Bird"]}, 
                    "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
74e/74e60450-d5b6-4ec5-8d2d-bc72fa93466b/download/DefinitionData"], 
                    "ShortName" -> "BirdSay", "SymbolName" -> 
                    "FunctionRepository`$74e60450d5b64ec58d2dbc72fa93466b`\
BirdSay", "Usage" -> 
                    "\!\(\*StyleBox[RowBox[{StyleBox[RowBox[{StyleBox[\"\
ResourceFunction\", \"ResourceFunctionSymbol\"], \"[\", \
StyleBox[\"\\\"BirdSay\\\"\", \"ResourceFunctionName\"], \"]\"}], \
\"ResourceFunctionHandle\"], \"[\", StyleBox[\"thing\", \"TI\"], \"]\"}], \
Rule[ShowStringCharacters, True], Rule[StripOnInput, False]]\) ask a bird to \
say \!\(\*Cell[BoxData[StyleBox[\"thing\", \"TI\"]], \"InlineFormula\", \
Rule[FontFamily, \"Source Sans Pro\"]]\).", "VerificationTests" -> 
                    HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/objects/arnoudb/Resources/\
74e/74e60450-d5b6-4ec5-8d2d-bc72fa93466b"]}]]], Selectable -> False], 
                   RawBoxes[
                    RowBox[{"ResourceFunction", "[", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/e59a5636-8791-\
4dc9-b62c-8bdd0403574e\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"], SelectWithContents -> True], "]"}]]}, 
                  "ClickToCopyTemplate"]]}}], "", 
             Style[
             "Wed 5 Dec 2018 14:43:06", FontSlant -> Italic, FontColor -> 
              GrayLevel[0.5], FontSize -> 0.9 Inherited], 
             MouseAppearance[
              Button[
               MouseAppearance[
                Mouseover[
                 Graphics[{
                   GrayLevel[
                    Rational[64, 85]], 
                   
                   Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                   
                   Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                  PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                  None], 
                 Graphics[{
                   GrayLevel[
                    Rational[128, 255]], 
                   
                   Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                   
                   Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                  PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                  None]], "LinkHand"], Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`deleteMe[
                "c11756aa-c6f9-4c4f-bc60-e2e0dc52c2ac"], Appearance -> None, 
               BoxID -> "c11756aa-c6f9-4c4f-bc60-e2e0dc52c2ac"], 
              "LinkHand"]}}, ItemSize -> {{
              Scaled[0.35], 
              Scaled[0.35], Fit, Automatic^2}, Automatic}, 
           Alignment -> {{Left, Left, Center, Right, Right}, Center}], 
          Grid[{{"", 
             Style[
              Grid[{{"\[FilledVerySmallSquare]", "Cloud object:", 
                 RawBoxes[
                  TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/e59a5636-8791-4dc9-b62c-\
8bdd0403574e\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/objects/e59a5636-8791-\
4dc9-b62c-8bdd0403574e\"", 
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"], SelectWithContents -> True]]}, 
                   "ClickToCopyTemplate"]]}, {
                "\[FilledVerySmallSquare]", "Visit web page:", 
                 Hyperlink[
                  RawBoxes[
                   TagBox[
                   "\"https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e\"", Short[#, 0.75]& ]], 
                  "https://www.wolframcloud.com/objects/e59a5636-8791-4dc9-\
b62c-8bdd0403574e"]}, {"\[FilledVerySmallSquare]", "Resource object:", 
                 RawBoxes[
                  TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    InterpretationBox[
                    FrameBox[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.9882352941176471, 0.4, 0.25098039215686274`], 
                    Thickness[
                    Dynamic[
                    If[CurrentValue["CellStyleName"] === "Input", 0.2, 0.1]]], 
                    CircleBox[{0, 0}]}, ImageSize -> 10, BaselinePosition -> 
                    Scaled[0.05], ImagePadding -> 1], 
                    TemplateBox[{3}, "Spacer1"], 
                    StyleBox[
                    "\"BirdSay\"", FontColor -> 
                    RGBColor[
                    0.2784313725490196, 0.2784313725490196, 
                    0.2784313725490196], ShowAutoStyles -> False, 
                    ShowStringCharacters -> False, FontSize -> 0.78 Inherited,
                     FontFamily -> "Roboto", Selectable -> True, FontWeight -> 
                    Dynamic[
                    If[
                    CurrentValue["CellStyleName"] === "Input", "DemiBold", 
                    Plain]], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], 
                    BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9686274509803922, 
                    0.9686274509803922], ContentPadding -> False, 
                    FrameMargins -> {{3, 4}, {0, -2}}, FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.8627450980392157, 0.8627450980392157, 
                    0.8627450980392157]], RoundingRadius -> 3, StripOnInput -> 
                    False, Selectable -> False], 
                    ResourceFunction[
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "74e60450-d5b6-4ec5-8d2d-bc72fa93466b", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$74e60450d5b64ec58d2dbc72fa93466b`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]]],
                     Selectable -> False], "]"}], 
                    RawBoxes[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ResourceObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60, 60}}, {0, 255}, ColorFunction -> 
                    RGBColor], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BirdSay\"", "SummaryItem"]}], 
                    TagBox["\"\"", "SummaryItem"]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Drastically improve the formatting of output.\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"birds\"", "\"party bird\""},
                     "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"74e60450-d5b6-4ec5-8d2d-bc72fa93466b\"", 
                    "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], ""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ResourceObject[
                    Association[
                    "Name" -> "BirdSay", "UUID" -> 
                    "74e60450-d5b6-4ec5-8d2d-bc72fa93466b", "ResourceType" -> 
                    "Function", "Version" -> None, "Description" -> 
                    "Drastically improve the formatting of output.", 
                    "SymbolName" -> 
                    "FunctionRepository`$74e60450d5b64ec58d2dbc72fa93466b`\
BirdSay", "FunctionLocation" -> None, "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    $CellContext`MyFunction[1 + 1], 
                    $CellContext`MyFunction[2]]], "ShortName" -> "BirdSay"]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True]]}, "ClickToCopyTemplate"]]}}, 
               Alignment -> Left, 
               ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], 
              FontColor -> GrayLevel[0.5], FontSize -> 12]}}, 
           ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
           Dividers -> {None, {-1 -> GrayLevel[
                Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]},
          False]], DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{25, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
  "StatusMessage" -> "", "AttachedHints" -> {}},
CreateCellID->True,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (December 4, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222222222222223`], {
                   FaceForm[{
                    RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                    0.}, {22.5, 0.}, {10.074, 0.}, {0., 
                    10.073999999999998`}, {0., 22.5}, {0., 34.926}, {10.074, 
                    45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {45., 
                    22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                    "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                    27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                    26.308999999999997`}, {21.375, 26.258000000000003`}, {
                    21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 
                    15.315999999999999`}, {23.828, 14.242}}, {{24.578, 
                    18.75}, {24.578, 23.078000000000003`}, {24.578, 23.539}, {
                    24.953, 23.914}, {25.418, 23.91}, {29.746, 23.91}, {
                    30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078000000000003`}, {30.578, 18.75}, {
                    30.581999999999997`, 18.288999999999998`}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.315999999999999`}, {33.684, 
                    15.539000000000001`}, {33.789, 15.602}, {33.789, 
                    17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                    26.281}, {31.328, 26.512000000000004`}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 
                    14.234000000000002`}}}]}}, {
                 Background -> RGBColor[0.988235, 0.419608, 0.203922], 
                  AspectRatio -> Automatic, ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                "\"Function Resource Definition Notebook\"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> Bold, FontSize -> 22, 
                 FontColor -> GrayLevel[1], StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", 
            ItemBox[
             TemplateBox[{
               StyleBox[
               "\"Function Repository \[RightGuillemet]\"", "Text", FontColor -> 
                GrayLevel[1], StripOnInput -> False], 
               "https://resources.wolframcloud.com/FunctionRepository/"}, 
              "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
             False]}, {
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Open Sample Notebook\"", "Text", FontFamily -> 
                "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
                FontSize -> 13, FontColor -> GrayLevel[1], StripOnInput -> 
                False], "\"View a completed sample definition notebook\""}, 
              "PrettyTooltipTemplate"], 
             ButtonFunction :> (Symbol["System`ResourceFunction"]; 
              FunctionResource`DefinitionNotebook`Private`showProgress[
                
                FunctionResource`DefinitionNotebook`Private`\
viewExampleNotebook[]]), FrameMargins -> {{1, 1}, {0, 0}}, 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
             "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], 
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Style Guidelines\"", "Text", FontFamily -> 
                "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
                FontSize -> 13, FontColor -> GrayLevel[1], StripOnInput -> 
                False], "\"Coming soon\""}, "PrettyTooltipTemplate"], 
             ButtonFunction :> (Symbol["System`ResourceFunction"]; 
              FunctionResource`DefinitionNotebook`Private`showProgress[
                MessageDialog["Coming soon."]]), 
             FrameMargins -> {{1, 1}, {0, 0}}, 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
             "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, FrameStyle -> 
              RGBColor[0.994118, 0.709804, 0.601961]], "Grid"], 
            ActionMenuBox[
             ButtonBox[
              StyleBox[
              "\"Preview \[DownPointer]\"", "Text", FontFamily -> 
               "Source Sans Pro SemiBold", FontWeight -> "SemiBold", FontSize -> 
               13, FontColor -> GrayLevel[1], StripOnInput -> False], 
              ButtonFunction :> (Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`showProgress[
                Null]), FrameMargins -> {{1, 1}, {0, 0}}, 
              Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
              Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
              "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], {
             "\"In a notebook\"" :> (Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`getResource[
                 ButtonNotebook[], "Preview"]), 
              "\"On the cloud\"" :> (Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`getResource[
                 ButtonNotebook[], "Cloud"])}, Appearance -> None, Method -> 
             "Queued"], 
            ActionMenuBox[
             ButtonBox[
              StyleBox[
              "\"Deploy \[DownPointer]\"", "Text", FontFamily -> 
               "Source Sans Pro SemiBold", FontWeight -> "SemiBold", FontSize -> 
               13, FontColor -> GrayLevel[1], StripOnInput -> False], 
              ButtonFunction :> (Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`showProgress[
                Null]), FrameMargins -> {{1, 1}, {0, 0}}, 
              Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
              Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
              "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic], {
             "\"Locally on this computer\"" :> (
               Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`getResource[
                 ButtonNotebook[], "Local"]), 
              "\"For my cloud account\"" :> (
               Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`getResource[
                 ButtonNotebook[], "Cloud"]), 
              "\"Publicly in the cloud\"" :> (
               Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`getResource[
                 ButtonNotebook[], "CloudPublic"]), 
              "\"In this session only (without documentation)\"" :> (
               Symbol["System`ResourceFunction"]; 
               FunctionResource`DefinitionNotebook`Private`getResource[
                 ButtonNotebook[], "KernelSession"])}, Appearance -> None, 
             Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm]], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            ButtonBox[
             TemplateBox[{
               StyleBox[
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349206349206349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                    FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                    ImageSize -> 18, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> Automatic], "\"Submit to Repository\""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.25}, 
                    "Rows" -> {{0}}}], "Grid"], "Text", FontFamily -> 
                "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
                FontSize -> 13, FontColor -> GrayLevel[1], StripOnInput -> 
                False], 
               "\"Submit your function to the Wolfram Function Repository\""},
               "PrettyTooltipTemplate"], 
             ButtonFunction :> (Symbol["System`ResourceFunction"]; 
              FunctionResource`DefinitionNotebook`Private`showProgress[
                FunctionResource`DefinitionNotebook`Private`submitRepository[
                 ButtonNotebook[]]]), FrameMargins -> {{1, 1}, {0, 0}}, 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h
Qj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89
GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A
+GMDZA==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL
CK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8
6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf
AJBwAV4=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/
E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc
CAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC
jIx4IS/2yUhjJKVkUvMLAMWzMVI=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
             "Queued", ImageSize -> {All, 25}, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.988235, 0.419608, 0.203922], 
              RGBColor[0.921569, 0.341176, 0.105882]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.988235, 0.419608, 0.203922], 2 -> 
              RGBColor[0.921569, 0.341176, 0.105882]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "RowsIndexed" -> {1 -> 6, 2 -> 4}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          RGBColor[0.988235, 0.419608, 0.203922]], "Grid"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0]}], 
   Cell[
    StyleData["Notebook"], ComponentwiseContextMenu -> {"CellInsertionPoint" -> {
        MenuItem["Insert Example Group", 
         FrontEndExecute[{
           FrontEnd`NotebookWrite[
            FrontEnd`InputNotebook[], 
            Cell[
             CellGroupData[{
               Cell["", "PageBreak", PageBreakBelow -> True], 
               Cell["XXXX", "Text"], 
               Cell[
                BoxData["XXXX"], "Input"]}, Open]]]}]], 
        MenuItem["Insert Example Delimiter", 
         FrontEndExecute[{
           FrontEnd`NotebookWrite[
            FrontEnd`InputNotebook[], 
            Cell["", "PageBreak", PageBreakBelow -> True], After]}]], 
        Delimiter, 
        MenuItem["&Paste", 
         FrontEnd`Paste[After]], 
        Menu["&Insert New Cell", {
          MenuItem[
          "Start Cell Style Names", "MenuListStyles", MenuAnchor -> True], 
          Delimiter, 
          MenuItem["&Other...", "StyleOther"]}], Delimiter, 
        MenuItem["Copy Notebook Ob&ject", 
         FrontEnd`CopySpecial["NotebookObject"]], Delimiter, 
        MenuItem["Toggle &Full Screen", 
         FrontEndExecute[
          FrontEnd`Value[
           FEPrivate`NotebookToggleFullScreen[]]]]}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {0, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {0, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 1, 0]], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c
5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28
               "], CurveClosed -> {1}]}, 
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.627441, 0.627441, 0.627441, 1.], StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMOjwkBdpVlKDtNeMcWlaUg5rLeT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+R+XP9TIsKXD/Y/GcqcPPB6g1V4fZ7
3Ng+uaNGFe4+sPpFqg4w98P4b+wjNu/OlYXzwerN5eD6T8maTZx5Ww7V/Hp5
uP0GLXO+/78oD3cfjA9zP4wP8x9MP8z/MPNh4QOzHxZ+MPfBwhc9/AFZSbHT

                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOe35VvNh9m88Bxg+bItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfN0f78Zk/gnC+
thfnwVVSwnC+lOWP9TMtReD8Z6xHa9LMROH8SRvy1QUFxdD4EnA+p8bzeR0a
knD+ooMNFkpCUnB+XK3Nl7tnpVDt65RGlfeVQXOfLIQvKe7wQ+xab3k5gn/0
8aIolz9yDinbz2sZ35VzWG8n9+vdKQWIfKK8Qw3362O7pyP4EP3ScD6Kf4B8
FP8C+Q3z48QYLETgfLD7RIXhfHD4fhaE88HueSIA58PiAz1+AUR/638=
                "]}]}, 
             FaceForm[
              RGBColor[0.627441, 0.627441, 0.627441, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c
5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28
               "], CurveClosed -> {1}]}, 
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.5, 0.5, 0.5, 1.], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c
5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28
               "]]}, 
             FaceForm[
              RGBColor[0.5, 0.5, 0.5, 1.]], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMOjwkBdpVlKDtNeMcWlaUg5rLeT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+R+XP9TIsKXD/Y/GcqcPPB6g1V4fZ7
3Ng+uaNGFe4+sPpFqg4w98P4b+wjNu/OlYXzwerN5eD6T8maTZx5Ww7V/Hp5
uP0GLXO+/78oD3cfjA9zP4wP8x9MP8z/MPNh4QOzHxZ+MPfBwhc9/AFZSbHT

                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOe35VvNh9m88Bxg+bItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfN0f78Zk/gnC+
thfnwVVSwnC+lOWP9TMtReD8Z6xHa9LMROH8SRvy1QUFxdD4EnA+p8bzeR0a
knD+ooMNFkpCUnB+XK3Nl7tnpVDt65RGlfeVQXOfLIQvKe7wQ+xab3k5gn/0
8aIolz9yDinbz2sZ35VzWG8n9+vdKQWIfKK8Qw3362O7pyP4EP3ScD6Kf4B8
FP8C+Q3z48QYLETgfLD7RIXhfHD4fhaE88HueSIA58PiAz1+AUR/638=
                "]}]}, 
             FaceForm[
              RGBColor[0.999985, 0.999985, 0.999985, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (If[
            MatchQ[
             CurrentValue[
              ButtonNotebook[], {TaggingRules, "AttachedCells", #}], 
             Blank[CellObject]], NotebookDelete[
              CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}]]; 
            CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             Inherited, CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]; 
            Null]; Null), Appearance -> None, Evaluator -> Automatic, Method -> 
         "Preemptive"], BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{
           FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$ = 
            0., FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$\
$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[
                    AbsoluteTime[] - 
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ > FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.65], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[0.988235, 0.419608, 0.203922], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$}], StandardForm]], 
                 ButtonFunction :> (
                  FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ = AbsoluteTime[]; CopyToClipboard[#2]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> Automatic], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", StripOnInput -> False], Background -> 
          RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          FunctionResourceTools`BuildDefinitionNotebook`Private`$$tooltip, 
           "Text", FontColor -> RGBColor[0.537255, 0.537255, 0.537255], 
           FontSize -> 12, FontWeight -> "Plain"], Background -> 
          RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ExampleGroupOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (DynamicBox[
        ToBoxes[
         If[
          MatchQ[
           CurrentValue[
            EvaluationNotebook[], {TaggingRules, "Openers", #, #2}, Closed], 
           Alternatives[True, Open]], 
          Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], 
          Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]], 
         StandardForm]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ContextMenu -> {
      MenuItem["Cu&t", "Cut"], 
      MenuItem["&Copy", "Copy"], 
      MenuItem["&Paste", 
       FrontEnd`Paste[After]], 
      Menu["Cop&y As", {
        MenuItem["Plain &Text", 
         FrontEnd`CopySpecial["PlainText"]], 
        MenuItem["&Input Text", 
         FrontEnd`CopySpecial["InputText"]], 
        MenuItem["&LaTeX", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsTeX[]"]], MenuEvaluator -> Automatic], 
        MenuItem["M&athML", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsMathML[]"]], MenuEvaluator -> 
         Automatic], Delimiter, 
        MenuItem["Cell &Object", 
         FrontEnd`CopySpecial["CellObject"]], 
        MenuItem["&Cell Expression", 
         FrontEnd`CopySpecial["CellExpression"]], 
        MenuItem["&Notebook Expression", 
         FrontEnd`CopySpecial["NotebookExpression"]]}], Delimiter, 
      MenuItem["Format as Template Input", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateToggle[EvaluationNotebook[]]"]], 
       MenuEvaluator -> Automatic], 
      MenuItem["Format as Code", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateLiteralInput[EvaluationNotebook[]]"]\
], MenuEvaluator -> Automatic]}, ShowAutoStyles -> False, ShowCodeAssist -> 
    False, CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell[
           BoxData[""], "UsageInputs"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ContextMenu -> {
      MenuItem["Cu&t", "Cut"], 
      MenuItem["&Copy", "Copy"], 
      MenuItem["&Paste", 
       FrontEnd`Paste[After]], 
      Menu["Cop&y As", {
        MenuItem["Plain &Text", 
         FrontEnd`CopySpecial["PlainText"]], 
        MenuItem["&Input Text", 
         FrontEnd`CopySpecial["InputText"]], 
        MenuItem["&LaTeX", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsTeX[]"]], MenuEvaluator -> Automatic], 
        MenuItem["M&athML", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsMathML[]"]], MenuEvaluator -> 
         Automatic], Delimiter, 
        MenuItem["Cell &Object", 
         FrontEnd`CopySpecial["CellObject"]], 
        MenuItem["&Cell Expression", 
         FrontEnd`CopySpecial["CellExpression"]], 
        MenuItem["&Notebook Expression", 
         FrontEnd`CopySpecial["NotebookExpression"]]}], Delimiter, 
      MenuItem["Format as Template Input", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateToggle[EvaluationNotebook[]]"]], 
       MenuEvaluator -> Automatic], 
      MenuItem["Format as Code", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateLiteralInput[EvaluationNotebook[]]"]\
], MenuEvaluator -> Automatic], Delimiter, 
      MenuItem["Make &Hyperlink...", "CreateHyperlinkDialog"], 
      MenuItem["Insert Table/&Matrix...", "CreateGridBoxDialog"], 
      MenuItem["Chec&k Spelling...", "FindNextMisspelling"], 
      Menu["Citatio&n", {
        MenuItem[
        "Insert Bibliographical &Reference...", "InsertBibReference"], 
        MenuItem["Insert Bibliographical &Note...", "InsertBibNote"], 
        Delimiter, 
        MenuItem["Set / Change Citation &Style...", "SetCitationStyle"], 
        MenuItem["&Insert Bibliography and Notes", "InsertBibAndNotes"], 
        MenuItem["&Delete Bibliography and Notes", "DeleteBibAndNotes"], 
        MenuItem["Re&build Bibliography and Notes", "RebuildBibAndNotes"]}], 
      Delimiter, 
      Menu["Sty&le", {
        MenuItem[
        "Start Cell Style Names", "MenuListStyles", MenuAnchor -> True], 
        Delimiter, 
        MenuItem["&Other...", "StyleOther"]}], Delimiter, 
      MenuItem["Create Inline Cell", "CreateInlineCell"], 
      MenuItem["Di&vide Cell", "CellSplit"], 
      MenuItem["Evaluate &in Place", All], Delimiter, 
      MenuItem["Toggle &Full Screen", 
       FrontEndExecute[
        FrontEnd`Value[
         FEPrivate`NotebookToggleFullScreen[]]]]}, ShowAutoSpellCheck -> 
    False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ContextMenu -> {
      MenuItem["Cu&t", "Cut"], 
      MenuItem["&Copy", "Copy"], 
      MenuItem["&Paste", 
       FrontEnd`Paste[After]], 
      Menu["Cop&y As", {
        MenuItem["Plain &Text", 
         FrontEnd`CopySpecial["PlainText"]], 
        MenuItem["&Input Text", 
         FrontEnd`CopySpecial["InputText"]], 
        MenuItem["&LaTeX", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsTeX[]"]], MenuEvaluator -> Automatic], 
        MenuItem["M&athML", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsMathML[]"]], MenuEvaluator -> 
         Automatic], Delimiter, 
        MenuItem["Cell &Object", 
         FrontEnd`CopySpecial["CellObject"]], 
        MenuItem["&Cell Expression", 
         FrontEnd`CopySpecial["CellExpression"]], 
        MenuItem["&Notebook Expression", 
         FrontEnd`CopySpecial["NotebookExpression"]]}], Delimiter, 
      MenuItem["Format as Template Input", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateToggle[EvaluationNotebook[]]"]], 
       MenuEvaluator -> Automatic], 
      MenuItem["Format as Code", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateLiteralInput[EvaluationNotebook[]]"]\
], MenuEvaluator -> Automatic], Delimiter, 
      MenuItem["Make &Hyperlink...", "CreateHyperlinkDialog"], 
      MenuItem["Insert Table/&Matrix...", "CreateGridBoxDialog"], 
      MenuItem["Chec&k Spelling...", "FindNextMisspelling"], 
      Menu["Citatio&n", {
        MenuItem[
        "Insert Bibliographical &Reference...", "InsertBibReference"], 
        MenuItem["Insert Bibliographical &Note...", "InsertBibNote"], 
        Delimiter, 
        MenuItem["Set / Change Citation &Style...", "SetCitationStyle"], 
        MenuItem["&Insert Bibliography and Notes", "InsertBibAndNotes"], 
        MenuItem["&Delete Bibliography and Notes", "DeleteBibAndNotes"], 
        MenuItem["Re&build Bibliography and Notes", "RebuildBibAndNotes"]}], 
      Delimiter, 
      Menu["Sty&le", {
        MenuItem[
        "Start Cell Style Names", "MenuListStyles", MenuAnchor -> True], 
        Delimiter, 
        MenuItem["&Other...", "StyleOther"]}], Delimiter, 
      MenuItem["Create Inline Cell", "CreateInlineCell"], 
      MenuItem["Di&vide Cell", "CellSplit"], 
      MenuItem["Evaluate &in Place", All], Delimiter, 
      MenuItem["Toggle &Full Screen", 
       FrontEndExecute[
        FrontEnd`Value[
         FEPrivate`NotebookToggleFullScreen[]]]]}, ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["Text"], ContextMenu -> {
      MenuItem["Cu&t", "Cut"], 
      MenuItem["&Copy", "Copy"], 
      MenuItem["&Paste", 
       FrontEnd`Paste[After]], 
      Menu["Cop&y As", {
        MenuItem["Plain &Text", 
         FrontEnd`CopySpecial["PlainText"]], 
        MenuItem["&Input Text", 
         FrontEnd`CopySpecial["InputText"]], 
        MenuItem["&LaTeX", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsTeX[]"]], MenuEvaluator -> Automatic], 
        MenuItem["M&athML", 
         KernelExecute[
          ToExpression["FrontEnd`CopyAsMathML[]"]], MenuEvaluator -> 
         Automatic], Delimiter, 
        MenuItem["Cell &Object", 
         FrontEnd`CopySpecial["CellObject"]], 
        MenuItem["&Cell Expression", 
         FrontEnd`CopySpecial["CellExpression"]], 
        MenuItem["&Notebook Expression", 
         FrontEnd`CopySpecial["NotebookExpression"]]}], Delimiter, 
      MenuItem["Format as Template Input", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateToggle[EvaluationNotebook[]]"]], 
       MenuEvaluator -> Automatic], 
      MenuItem["Format as Code", 
       KernelExecute[
        ToExpression[
        "System`ResourceFunction; \
FunctionTemplateToggle`DT`FunctionTemplateLiteralInput[EvaluationNotebook[]]"]\
], MenuEvaluator -> Automatic], Delimiter, 
      MenuItem["Make &Hyperlink...", "CreateHyperlinkDialog"], 
      MenuItem["Insert Table/&Matrix...", "CreateGridBoxDialog"], 
      MenuItem["Chec&k Spelling...", "FindNextMisspelling"], 
      Menu["Citatio&n", {
        MenuItem[
        "Insert Bibliographical &Reference...", "InsertBibReference"], 
        MenuItem["Insert Bibliographical &Note...", "InsertBibNote"], 
        Delimiter, 
        MenuItem["Set / Change Citation &Style...", "SetCitationStyle"], 
        MenuItem["&Insert Bibliography and Notes", "InsertBibAndNotes"], 
        MenuItem["&Delete Bibliography and Notes", "DeleteBibAndNotes"], 
        MenuItem["Re&build Bibliography and Notes", "RebuildBibAndNotes"]}], 
      Delimiter, 
      Menu["Sty&le", {
        MenuItem[
        "Start Cell Style Names", "MenuListStyles", MenuAnchor -> True], 
        Delimiter, 
        MenuItem["&Other...", "StyleOther"]}], Delimiter, 
      MenuItem["Create Inline Cell", "CreateInlineCell"], 
      MenuItem["Di&vide Cell", "CellSplit"], 
      MenuItem["Evaluate &in Place", All], Delimiter, 
      MenuItem["Toggle &Full Screen", 
       FrontEndExecute[
        FrontEnd`Value[
         FEPrivate`NotebookToggleFullScreen[]]]]}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.921569, 0.341176, 0.105882]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.614379, 0.227451, 0.0705882]], 
   Cell[
    StyleData["InlineFormula"], FontSize -> 0.99 Inherited], 
   Cell[
    StyleData["ExampleDelimiter"], ShowCellBracket -> Automatic, 
    CellMargins -> {{66, 14}, {-5, 0}}, 
    CellGroupingRules -> {"SectionGrouping", 58}, ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {76}, StyleMenuListing -> 
    None, FontFamily -> "Verdana", FontSize -> 9, FontWeight -> "Plain", 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False]},
   Visible -> False, FrontEndVersion -> 
  "12.0 for Microsoft Windows (64-bit) (December 4, 2018)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[580, 22, 597, 9, 96, "Title",ExpressionUUID->"73472f8a-f7dc-4453-892e-7bd885afa486",
   CellTags->{"Title", "TabNext"},
   CellID->771812398]},
 "TabNext"->{
  Cell[580, 22, 597, 9, 96, "Title",ExpressionUUID->"73472f8a-f7dc-4453-892e-7bd885afa486",
   CellTags->{"Title", "TabNext"},
   CellID->771812398],
  Cell[1180, 33, 614, 9, 34, "Text",ExpressionUUID->"818c9d18-1fdb-46b1-ae36-5eecc923be6c",
   CellTags->{"Description", "TabNext"},
   CellID->7981612],
  Cell[2812, 70, 17452, 283, 4931, "Input",ExpressionUUID->"dcce6857-68e7-47ad-b490-db3e1a3c706a",
   CellTags->"TabNext",
   CellID->77889823],
  Cell[21401, 390, 254, 5, 26, "UsageInputs",ExpressionUUID->"676f203c-f44a-4324-b460-0b8e44d77b2c",
   CellTags->"TabNext",
   CellID->523254948],
  Cell[21658, 397, 384, 10, 26, "UsageDescription",ExpressionUUID->"b427ea9b-46e6-41b3-8aca-a1071e5c821f",
   CellTags->"TabNext",
   CellID->677074461],
  Cell[23043, 438, 604, 9, 31, "Notes",ExpressionUUID->"c15cbd8a-6158-4df3-8989-008064de997e",
   CellTags->"TabNext",
   CellID->533233984],
  Cell[715737, 14158, 564, 9, 34, "Text",ExpressionUUID->"419cd336-9eb2-4365-a52a-49e7845068a3",
   CellTags->"TabNext",
   CellID->91771009],
  Cell[717101, 14195, 584, 9, 31, "Item",ExpressionUUID->"bbe974ee-0936-41d7-981d-b26af756cde9",
   CellTags->"TabNext",
   CellID->14386224],
  Cell[720772, 14284, 550, 8, 34, "Text",ExpressionUUID->"fb6f69f0-9e4e-4f76-86c9-c1ce7742a4e4",
   CellTags->"TabNext",
   CellID->15357238],
  Cell[722072, 14317, 744, 13, 31, "Item",ExpressionUUID->"2130d5f7-dc04-44e0-a239-918be203615c",
   CellTags->"TabNext",
   CellID->279316401]},
 "Description"->{
  Cell[1180, 33, 614, 9, 34, "Text",ExpressionUUID->"818c9d18-1fdb-46b1-ae36-5eecc923be6c",
   CellTags->{"Description", "TabNext"},
   CellID->7981612]},
 "Definition"->{
  Cell[1819, 46, 990, 22, 67, "Section",ExpressionUUID->"fc15ea8e-4c8c-4b7e-84a2-2d3c3b382f27",
   CellTags->"Definition",
   CellID->608264297]},
 "Documentation"->{
  Cell[20301, 358, 154, 3, 67, "Section",ExpressionUUID->"b59baf49-7dce-411d-b149-217444b9fb20",
   CellTags->"Documentation",
   CellID->855965831]},
 "Usage"->{
  Cell[20480, 365, 896, 21, 53, "Subsection",ExpressionUUID->"caf169dd-32e2-46fd-b498-57d1567efefb",
   CellTags->"Usage",
   CellID->694807545]},
 "Details & Options"->{
  Cell[22091, 413, 927, 21, 53, "Subsection",ExpressionUUID->"5afcd84e-dc26-4f7d-a8e0-4151120aac0c",
   CellTags->"Details & Options",
   CellID->29639701]},
 "Examples"->{
  Cell[110839, 1902, 1026, 22, 67, "Section",ExpressionUUID->"99f33a5b-6d1a-4d29-b452-d88e57981af7",
   CellTags->"Examples",
   CellID->847663398]},
 "Source & Additional Information"->{
  Cell[714734, 14130, 190, 3, 67, "Section",ExpressionUUID->"267208d6-9abd-491e-b57f-505d613eb382",
   CellTags->"Source & Additional Information",
   CellID->318391102]},
 "Contributed By"->{
  Cell[714949, 14137, 785, 19, 53, "Subsection",ExpressionUUID->"31c04db3-bcb1-4ab4-83f2-b79898041982",
   CellTags->"Contributed By",
   CellID->757508554]},
 "Keywords"->{
  Cell[716338, 14172, 738, 19, 53, "Subsection",ExpressionUUID->"c70c0415-2ff2-44d3-9538-6037b499274c",
   CellTags->"Keywords",
   CellID->246422893]},
 "Related Symbols"->{
  Cell[718283, 14218, 775, 19, 53, "Subsection",ExpressionUUID->"3066a172-9441-4d33-aa09-175a783b6b93",
   CellTags->"Related Symbols",
   CellID->911170439]},
 "Related Resource Objects"->{
  Cell[719061, 14239, 815, 19, 37, "Subsection",ExpressionUUID->"37ab175d-0b39-428d-9bf8-09a2e7a5413c",
   CellTags->"Related Resource Objects",
   CellID->217060377]},
 "Source/Reference Citation"->{
  Cell[719901, 14262, 868, 20, 37, "Subsection",ExpressionUUID->"c9f6b352-fea5-4a86-9c1d-b83a7adb63ec",
   CellTags->"Source/Reference Citation",
   CellID->967310595]},
 "Links"->{
  Cell[721359, 14297, 710, 18, 53, "Subsection",ExpressionUUID->"627355a6-504d-4b89-a0cf-9880527975be",
   CellTags->"Links",
   CellID->593846556]},
 "Tests"->{
  Cell[722853, 14335, 880, 21, 53, "Subsection",ExpressionUUID->"8f70b857-c5b7-4080-be57-4168dd702d56",
   CellTags->"Tests",
   CellID->16051757]},
 "Author Notes"->{
  Cell[724145, 14374, 182, 4, 67, "Section",ExpressionUUID->"80b9fc61-ae03-41fe-8e0f-009cf5850cd2",
   CellTags->"Author Notes",
   CellID->795110225]},
 "Submission Notes"->{
  Cell[724330, 14380, 833, 20, 53, "Section",ExpressionUUID->"e954cab1-c576-4727-8660-eaec1da22342",
   CellTags->"Submission Notes",
   CellID->843283583]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 1457874, 26895},
 {"TabNext", 1458039, 26899},
 {"Description", 1459525, 26930},
 {"Definition", 1459697, 26934},
 {"Documentation", 1459864, 26938},
 {"Usage", 1460027, 26942},
 {"Details & Options", 1460198, 26946},
 {"Examples", 1460371, 26950},
 {"Source & Additional Information", 1460559, 26954},
 {"Contributed By", 1460752, 26958},
 {"Keywords", 1460926, 26962},
 {"Related Symbols", 1461101, 26966},
 {"Related Resource Objects", 1461292, 26970},
 {"Source/Reference Citation", 1461493, 26974},
 {"Links", 1461675, 26978},
 {"Tests", 1461837, 26982},
 {"Author Notes", 1462005, 26986},
 {"Submission Notes", 1462181, 26990}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 597, 9, 96, "Title",ExpressionUUID->"73472f8a-f7dc-4453-892e-7bd885afa486",
 CellTags->{"Title", "TabNext"},
 CellID->771812398],
Cell[1180, 33, 614, 9, 34, "Text",ExpressionUUID->"818c9d18-1fdb-46b1-ae36-5eecc923be6c",
 CellTags->{"Description", "TabNext"},
 CellID->7981612],
Cell[CellGroupData[{
Cell[1819, 46, 990, 22, 67, "Section",ExpressionUUID->"fc15ea8e-4c8c-4b7e-84a2-2d3c3b382f27",
 CellTags->"Definition",
 CellID->608264297],
Cell[2812, 70, 17452, 283, 4931, "Input",ExpressionUUID->"dcce6857-68e7-47ad-b490-db3e1a3c706a",
 CellTags->"TabNext",
 CellID->77889823]
}, Open  ]],
Cell[CellGroupData[{
Cell[20301, 358, 154, 3, 67, "Section",ExpressionUUID->"b59baf49-7dce-411d-b149-217444b9fb20",
 CellTags->"Documentation",
 CellID->855965831],
Cell[CellGroupData[{
Cell[20480, 365, 896, 21, 53, "Subsection",ExpressionUUID->"caf169dd-32e2-46fd-b498-57d1567efefb",
 CellTags->"Usage",
 CellID->694807545],
Cell[CellGroupData[{
Cell[21401, 390, 254, 5, 26, "UsageInputs",ExpressionUUID->"676f203c-f44a-4324-b460-0b8e44d77b2c",
 CellTags->"TabNext",
 CellID->523254948],
Cell[21658, 397, 384, 10, 26, "UsageDescription",ExpressionUUID->"b427ea9b-46e6-41b3-8aca-a1071e5c821f",
 CellTags->"TabNext",
 CellID->677074461]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22091, 413, 927, 21, 53, "Subsection",ExpressionUUID->"5afcd84e-dc26-4f7d-a8e0-4151120aac0c",
 CellTags->"Details & Options",
 CellID->29639701],
Cell[CellGroupData[{
Cell[23043, 438, 604, 9, 31, "Notes",ExpressionUUID->"c15cbd8a-6158-4df3-8989-008064de997e",
 CellTags->"TabNext",
 CellID->533233984],
Cell[23650, 449, 637, 9, 31, "Notes",ExpressionUUID->"fbbff408-ce9c-42a9-8da8-6df0489ef020",
 CellID->181442125],
Cell[24290, 460, 62733, 1037, 84, "Notes",ExpressionUUID->"8f619629-a70e-466c-a217-b0ddeabae641",
 CellID->43597922],
Cell[87026, 1499, 23752, 396, 85, "Notes",ExpressionUUID->"689360e7-3382-42ae-b2fb-a7da873efac5",
 CellID->277434961]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110839, 1902, 1026, 22, 67, "Section",ExpressionUUID->"99f33a5b-6d1a-4d29-b452-d88e57981af7",
 CellTags->"Examples",
 CellID->847663398],
Cell[CellGroupData[{
Cell[111890, 1928, 111, 1, 53, "Subsection",ExpressionUUID->"34d263ff-b782-4f11-9f52-5b080caf55f2",
 CellID->202476530],
Cell[112004, 1931, 163, 2, 34, "Text",ExpressionUUID->"d98b6643-0d95-4399-87a7-5cee591758b4",
 CellID->129491836],
Cell[CellGroupData[{
Cell[112192, 1937, 397, 10, 28, "Input",ExpressionUUID->"9e169680-ab0d-4502-b26a-256a59e61b56",
 CellID->178987041],
Cell[112592, 1949, 46293, 794, 440, "Output",ExpressionUUID->"3899ab3c-56ae-4e8a-bf21-cd3dd06d1fe6",
 CellID->464853532]
}, Open  ]],
Cell[158900, 2746, 177, 2, 34, "Text",ExpressionUUID->"d23fc396-703e-4e6a-8e3d-685a35048223",
 CellID->1325452],
Cell[CellGroupData[{
Cell[159102, 2752, 321, 7, 28, "Input",ExpressionUUID->"a2370c4b-c78d-49bf-b976-5b18a22b9974",
 CellID->298041645],
Cell[159426, 2761, 63291, 1396, 576, "Output",ExpressionUUID->"bbb07096-2ae2-4276-aac1-fac41235c068",
 CellID->138724145]
}, Open  ]],
Cell[222732, 4160, 152, 2, 34, "Text",ExpressionUUID->"cf9a9c8e-e401-48cf-80b1-676bc567c70a",
 CellID->142109952],
Cell[CellGroupData[{
Cell[222909, 4166, 255, 4, 28, "Input",ExpressionUUID->"09cb585a-2334-4e2f-b0cf-841ccf10dabf",
 CellID->195532539],
Cell[223167, 4172, 15816, 264, 234, "Output",ExpressionUUID->"4f691337-95f1-4ab1-a1ad-da3110f14da5",
 CellID->3563123]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239032, 4442, 102, 1, 53, "Subsection",ExpressionUUID->"273b84a3-a414-492e-a261-fb7153e00d70",
 CellID->926027919],
Cell[239137, 4445, 232, 3, 34, "Text",ExpressionUUID->"3489c9c5-7e1a-4f61-b9c5-b1018564aa63",
 CellID->161711952],
Cell[CellGroupData[{
Cell[239394, 4452, 336, 8, 28, "Input",ExpressionUUID->"3c137b72-137d-41e5-8dba-c7571531a8f8",
 CellID->10910897],
Cell[239733, 4462, 44084, 825, 310, "Output",ExpressionUUID->"f1231d24-fc1c-4ae0-87be-bf396e649de3",
 CellID->48954702]
}, Open  ]],
Cell[283832, 5290, 174, 2, 34, "Text",ExpressionUUID->"97463e60-49a3-4a02-8333-9e88e8888ebd",
 CellID->459530256],
Cell[CellGroupData[{
Cell[284031, 5296, 3413, 97, 124, "Input",ExpressionUUID->"ff531b64-dc83-4df6-b188-cb059a30a833",
 CellID->104344366],
Cell[287447, 5395, 348269, 7414, 560, "Output",ExpressionUUID->"574fccd4-c93d-4074-bc70-d3c9d18354d2",
 CellID->56162496]
}, Open  ]],
Cell[635731, 12812, 174, 2, 34, "Text",ExpressionUUID->"8574b58a-c877-4618-82eb-f67913784bc5",
 CellID->787872977],
Cell[CellGroupData[{
Cell[635930, 12818, 346, 8, 28, "Input",ExpressionUUID->"70a60a5f-1278-4372-b2e6-929d0b566b04",
 CellID->103037031],
Cell[636279, 12828, 78394, 1295, 724, "Output",ExpressionUUID->"0c700566-3000-4a9e-a998-768b804966bd",
 CellID->37960555]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[714734, 14130, 190, 3, 67, "Section",ExpressionUUID->"267208d6-9abd-491e-b57f-505d613eb382",
 CellTags->"Source & Additional Information",
 CellID->318391102],
Cell[CellGroupData[{
Cell[714949, 14137, 785, 19, 53, "Subsection",ExpressionUUID->"31c04db3-bcb1-4ab4-83f2-b79898041982",
 CellTags->"Contributed By",
 CellID->757508554],
Cell[715737, 14158, 564, 9, 34, "Text",ExpressionUUID->"419cd336-9eb2-4365-a52a-49e7845068a3",
 CellTags->"TabNext",
 CellID->91771009]
}, Open  ]],
Cell[CellGroupData[{
Cell[716338, 14172, 738, 19, 53, "Subsection",ExpressionUUID->"c70c0415-2ff2-44d3-9538-6037b499274c",
 CellTags->"Keywords",
 CellID->246422893],
Cell[CellGroupData[{
Cell[717101, 14195, 584, 9, 31, "Item",ExpressionUUID->"bbe974ee-0936-41d7-981d-b26af756cde9",
 CellTags->"TabNext",
 CellID->14386224],
Cell[717688, 14206, 568, 8, 31, "Item",ExpressionUUID->"eb97da38-2447-402d-abdb-96e10d1f70de",
 CellID->370221383]
}, Open  ]]
}, Open  ]],
Cell[718283, 14218, 775, 19, 53, "Subsection",ExpressionUUID->"3066a172-9441-4d33-aa09-175a783b6b93",
 CellTags->"Related Symbols",
 CellID->911170439],
Cell[719061, 14239, 815, 19, 37, "Subsection",ExpressionUUID->"37ab175d-0b39-428d-9bf8-09a2e7a5413c",
 CellTags->"Related Resource Objects",
 CellID->217060377],
Cell[CellGroupData[{
Cell[719901, 14262, 868, 20, 37, "Subsection",ExpressionUUID->"c9f6b352-fea5-4a86-9c1d-b83a7adb63ec",
 CellTags->"Source/Reference Citation",
 CellID->967310595],
Cell[720772, 14284, 550, 8, 34, "Text",ExpressionUUID->"fb6f69f0-9e4e-4f76-86c9-c1ce7742a4e4",
 CellTags->"TabNext",
 CellID->15357238]
}, Open  ]],
Cell[CellGroupData[{
Cell[721359, 14297, 710, 18, 53, "Subsection",ExpressionUUID->"627355a6-504d-4b89-a0cf-9880527975be",
 CellTags->"Links",
 CellID->593846556],
Cell[722072, 14317, 744, 13, 31, "Item",ExpressionUUID->"2130d5f7-dc04-44e0-a239-918be203615c",
 CellTags->"TabNext",
 CellID->279316401]
}, Open  ]],
Cell[CellGroupData[{
Cell[722853, 14335, 880, 21, 53, "Subsection",ExpressionUUID->"8f70b857-c5b7-4080-be57-4168dd702d56",
 CellTags->"Tests",
 CellID->16051757],
Cell[CellGroupData[{
Cell[723758, 14360, 183, 4, 28, "Input",ExpressionUUID->"7bb5fadc-4d77-4da1-a427-eef8faf86070",
 CellID->30698557],
Cell[723944, 14366, 162, 3, 32, "Output",ExpressionUUID->"610c0ecc-63d8-4187-92dd-7fc26c6a82ae",
 CellID->623803874]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[724145, 14374, 182, 4, 67, "Section",ExpressionUUID->"80b9fc61-ae03-41fe-8e0f-009cf5850cd2",
 CellTags->"Author Notes",
 CellID->795110225],
Cell[724330, 14380, 833, 20, 53, "Section",ExpressionUUID->"e954cab1-c576-4727-8660-eaec1da22342",
 CellTags->"Submission Notes",
 CellID->843283583]
}, Open  ]]
}
]
*)

